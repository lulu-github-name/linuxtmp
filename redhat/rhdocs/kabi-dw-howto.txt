The kabi-dw is the tool for ABI comparison based on the DWARF debugging data
generated by gcc. You can always use the tool directly, look at
redhat/kabi-dwarf/run_kabi-dw.sh for simple shell script executing the tool.
However there are two intended ways to use the tool through the Makefiles or
kernel.spec file:

1) As a kernel developer running a local quick build you do:

$ make && make modules
$ make rh-kabi-dw-base  # To create the baseline kABI dataset
$ <apply your patch here>
$ make && make modules
$ make rh-kabi-dw-check # To generate a new dataset and compare it with the
		    # one stored previously

2) As a kernel maintainer preparing official build you generate the baseline
dataset for all arches by building with BUILDOPTS="+kabidw_base", e.g.:

make rh-brew BUILDOPTS="+kabidw_base"

Then you run a (scratch) brew build which will generate following sub-package
for all supported arches:

kernel-kabidw-base

The package contains the baseline dataset generated for all supported arches. If
the content of these subpackages is copied from /kabidw-base directory into the
redhat/kabi-dwarf/base directory of the kernel tree the following brew builds
will issue the comparison of the build with the baseline dataset. The report in
the brew build.log looks like this:

**** kABI DWARF-based comparison report ****
+ /builddir/build/BUILDROOT/kernel-3.10.0-681.el7.test.x86_64/kabi-dwarf/run_kabi-dw.sh compare /builddir/build/BUILDROOT/kernel-3.10.0-681.el7.test.x86_64/kabi-dwarf/base/x86_64 /builddir/build/BUILDROOT/kernel-3.10.0-681.el7.test.x86_64/kabi-dwarf/base/x86_64.tmp
Changes detected in: struct--pacct_struct.txt
Added:
+0x38 int this_is_newly_add_field_for_testing;
**** End of kABI DWARF-based comparison report ****
