# We have to override the new %%install behavior because, well... the kernel is special.
%global __spec_install_pre %{___build_pre}

Summary: The Linux kernel

# For a kernel released for public testing, released_kernel should be 1.
# For internal testing builds during development, it should be 0.
%global released_kernel %%RELEASED_KERNEL%%

%global distro_build %%DISTRO_BUILD%%

# Sign modules on x86.  Make sure the config files match this setting if more
# architectures are added.
%ifarch x86_64
%global signkernel 1
%global signmodules 1
%global zipmodules 1
%else
%global signkernel 0
%global signmodules 1
%global zipmodules 1
%endif

%if %{zipmodules}
%global zipsed -e 's/\.ko$/\.ko.xz/'
%endif

# define buildid .local

%define rpmversion %%KVERSION%%.%%KPATCHLEVEL%%.%%KSUBLEVEL%%
%define pkgrelease %%PKGRELEASE%%

# allow pkg_release to have configurable %%{?dist} tag
%define specrelease %%SPECRELEASE%%

%define pkg_release %{specrelease}%{?buildid}

# What parts do we want to build?  We must build at least one kernel.
# These are the kernels that are built IF the architecture allows it.
# All should default to 1 (enabled) and be flipped to 0 (disabled)
# by later arch-specific checks.

# The following build options are enabled by default.
# Use either --without <opt> in your rpmbuild command or force values
# to 0 in here to disable them.
#
# standard kernel
%define with_up        %{?_without_up:        0} %{?!_without_up:        1}
# kernel-debug
%define with_debug     %{?_without_debug:     0} %{?!_without_debug:     1}
# kernel-headers
%define with_headers   %{?_without_headers:   0} %{?!_without_headers:   1}
%define with_cross_headers   %{?_without_cross_headers:   0} %{?!_without_cross_headers:   1}
# perf
%define with_perf      %{?_without_perf:      0} %{?!_without_perf:      1}
# tools
%define with_tools     %{?_without_tools:     0} %{?!_without_tools:     1}
# bpf tool
%define with_bpftool   %{?_without_bpftool:   0} %{?!_without_bpftool:   1}
# kernel-debuginfo
%define with_debuginfo %{?_without_debuginfo: 0} %{?!_without_debuginfo: 1}
# Want to build a the vsdo directories installed
%define with_vdso_install %{?_without_vdso_install: 0} %{?!_without_vdso_install: 1}
# kernel-zfcpdump (s390 specific kernel for zfcpdump)
%define with_zfcpdump  %{?_without_zfcpdump:  0} %{?!_without_zfcpdump:  1}
# kernel-abi-whitelists
%define with_kernel_abi_whitelists %{?_without_kernel_abi_whitelists: 0} %{?!_without_kernel_abi_whitelists: 1}
#
# Additional options for user-friendly one-off kernel building:
#
# Only build the base kernel (--with baseonly):
%define with_baseonly  %{?_with_baseonly:     1} %{?!_with_baseonly:     0}
# Only build the debug kernel (--with dbgonly):
%define with_dbgonly   %{?_with_dbgonly:      1} %{?!_with_dbgonly:      0}
# Control whether we perform a compat. check against published ABI.
%define with_kabichk   %{?_without_kabichk:   0} %{?!_without_kabichk:   1}
# Control whether we perform a compat. check against DUP ABI.
%define with_kabidupchk %{?_with_kabidupchk:  1} %{?!_with_kabidupchk:   0}
#
# should we do C=1 builds with sparse
%define with_sparse    %{?_with_sparse:       1} %{?!_with_sparse:       0}
#
# Cross compile requested?
%define with_cross    %{?_with_cross:         1} %{?!_with_cross:        0}
#
# build a release kernel on rawhide
%define with_release   %{?_with_release:      1} %{?!_with_release:      0}

# The kernel tarball/base version
%define kversion %%KVERSION%%.%%KPATCHLEVEL%%

%define with_gcov %{?_with_gcov: 1} %{?!_with_gcov: 0}

# turn off debug kernel and kabichk for gcov builds
%if %{with_gcov}
%define with_debug 0
%define with_kabichk 0
%define with_kabidupchk 0
%endif

%define make_target bzImage
%define image_install_path boot

%define KVERREL %{version}-%{release}.%{_target_cpu}
%define KVERREL_RE %(echo %KVERREL | sed 's/+/[+]/g')
%define hdrarch %_target_cpu
%define asmarch %_target_cpu

%if !%{with_debuginfo}
%define _enable_debug_packages 0
%endif
%define debuginfodir /usr/lib/debug
# Needed because we override almost everything involving build-ids
# and debuginfo generation. Currently we rely on the old alldebug setting.
%global _build_id_links alldebug

# if requested, only build base kernel
%if %{with_baseonly}
%define with_debug 0
%endif

# if requested, only build debug kernel
%if %{with_dbgonly}
%define with_up 0
%define with_tools 0
%define with_perf 0
%define with_bpftool 0
%endif

# turn off kABI DUP check if kABI check is disabled
%if !%{with_kabichk}
%define with_kabidupchk 0
%endif

%ifnarch noarch
%define with_kernel_abi_whitelists 0
%endif

# Overrides for generic default options

# don't build noarch kernels or headers (duh)
%ifarch noarch
%define with_up 0
%define with_headers 0
%define with_cross_headers 0
%define with_tools 0
%define with_perf 0
%define with_bpftool 0
%define with_debug 0
%define all_arch_configs kernel-%{version}-*.config
%endif

# sparse blows up on ppc
%ifnarch ppc64le
%define with_sparse 0
%endif

# zfcpdump mechanism is s390 only
%ifnarch s390x
%define with_zfcpdump 0
%endif

# Per-arch tweaks

%ifarch i686
%define asmarch x86
%define hdrarch i386
%endif

%ifarch x86_64
%define asmarch x86
%define all_arch_configs kernel-%{version}-x86_64*.config
%define kernel_image arch/x86/boot/bzImage
%endif

%ifarch ppc64le
%define asmarch powerpc
%define hdrarch powerpc
%define make_target vmlinux
%define kernel_image vmlinux
%define kernel_image_elf 1
%define all_arch_configs kernel-%{version}-ppc64le*.config
%define kcflags -O3
%endif

%ifarch s390x
%define asmarch s390
%define hdrarch s390
%define all_arch_configs kernel-%{version}-s390x.config
%define kernel_image arch/s390/boot/bzImage
%define with_tools 0
%endif

%ifarch aarch64
%define all_arch_configs kernel-%{version}-aarch64*.config
%define asmarch arm64
%define hdrarch arm64
%define make_target Image.gz
%define kernel_image arch/arm64/boot/Image.gz
%endif

# To temporarily exclude an architecture from being built, add it to
# %%nobuildarches. Do _NOT_ use the ExclusiveArch: line, because if we
# don't build kernel-headers then the new build system will no longer let
# us use the previous build of that package -- it'll just be completely AWOL.
# Which is a BadThing(tm).

# We only build kernel-headers on the following...
%define nobuildarches i386 i686

%ifarch %nobuildarches
%define with_up 0
%define with_debug 0
%define with_debuginfo 0
%define with_perf 0
%define with_tools 0
%define with_bpftool 0
%define _enable_debug_packages 0
%endif

# Architectures we build tools/cpupower on
%define cpupowerarchs x86_64 ppc64le aarch64


#
# Packages that need to be installed before the kernel is, because the %%post
# scripts use them.
#
%define kernel_prereq  coreutils, systemd >= 203-2, /usr/bin/kernel-install
%define initrd_prereq  dracut >= 027


Name: kernel%{?variant}
Group: System Environment/Kernel
License: GPLv2 and Redistributable, no modification permitted
URL: http://www.kernel.org/
Version: %{rpmversion}
Release: %{pkg_release}
# DO NOT CHANGE THE 'ExclusiveArch' LINE TO TEMPORARILY EXCLUDE AN ARCHITECTURE BUILD.
# SET %%nobuildarches (ABOVE) INSTEAD
ExclusiveArch: noarch i386 i686 x86_64 s390x aarch64 ppc64le
ExclusiveOS: Linux
%ifnarch %{nobuildarches}
Requires: kernel-core-uname-r = %{KVERREL}%{?variant}
Requires: kernel-modules-uname-r = %{KVERREL}%{?variant}
%endif


#
# List the packages used during the kernel build
#
BuildRequires: kmod, patch, bash, sh-utils, tar, git
BuildRequires: bzip2, xz, findutils, gzip, m4, perl-interpreter, perl-Carp, perl-devel, perl-generators, make, diffutils, gawk
BuildRequires: gcc, binutils, redhat-rpm-config, hmaccalc, python3-devel
BuildRequires: net-tools, hostname, bc, bison, flex, elfutils-devel
%if %{with_sparse}
BuildRequires: sparse
%endif
%if %{with_perf}
BuildRequires: zlib-devel binutils-devel newt-devel perl(ExtUtils::Embed) bison flex xz-devel
BuildRequires: audit-libs-devel
%ifnarch s390x
BuildRequires: numactl-devel
%endif
%endif
%if %{with_tools}
BuildRequires: pciutils-devel gettext ncurses-devel
%endif
%if %{with_bpftool}
BuildRequires: python3-docutils
BuildRequires: zlib-devel binutils-devel
%endif
BuildConflicts: rhbuildsys(DiskFree) < 500Mb
%if %{with_debuginfo}
BuildRequires: rpm-build, elfutils
BuildConflicts: rpm < 4.13.0.1-19
# Most of these should be enabled after more investigation
%undefine _include_minidebuginfo
%undefine _find_debuginfo_dwz_opts
%undefine _unique_build_ids
%undefine _unique_debug_names
%undefine _unique_debug_srcs
%undefine _debugsource_packages
%undefine _debuginfo_subpackages
%undefine _include_gdb_index
%global _find_debuginfo_opts -r
%global _missing_build_ids_terminate_build 1
%global _no_recompute_build_ids 1
%endif

%if %{signkernel}%{signmodules}
BuildRequires: openssl openssl-devel
%if %{signkernel}
BuildRequires: nss-tools
BuildRequires: pesign >= 0.10-4
%endif
%endif

%if %{with_cross}
BuildRequires: binutils-%{_build_arch}-linux-gnu, gcc-%{_build_arch}-linux-gnu
%define cross_opts CROSS_COMPILE=%{_build_arch}-linux-gnu-
%endif

# These below are required to build man pages
%if %{with_perf}
BuildRequires: xmlto
%endif
%if %{with_perf} || %{with_tools}
BuildRequires: asciidoc
%endif

Source0: linux-%{rpmversion}-%{pkgrelease}.tar.xz

Source11: x509.genkey
%if %{?released_kernel}
Source13: securebootca.cer
Source14: secureboot.cer
%define pesign_name redhatsecureboot301
%else
Source13: redhatsecurebootca2.cer
Source14: redhatsecureboot003.cer
%define pesign_name redhatsecureboot003
%endif
Source16: mod-extra.list
Source17: mod-extra.sh
Source18: mod-sign.sh
Source90: filter-x86_64.sh
Source93: filter-aarch64.sh
Source96: filter-ppc64le.sh
Source97: filter-s390x.sh
Source99: filter-modules.sh
%define modsign_cmd %{SOURCE18}

Source20: kernel-aarch64.config
Source21: kernel-aarch64-debug.config
Source32: kernel-ppc64le.config
Source33: kernel-ppc64le-debug.config
Source36: kernel-s390x.config
Source37: kernel-s390x-debug.config
Source38: kernel-s390x-zfcpdump.config
Source39: kernel-x86_64.config
Source40: kernel-x86_64-debug.config
Source41: generate_all_configs.sh

Source42: process_configs.sh
Source43: generate_bls_conf.sh

Source200: check-kabi

Source201: Module.kabi_aarch64
Source202: Module.kabi_ppc64le
Source203: Module.kabi_s390x
Source204: Module.kabi_x86_64

Source210: Module.kabi_dup_aarch64
Source211: Module.kabi_dup_ppc64le
Source212: Module.kabi_dup_s390x
Source213: Module.kabi_dup_x86_64

Source300: kernel-abi-whitelists-%{rpmversion}-%{distro_build}.tar.bz2

# Sources for kernel-tools
Source2000: cpupower.service
Source2001: cpupower.config

## Patches needed for building this package

# END OF PATCH DEFINITIONS

BuildRoot: %{_tmppath}/kernel-%{KVERREL}-root

%description
The kernel meta package

#
# This macro does requires, provides, conflicts, obsoletes for a kernel package.
#	%%kernel_reqprovconf <subpackage>
# It uses any kernel_<subpackage>_conflicts and kernel_<subpackage>_obsoletes
# macros defined above.
#
%define kernel_reqprovconf \
Provides: kernel = %{rpmversion}-%{pkg_release}\
Provides: kernel-%{_target_cpu} = %{rpmversion}-%{pkg_release}%{?1:+%{1}}\
Provides: kernel-drm-nouveau = 16\
Provides: kernel-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Requires(pre): %{kernel_prereq}\
Requires(pre): %{initrd_prereq}\
Requires(pre): linux-firmware >= 20150904-56.git6ebf5d57\
Requires(preun): systemd >= 200\
Conflicts: xfsprogs < 4.3.0-1\
Conflicts: xorg-x11-drv-vmmouse < 13.0.99\
%{expand:%%{?kernel%{?1:_%{1}}_conflicts:Conflicts: %%{kernel%{?1:_%{1}}_conflicts}}}\
%{expand:%%{?kernel%{?1:_%{1}}_obsoletes:Obsoletes: %%{kernel%{?1:_%{1}}_obsoletes}}}\
%{expand:%%{?kernel%{?1:_%{1}}_provides:Provides: %%{kernel%{?1:_%{1}}_provides}}}\
# We can't let RPM do the dependencies automatic because it'll then pick up\
# a correct but undesirable perl dependency from the module headers which\
# isn't required for the kernel proper to function\
AutoReq: no\
AutoProv: yes\
%{nil}

%package headers
Summary: Header files for the Linux kernel for use by glibc
Group: Development/System
Obsoletes: glibc-kernheaders < 3.0-46
Provides: glibc-kernheaders = 3.0-46
%if "0%{?variant}"
Obsoletes: kernel-headers < %{rpmversion}-%{pkg_release}
Provides: kernel-headers = %{rpmversion}-%{pkg_release}
%endif
%description headers
Kernel-headers includes the C header files that specify the interface
between the Linux kernel and userspace libraries and programs.  The
header files define structures and constants that are needed for
building most standard programs and are also needed for rebuilding the
glibc package.

%package cross-headers
Summary: Header files for the Linux kernel for use by cross-glibc
Group: Development/System
%description cross-headers
Kernel-cross-headers includes the C header files that specify the interface
between the Linux kernel and userspace libraries and programs.  The
header files define structures and constants that are needed for
building most standard programs and are also needed for rebuilding the
cross-glibc package.


%package debuginfo-common-%{_target_cpu}
Summary: Kernel source files used by %{name}-debuginfo packages
Group: Development/Debug
Provides: installonlypkg(kernel)
%description debuginfo-common-%{_target_cpu}
This package is required by %{name}-debuginfo subpackages.
It provides the kernel source files common to all builds.

%if %{with_perf}
%package -n perf
Summary: Performance monitoring for the Linux kernel
Group: Development/System
License: GPLv2
%description -n perf
This package contains the perf tool, which enables performance monitoring
of the Linux kernel.

%package -n perf-debuginfo
Summary: Debug information for package perf
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n perf-debuginfo
This package provides debug information for the perf package.

# Note that this pattern only works right to match the .build-id
# symlinks because of the trailing nonmatching alternation and
# the leading .*, because of find-debuginfo.sh's buggy handling
# of matching the pattern against the symlinks file.
%{expand:%%global _find_debuginfo_opts %{?_find_debuginfo_opts} -p '.*%%{_bindir}/perf(\.debug)?|.*%%{_libexecdir}/perf-core/.*|.*%%{_libdir}/traceevent/plugins/.*|XXX' -o perf-debuginfo.list}

%package -n python3-perf
Summary: Python bindings for apps which will manipulate perf events
Group: Development/Libraries
%description -n python3-perf
The python3-perf package contains a module that permits applications
written in the Python programming language to use the interface
to manipulate perf events.

%package -n python3-perf-debuginfo
Summary: Debug information for package perf python bindings
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n python3-perf-debuginfo
This package provides debug information for the perf python bindings.

# the python_sitearch macro should already be defined from above
%{expand:%%global _find_debuginfo_opts %{?_find_debuginfo_opts} -p '.*%%{python3_sitearch}/perf.*so(\.debug)?|XXX' -o python3-perf-debuginfo.list}


%endif # with_perf

%if %{with_tools}
%package -n kernel-tools
Summary: Assortment of tools for the Linux kernel
Group: Development/System
License: GPLv2
Provides:  cpupowerutils = 1:009-0.6.p1
Obsoletes: cpupowerutils < 1:009-0.6.p1
Provides:  cpufreq-utils = 1:009-0.6.p1
Provides:  cpufrequtils = 1:009-0.6.p1
Obsoletes: cpufreq-utils < 1:009-0.6.p1
Obsoletes: cpufrequtils < 1:009-0.6.p1
Obsoletes: cpuspeed < 1:1.5-16
Requires: kernel-tools-libs = %{version}-%{release}
%define __requires_exclude ^%{_bindir}/python
%description -n kernel-tools
This package contains the tools/ directory from the kernel source
and the supporting documentation.

%package -n kernel-tools-libs
Summary: Libraries for the kernels-tools
Group: Development/System
License: GPLv2
%description -n kernel-tools-libs
This package contains the libraries built from the tools/ directory
from the kernel source.

%package -n kernel-tools-libs-devel
Summary: Assortment of tools for the Linux kernel
Group: Development/System
License: GPLv2
Requires: kernel-tools = %{version}-%{release}
Provides:  cpupowerutils-devel = 1:009-0.6.p1
Obsoletes: cpupowerutils-devel < 1:009-0.6.p1
Requires: kernel-tools-libs = %{version}-%{release}
Provides: kernel-tools-devel
%description -n kernel-tools-libs-devel
This package contains the development files for the tools/ directory from
the kernel source.

%package -n kernel-tools-debuginfo
Summary: Debug information for package kernel-tools
Group: Development/Debug
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}
AutoReqProv: no
%description -n kernel-tools-debuginfo
This package provides debug information for package kernel-tools.

# Note that this pattern only works right to match the .build-id
# symlinks because of the trailing nonmatching alternation and
# the leading .*, because of find-debuginfo.sh's buggy handling
# of matching the pattern against the symlinks file.
%{expand:%%global _find_debuginfo_opts %{?_find_debuginfo_opts} -p '.*%%{_bindir}/centrino-decode(\.debug)?|.*%%{_bindir}/powernow-k8-decode(\.debug)?|.*%%{_bindir}/cpupower(\.debug)?|.*%%{_libdir}/libcpupower.*|.*%%{_bindir}/turbostat(\.debug)?|.*%%{_bindir}/x86_energy_perf_policy(\.debug)?|.*%%{_bindir}/tmon(\.debug)?|.*%%{_bindir}/lsgpio(\.debug)?|.*%%{_bindir}/gpio-hammer(\.debug)?|.*%%{_bindir}/gpio-event-mon(\.debug)?|.*%%{_bindir}/iio_event_monitor(\.debug)?|.*%%{_bindir}/iio_generic_buffer(\.debug)?|.*%%{_bindir}/lsiio(\.debug)?|XXX' -o kernel-tools-debuginfo.list}

%endif # with_tools

%if %{with_bpftool}

%package -n bpftool
Summary: Inspection and simple manipulation of eBPF programs and maps
License: GPLv2
%description -n bpftool
This package contains the bpftool, which allows inspection and simple
manipulation of eBPF programs and maps.

%endif # with_bpftool

%if %{with_gcov}
%package gcov
Summary: gcov graph and source files for coverage data collection.
Group: Development/System
%description gcov
kernel-gcov includes the gcov graph and source files for gcov coverage collection.
%endif

%package -n kernel-abi-whitelists
Summary: The Red Hat Enterprise Linux kernel ABI symbol whitelists
Group: System Environment/Kernel
AutoReqProv: no
%description -n kernel-abi-whitelists
The kABI package contains information pertaining to the Red Hat Enterprise
Linux kernel ABI, including lists of kernel symbols that are needed by
external Linux kernel modules, and a yum plugin to aid enforcement.

#
# This macro creates a kernel-<subpackage>-debuginfo package.
#	%%kernel_debuginfo_package <subpackage>
#
%define kernel_debuginfo_package() \
%package %{?1:%{1}-}debuginfo\
Summary: Debug information for package %{name}%{?1:-%{1}}\
Group: Development/Debug\
Requires: %{name}-debuginfo-common-%{_target_cpu} = %{version}-%{release}\
Provides: %{name}%{?1:-%{1}}-debuginfo-%{_target_cpu} = %{version}-%{release}\
Provides: installonlypkg(kernel)\
AutoReqProv: no\
%description %{?1:%{1}-}debuginfo\
This package provides debug information for package %{name}%{?1:-%{1}}.\
This is required to use SystemTap with %{name}%{?1:-%{1}}-%{KVERREL}.\
%{expand:%%global _find_debuginfo_opts %{?_find_debuginfo_opts} -p '/.*/%%{KVERREL_RE}%{?1:[+]%{1}}/.*|/.*%%{KVERREL_RE}%{?1:\+%{1}}(\.debug)?' -o debuginfo%{?1}.list}\
%{nil}

#
# This macro creates a kernel-<subpackage>-devel package.
#	%%kernel_devel_package <subpackage> <pretty-name>
#
%define kernel_devel_package() \
%package %{?1:%{1}-}devel\
Summary: Development package for building kernel modules to match the %{?2:%{2} }kernel\
Group: System Environment/Kernel\
Provides: kernel%{?1:-%{1}}-devel-%{_target_cpu} = %{version}-%{release}\
Provides: kernel-devel-%{_target_cpu} = %{version}-%{release}%{?1:+%{1}}\
Provides: kernel-devel-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Provides: installonlypkg(kernel)\
AutoReqProv: no\
Requires(pre): findutils\
Requires: findutils\
Requires: perl-interpreter\
%description %{?1:%{1}-}devel\
This package provides kernel headers and makefiles sufficient to build modules\
against the %{?2:%{2} }kernel package.\
%{nil}

#
# This macro creates a kernel-<subpackage>-modules-extra package.
#	%%kernel_modules_extra_package <subpackage> <pretty-name>
#
%define kernel_modules_extra_package() \
%package %{?1:%{1}-}modules-extra\
Summary: Extra kernel modules to match the %{?2:%{2} }kernel\
Group: System Environment/Kernel\
Provides: kernel%{?1:-%{1}}-modules-extra-%{_target_cpu} = %{version}-%{release}\
Provides: kernel%{?1:-%{1}}-modules-extra-%{_target_cpu} = %{version}-%{release}%{?1:+%{1}}\
Provides: kernel%{?1:-%{1}}-modules-extra = %{version}-%{release}%{?1:+%{1}}\
Provides: installonlypkg(kernel-module)\
Provides: kernel%{?1:-%{1}}-modules-extra-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Requires: kernel-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Requires: kernel%{?1:-%{1}}-modules-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
AutoReq: no\
AutoProv: yes\
%description %{?1:%{1}-}modules-extra\
This package provides less commonly used kernel modules for the %{?2:%{2} }kernel package.\
%{nil}

#
# This macro creates a kernel-<subpackage>-modules package.
#	%%kernel_modules_package <subpackage> <pretty-name>
#
%define kernel_modules_package() \
%package %{?1:%{1}-}modules\
Summary: kernel modules to match the %{?2:%{2}-}core kernel\
Group: System Environment/Kernel\
Provides: kernel%{?1:-%{1}}-modules-%{_target_cpu} = %{version}-%{release}\
Provides: kernel-modules-%{_target_cpu} = %{version}-%{release}%{?1:+%{1}}\
Provides: kernel-modules = %{version}-%{release}%{?1:+%{1}}\
Provides: installonlypkg(kernel-module)\
Provides: kernel%{?1:-%{1}}-modules-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Requires: kernel-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
AutoReq: no\
AutoProv: yes\
%description %{?1:%{1}-}modules\
This package provides commonly used kernel modules for the %{?2:%{2}-}core kernel package.\
%{nil}

#
# this macro creates a kernel-<subpackage> meta package.
#	%%kernel_meta_package <subpackage>
#
%define kernel_meta_package() \
%package %{1}\
summary: kernel meta-package for the %{1} kernel\
group: system environment/kernel\
Requires: kernel-%{1}-core-uname-r = %{KVERREL}%{?variant}+%{1}\
Requires: kernel-%{1}-modules-uname-r = %{KVERREL}%{?variant}+%{1}\
Provides: installonlypkg(kernel)\
%description %{1}\
The meta-package for the %{1} kernel\
%{nil}

#
# This macro creates a kernel-<subpackage> and its -devel and -debuginfo too.
#	%%define variant_summary The Linux kernel compiled for <configuration>
#	%%kernel_variant_package [-n <pretty-name>] <subpackage>
#
%define kernel_variant_package(n:) \
%package %{?1:%{1}-}core\
Summary: %{variant_summary}\
Group: System Environment/Kernel\
Provides: kernel-%{?1:%{1}-}core-uname-r = %{KVERREL}%{?variant}%{?1:+%{1}}\
Provides: installonlypkg(kernel)\
%{expand:%%kernel_reqprovconf}\
%if %{?1:1} %{!?1:0} \
%{expand:%%kernel_meta_package %{?1:%{1}}}\
%endif\
%{expand:%%kernel_devel_package %{?1:%{1}} %{!?{-n}:%{1}}%{?{-n}:%{-n*}}}\
%{expand:%%kernel_modules_package %{?1:%{1}} %{!?{-n}:%{1}}%{?{-n}:%{-n*}}}\
%{expand:%%kernel_modules_extra_package %{?1:%{1}} %{!?{-n}:%{1}}%{?{-n}:%{-n*}}}\
%{expand:%%kernel_debuginfo_package %{?1:%{1}}}\
%{nil}

# Now, each variant package.

%if %{with_zfcpdump}
%define variant_summary The Linux kernel compiled for zfcpdump usage
%kernel_variant_package zfcpdump
%description zfcpdump-core
The kernel package contains the Linux kernel (vmlinuz) for use by the
zfcpdump infrastructure.
%endif # with_zfcpdump

%define variant_summary The Linux kernel compiled with extra debugging enabled
%kernel_variant_package debug
%description debug-core
The kernel package contains the Linux kernel (vmlinuz), the core of any
Linux operating system.  The kernel handles the basic functions
of the operating system:  memory allocation, process allocation, device
input and output, etc.

This variant of the kernel has numerous debugging options enabled.
It should only be installed when trying to gather additional information
on kernel bugs, as some of these options impact performance noticably.

# And finally the main -core package

%define variant_summary The Linux kernel
%kernel_variant_package
%description core
The kernel package contains the Linux kernel (vmlinuz), the core of any
Linux operating system.  The kernel handles the basic functions
of the operating system: memory allocation, process allocation, device
input and output, etc.


%prep
# do a few sanity-checks for --with *only builds
%if %{with_baseonly}
%if !%{with_up}
echo "Cannot build --with baseonly, up build is disabled"
exit 1
%endif
%endif

# more sanity checking; do it quietly
if [ "%{patches}" != "%%{patches}" ] ; then
  for patch in %{patches} ; do
    if [ ! -f $patch ] ; then
      echo "ERROR: Patch  ${patch##/*/}  listed in specfile but is missing"
      exit 1
    fi
  done
fi 2>/dev/null

patch_command='patch -p1 -F1 -s'
ApplyPatch()
{
  local patch=$1
  shift
  if [ ! -f $RPM_SOURCE_DIR/$patch ]; then
    exit 1
  fi
  if ! grep -E "^Patch[0-9]+: $patch\$" %{_specdir}/${RPM_PACKAGE_NAME%%%%%{?variant}}.spec ; then
    if [ "${patch:0:8}" != "patch-%%KVERSION%%." ] ; then
      echo "ERROR: Patch  $patch  not listed as a source patch in specfile"
      exit 1
    fi
  fi 2>/dev/null
  case "$patch" in
  *.bz2) bunzip2 < "$RPM_SOURCE_DIR/$patch" | $patch_command ${1+"$@"} ;;
  *.gz)  gunzip  < "$RPM_SOURCE_DIR/$patch" | $patch_command ${1+"$@"} ;;
  *.xz)  unxz    < "$RPM_SOURCE_DIR/$patch" | $patch_command ${1+"$@"} ;;
  *) $patch_command ${1+"$@"} < "$RPM_SOURCE_DIR/$patch" ;;
  esac
}

# don't apply patch if it's empty
ApplyOptionalPatch()
{
  local patch=$1
  shift
  if [ ! -f $RPM_SOURCE_DIR/$patch ]; then
    exit 1
  fi
  local C=$(wc -l $RPM_SOURCE_DIR/$patch | awk '{print $1}')
  if [ "$C" -gt 9 ]; then
    ApplyPatch $patch ${1+"$@"}
  fi
}

%setup -q -n kernel-%{rpmversion}-%{pkgrelease} -c
mv linux-%{rpmversion}-%{pkgrelease} linux-%{KVERREL}

cd linux-%{KVERREL}

# END OF PATCH APPLICATIONS

# Any further pre-build tree manipulations happen here.

chmod +x scripts/checkpatch.pl
mv COPYING COPYING-%{version}

# This Prevents scripts/setlocalversion from mucking with our version numbers.
touch .scmversion

# Do not use "ambiguous" python shebangs. RHEL 8 now has a new script
# (/usr/lib/rpm/redhat/brp-mangle-shebangs), which forces us to specify a
# "non-ambiguous" python shebang for scripts we ship in buildroot. This
# script throws an error like below:
# *** ERROR: ambiguous python shebang in /usr/bin/kvm_stat: #!/usr/bin/python. Change it to python3 (or python2) explicitly.
# We patch all sources below for which we got a report/error.
pathfix.py -i %{__python3} -p -n \
	tools/kvm/kvm_stat/kvm_stat \
	scripts/show_delta \
	scripts/diffconfig \
	scripts/bloat-o-meter \
	tools/perf/tests/attr.py \
	tools/perf/scripts/python/stat-cpi.py \
	tools/perf/scripts/python/sched-migration.py

# only deal with configs if we are going to build for the arch
%ifnarch %nobuildarches

if [ -L configs ]; then
	rm -f configs
fi
mkdir configs
cd configs

# Drop some necessary files from the source dir into the buildroot
cp $RPM_SOURCE_DIR/kernel-*.config .
cp %{SOURCE41} .
VERSION=%{version} ./generate_all_configs.sh

%define make make %{?cross_opts}

# enable GCOV kernel config options if gcov is on
%if %{with_gcov}
for i in *.config
do
  sed -i 's/# CONFIG_GCOV_KERNEL is not set/CONFIG_GCOV_KERNEL=y\nCONFIG_GCOV_PROFILE_ALL=y\n/' $i
done
%endif

cp %{SOURCE42} .
./process_configs.sh -w kernel %{rpmversion}

# end of kernel config
%endif

cd ..
# # End of Configs stuff

# get rid of unwanted files resulting from patch fuzz
find . \( -name "*.orig" -o -name "*~" \) -exec rm -f {} \; >/dev/null

# remove unnecessary SCM files
find . -name .gitignore -exec rm -f {} \; >/dev/null

cd ..

###
### build
###
%build

%if %{with_sparse}
%define sparse_mflags	C=1
%endif

cp_vmlinux()
{
  eu-strip --remove-comment -o "$2" "$1"
}

BuildKernel() {
    MakeTarget=$1
    KernelImage=$2
    Flavour=$4
    DoVDSO=$3
    Flav=${Flavour:++${Flavour}}
    InstallName=${5:-vmlinuz}

    DoModules=1
    if [ "$Flavour" = "zfcpdump" ]; then
	    DoModules=0
    fi

    # Pick the right config file for the kernel we're building
    Config=kernel-%{version}-%{_target_cpu}${Flavour:+-${Flavour}}.config
    DevelDir=/usr/src/kernels/%{KVERREL}${Flav}

    # When the bootable image is just the ELF kernel, strip it.
    # We already copy the unstripped file into the debuginfo package.
    if [ "$KernelImage" = vmlinux ]; then
      CopyKernel=cp_vmlinux
    else
      CopyKernel=cp
    fi

    KernelVer=%{version}-%{release}.%{_target_cpu}${Flav}
    echo BUILDING A KERNEL FOR ${Flavour} %{_target_cpu}...

    # make sure EXTRAVERSION says what we want it to say
    perl -p -i -e "s/^EXTRAVERSION.*/EXTRAVERSION = -%{release}.%{_target_cpu}${Flav}/" Makefile

    # and now to start the build process

    make -s mrproper
    cp configs/$Config .config

    %if %{signkernel}%{signmodules}
    cp %{SOURCE11} certs/.
    %endif

    Arch=`head -1 .config | cut -b 3-`
    echo USING ARCH=$Arch

    make -s ARCH=$Arch oldnoconfig >/dev/null
    %{make} -s ARCH=$Arch V=1 %{?_smp_mflags} KCFLAGS="%{?kcflags}" WITH_GCOV="%{?with_gcov}" $MakeTarget %{?sparse_mflags} %{?kernel_mflags}
    if [ $DoModules -eq 1 ]; then
	%{make} -s ARCH=$Arch V=1 %{?_smp_mflags} KCFLAGS="%{?kcflags}" WITH_GCOV="%{?with_gcov}" modules %{?sparse_mflags} || exit 1
    fi

    mkdir -p $RPM_BUILD_ROOT/%{image_install_path}
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer
%if %{with_debuginfo}
    mkdir -p $RPM_BUILD_ROOT%{debuginfodir}/%{image_install_path}
%endif

%ifarch aarch64
    %{make} -s ARCH=$Arch V=1 dtbs dtbs_install INSTALL_DTBS_PATH=$RPM_BUILD_ROOT/%{image_install_path}/dtb-$KernelVer
    cp -r $RPM_BUILD_ROOT/%{image_install_path}/dtb-$KernelVer $RPM_BUILD_ROOT/lib/modules/$KernelVer/dtb
    find arch/$Arch/boot/dts -name '*.dtb' -type f | xargs rm -f
%endif

    # Start installing the results
    install -m 644 .config $RPM_BUILD_ROOT/boot/config-$KernelVer
    install -m 644 .config $RPM_BUILD_ROOT/lib/modules/$KernelVer/config
    install -m 644 System.map $RPM_BUILD_ROOT/boot/System.map-$KernelVer
    install -m 644 System.map $RPM_BUILD_ROOT/lib/modules/$KernelVer/System.map

    # We estimate the size of the initramfs because rpm needs to take this size
    # into consideration when performing disk space calculations. (See bz #530778)
    dd if=/dev/zero of=$RPM_BUILD_ROOT/boot/initramfs-$KernelVer.img bs=1M count=20

    if [ -f arch/$Arch/boot/zImage.stub ]; then
      cp arch/$Arch/boot/zImage.stub $RPM_BUILD_ROOT/%{image_install_path}/zImage.stub-$KernelVer || :
      cp arch/$Arch/boot/zImage.stub $RPM_BUILD_ROOT/lib/modules/$KernelVer/zImage.stub-$KernelVer || :
    fi
    %if %{signkernel}
    # Sign the image if we're using EFI
    %pesign -s -i $KernelImage -o vmlinuz.signed -a %{SOURCE13} -c %{SOURCE14} -n %{pesign_name}
    if [ ! -s vmlinuz.signed ]; then
        echo "pesigning failed"
        exit 1
    fi
    mv vmlinuz.signed $KernelImage
    %endif
    $CopyKernel $KernelImage \
                $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer
    chmod 755 $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer
    cp $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer $RPM_BUILD_ROOT/lib/modules/$KernelVer/$InstallName

    # hmac sign the kernel for FIPS
    echo "Creating hmac file: $RPM_BUILD_ROOT/%{image_install_path}/.vmlinuz-$KernelVer.hmac"
    ls -l $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer
    sha512hmac $RPM_BUILD_ROOT/%{image_install_path}/$InstallName-$KernelVer | sed -e "s,$RPM_BUILD_ROOT,," > $RPM_BUILD_ROOT/%{image_install_path}/.vmlinuz-$KernelVer.hmac;
    cp $RPM_BUILD_ROOT/%{image_install_path}/.vmlinuz-$KernelVer.hmac $RPM_BUILD_ROOT/lib/modules/$KernelVer/.vmlinuz.hmac

    if [ $DoModules -eq 1 ]; then
	# Override $(mod-fw) because we don't want it to install any firmware
	# we'll get it from the linux-firmware package and we don't want conflicts
	%{make} -s ARCH=$Arch INSTALL_MOD_PATH=$RPM_BUILD_ROOT modules_install KERNELRELEASE=$KernelVer mod-fw=
    fi

%if %{with_gcov}
    # install gcov-needed files to $BUILDROOT/$BUILD/...:
    #   gcov_info->filename is absolute path
    #   gcno references to sources can use absolute paths (e.g. in out-of-tree builds)
    #   sysfs symlink targets (set up at compile time) use absolute paths to BUILD dir
    find . \( -name '*.gcno' -o -name '*.[chS]' \) -exec install -D '{}' "$RPM_BUILD_ROOT/$(pwd)/{}" \;
%endif

    if [ $DoVDSO -ne 0 ]; then
        %{make} -s ARCH=$Arch INSTALL_MOD_PATH=$RPM_BUILD_ROOT vdso_install KERNELRELEASE=$KernelVer
        if [ ! -s ldconfig-kernel.conf ]; then
          echo > ldconfig-kernel.conf "\
    # Placeholder file, no vDSO hwcap entries used in this kernel."
        fi
        %{__install} -D -m 444 ldconfig-kernel.conf \
            $RPM_BUILD_ROOT/etc/ld.so.conf.d/kernel-$KernelVer.conf
        rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/vdso/.build-id
    fi

    # And save the headers/makefiles etc for building modules against
    #
    # This all looks scary, but the end result is supposed to be:
    # * all arch relevant include/ files
    # * all Makefile/Kconfig files
    # * all script/ files

    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/source
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    (cd $RPM_BUILD_ROOT/lib/modules/$KernelVer ; ln -s build source)
    # dirs for additional modules per module-init-tools, kbuild/modules.txt
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/extra
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/updates
    mkdir -p $RPM_BUILD_ROOT/lib/modules/$KernelVer/weak-updates
    # first copy everything
    cp --parents `find  -type f -name "Makefile*" -o -name "Kconfig*"` $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp Module.symvers $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp System.map $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    if [ -s Module.markers ]; then
      cp Module.markers $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    fi

    # create the kABI metadata for use in packaging
    # NOTENOTE: the name symvers is used by the rpm backend
    # NOTENOTE: to discover and run the /usr/lib/rpm/fileattrs/kabi.attr
    # NOTENOTE: script which dynamically adds exported kernel symbol
    # NOTENOTE: checksums to the rpm metadata provides list.
    # NOTENOTE: if you change the symvers name, update the backend too
    echo "**** GENERATING kernel ABI metadata ****"
    gzip -c9 < Module.symvers > $RPM_BUILD_ROOT/boot/symvers-$KernelVer.gz
    cp $RPM_BUILD_ROOT/boot/symvers-$KernelVer.gz $RPM_BUILD_ROOT/lib/modules/$KernelVer/symvers.gz

%if %{with_kabichk}
    echo "**** kABI checking is enabled in kernel SPEC file. ****"
    chmod 0755 $RPM_SOURCE_DIR/check-kabi
    if [ -e $RPM_SOURCE_DIR/Module.kabi_%{_target_cpu}$Flavour ]; then
        cp $RPM_SOURCE_DIR/Module.kabi_%{_target_cpu}$Flavour $RPM_BUILD_ROOT/Module.kabi
        $RPM_SOURCE_DIR/check-kabi -k $RPM_BUILD_ROOT/Module.kabi -s Module.symvers || exit 1
        rm $RPM_BUILD_ROOT/Module.kabi # for now, don't keep it around.
    else
        echo "**** NOTE: Cannot find reference Module.kabi file. ****"
    fi
%endif

%if %{with_kabidupchk}
    echo "**** kABI DUP checking is enabled in kernel SPEC file. ****"
    if [ -e $RPM_SOURCE_DIR/Module.kabi_dup_%{_target_cpu}$Flavour ]; then
        cp $RPM_SOURCE_DIR/Module.kabi_dup_%{_target_cpu}$Flavour $RPM_BUILD_ROOT/Module.kabi
        $RPM_SOURCE_DIR/check-kabi -k $RPM_BUILD_ROOT/Module.kabi -s Module.symvers || exit 1
        rm $RPM_BUILD_ROOT/Module.kabi # for now, don't keep it around.
    else
        echo "**** NOTE: Cannot find DUP reference Module.kabi file. ****"
    fi
%endif

    # then drop all but the needed Makefiles/Kconfig files
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/Documentation
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include
    cp .config $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    cp -a scripts $RPM_BUILD_ROOT/lib/modules/$KernelVer/build
    rm -rf $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/tracing
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/spdxcheck.py
    if [ -f tools/objtool/objtool ]; then
      cp -a tools/objtool/objtool $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/tools/objtool/ || :
    fi
    if [ -d arch/$Arch/scripts ]; then
      cp -a arch/$Arch/scripts $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/arch/%{_arch} || :
    fi
    if [ -f arch/$Arch/*lds ]; then
      cp -a arch/$Arch/*lds $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/arch/%{_arch}/ || :
    fi
    if [ -f arch/%{asmarch}/kernel/module.lds ]; then
      cp -a --parents arch/%{asmarch}/kernel/module.lds $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    fi
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/*.o
    rm -f $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/scripts/*/*.o
%ifarch ppc64le
    cp -a --parents arch/powerpc/lib/crtsavres.[So] $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
%endif
    if [ -d arch/%{asmarch}/include ]; then
      cp -a --parents arch/%{asmarch}/include $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    fi
%ifarch aarch64
    # arch/arm64/include/asm/xen references arch/arm
    cp -a --parents arch/arm/include/asm/xen $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    # arch/arm64/include/asm/opcodes.h references arch/arm
    cp -a --parents arch/arm/include/asm/opcodes.h $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
%endif
    cp -a include $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include
%ifarch x86_64
    # files for 'make prepare' to succeed with kernel-devel
    cp -a --parents arch/x86/entry/syscalls/syscall_32.tbl $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/entry/syscalls/syscalltbl.sh $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/entry/syscalls/syscallhdr.sh $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/entry/syscalls/syscall_64.tbl $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/tools/relocs_32.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/tools/relocs_64.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/tools/relocs.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/tools/relocs_common.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/tools/relocs.h $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents tools/include/tools/le_byteshift.h $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/purgatory/purgatory.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/purgatory/stack.S $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/purgatory/string.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/purgatory/setup-x86_64.S $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/purgatory/entry64.S $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/boot/string.h $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/boot/string.c $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
    cp -a --parents arch/x86/boot/ctype.h $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/
%endif
    # Make sure the Makefile and version.h have a matching timestamp so that
    # external modules can be built
    touch -r $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/Makefile $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include/generated/uapi/linux/version.h

    # Copy .config to include/config/auto.conf so "make prepare" is unnecessary.
    cp $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/.config $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/include/config/auto.conf

%if %{with_debuginfo}
    eu-readelf -n vmlinux | grep "Build ID" | awk '{print $NF}' > vmlinux.id
    cp vmlinux.id $RPM_BUILD_ROOT/lib/modules/$KernelVer/build/vmlinux.id

    #
    # save the vmlinux file for kernel debugging into the kernel-debuginfo rpm
    #
    mkdir -p $RPM_BUILD_ROOT%{debuginfodir}/lib/modules/$KernelVer
    cp vmlinux $RPM_BUILD_ROOT%{debuginfodir}/lib/modules/$KernelVer
%endif

    find $RPM_BUILD_ROOT/lib/modules/$KernelVer -name "*.ko" -type f >modnames

    # mark modules executable so that strip-to-file can strip them
    xargs --no-run-if-empty chmod u+x < modnames

    # Generate a list of modules for block and networking.

    grep -F /drivers/ modnames | xargs --no-run-if-empty nm -upA |
    sed -n 's,^.*/\([^/]*\.ko\):  *U \(.*\)$,\1 \2,p' > drivers.undef

    collect_modules_list()
    {
      sed -r -n -e "s/^([^ ]+) \\.?($2)\$/\\1/p" drivers.undef |
        LC_ALL=C sort -u > $RPM_BUILD_ROOT/lib/modules/$KernelVer/modules.$1
      if [ ! -z "$3" ]; then
        sed -r -e "/^($3)\$/d" -i $RPM_BUILD_ROOT/lib/modules/$KernelVer/modules.$1
      fi
    }

    collect_modules_list networking \
      'register_netdev|ieee80211_register_hw|usbnet_probe|phy_driver_register|rt(l_|2x00)(pci|usb)_probe|register_netdevice'
    collect_modules_list block \
      'ata_scsi_ioctl|scsi_add_host|scsi_add_host_with_dma|blk_alloc_queue|blk_init_queue|register_mtd_blktrans|scsi_esp_register|scsi_register_device_handler|blk_queue_physical_block_size' 'pktcdvd.ko|dm-mod.ko'
    collect_modules_list drm \
      'drm_open|drm_init'
    collect_modules_list modesetting \
      'drm_crtc_init'

    # detect missing or incorrect license tags
    ( find $RPM_BUILD_ROOT/lib/modules/$KernelVer -name '*.ko' | xargs /sbin/modinfo -l | \
        grep -E -v 'GPL( v2)?$|Dual BSD/GPL$|Dual MPL/GPL$|GPL and additional rights$' ) && exit 1

    # remove files that will be auto generated by depmod at rpm -i time
    pushd $RPM_BUILD_ROOT/lib/modules/$KernelVer/
        rm -f modules.{alias*,builtin.bin,dep*,*map,symbols*,devname,softdep}
    popd

    # Call the modules-extra script to move things around
    %{SOURCE17} $RPM_BUILD_ROOT/lib/modules/$KernelVer %{SOURCE16}

    #
    # Generate the kernel-core and kernel-modules files lists
    #

    # Copy the System.map file for depmod to use, and create a backup of the
    # full module tree so we can restore it after we're done filtering
    cp System.map $RPM_BUILD_ROOT/.
    pushd $RPM_BUILD_ROOT
    mkdir restore
    cp -r lib/modules/$KernelVer/* restore/.

    # don't include anything going into k-m-e in the file lists
    rm -rf lib/modules/$KernelVer/extra

    if [ $DoModules -eq 1 ]; then
	# Find all the module files and filter them out into the core and
	# modules lists.  This actually removes anything going into -modules
	# from the dir.
	find lib/modules/$KernelVer/kernel -name *.ko | sort -n > modules.list
	cp $RPM_SOURCE_DIR/filter-*.sh .
	%{SOURCE99} modules.list %{_target_cpu}
	rm filter-*.sh

	# Run depmod on the resulting module tree and make sure it isn't broken
	depmod -b . -aeF ./System.map $KernelVer &> depmod.out
	if [ -s depmod.out ]; then
	    echo "Depmod failure"
	    cat depmod.out
	    exit 1
	else
	    rm depmod.out
	fi
    else
	# Ensure important files/directories exist to let the packaging succeed
	echo '%%defattr(-,-,-)' > modules.list
	echo '%%defattr(-,-,-)' > k-d.list
	mkdir -p lib/modules/$KernelVer/kernel
	# Add files usually created by make modules, needed to prevent errors
	# thrown by depmod during package installation
	touch lib/modules/$KernelVer/modules.order
	touch lib/modules/$KernelVer/modules.builtin
    fi

    # remove files that will be auto generated by depmod at rpm -i time
    pushd $RPM_BUILD_ROOT/lib/modules/$KernelVer/
        rm -f modules.{alias*,builtin.bin,dep*,*map,symbols*,devname,softdep}
    popd

    # Go back and find all of the various directories in the tree.  We use this
    # for the dir lists in kernel-core
    find lib/modules/$KernelVer/kernel -mindepth 1 -type d | sort -n > module-dirs.list

    # Cleanup
    rm System.map
    cp -r restore/* lib/modules/$KernelVer/.
    rm -rf restore
    popd

    # Make sure the files lists start with absolute paths or rpmbuild fails.
    # Also add in the dir entries
    sed -e 's/^lib*/\/lib/' %{?zipsed} $RPM_BUILD_ROOT/k-d.list > ../kernel${Flavour:+-${Flavour}}-modules.list
    sed -e 's/^lib*/%dir \/lib/' %{?zipsed} $RPM_BUILD_ROOT/module-dirs.list > ../kernel${Flavour:+-${Flavour}}-core.list
    sed -e 's/^lib*/\/lib/' %{?zipsed} $RPM_BUILD_ROOT/modules.list >> ../kernel${Flavour:+-${Flavour}}-core.list

    # Cleanup
    rm -f $RPM_BUILD_ROOT/k-d.list
    rm -f $RPM_BUILD_ROOT/modules.list
    rm -f $RPM_BUILD_ROOT/module-dirs.list

%if %{signmodules}
    if [ $DoModules -eq 1 ]; then
	# Save the signing keys so we can sign the modules in __modsign_install_post
	cp certs/signing_key.pem certs/signing_key.pem.sign${Flav}
	cp certs/signing_key.x509 certs/signing_key.x509.sign${Flav}
    fi
%endif

    # Move the devel headers out of the root file system
    mkdir -p $RPM_BUILD_ROOT/usr/src/kernels
    mv $RPM_BUILD_ROOT/lib/modules/$KernelVer/build $RPM_BUILD_ROOT/$DevelDir

    # This is going to create a broken link during the build, but we don't use
    # it after this point.  We need the link to actually point to something
    # when kernel-devel is installed, and a relative link doesn't work across
    # the F17 UsrMove feature.
    ln -sf $DevelDir $RPM_BUILD_ROOT/lib/modules/$KernelVer/build

    # prune junk from kernel-devel
    find $RPM_BUILD_ROOT/usr/src/kernels -name ".*.cmd" -exec rm -f {} \;

    # build a BLS config for this kernel
    %{SOURCE43} "$KernelVer" "$RPM_BUILD_ROOT" "%{?variant}"
}

###
# DO it...
###

# prepare directories
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/boot
mkdir -p $RPM_BUILD_ROOT%{_libexecdir}

cd linux-%{KVERREL}


%if %{with_debug}
BuildKernel %make_target %kernel_image %{with_vdso_install} debug
%endif

%if %{with_zfcpdump}
BuildKernel %make_target %kernel_image %{with_vdso_install} zfcpdump
%endif

%if %{with_up}
BuildKernel %make_target %kernel_image %{with_vdso_install}
%endif

%global perf_make \
  make -s EXTRA_CFLAGS="${RPM_OPT_FLAGS}" LDFLAGS="%{__global_ldflags}" %{?cross_opts} -C tools/perf V=1 NO_PERF_READ_VDSO32=1 NO_PERF_READ_VDSOX32=1 WERROR=0 NO_LIBUNWIND=1 HAVE_CPLUS_DEMANGLE=1 NO_GTK2=1 NO_STRLCPY=1 NO_BIONIC=1 NO_JVMTI=1 prefix=%{_prefix} PYTHON=%{__python3}
%if %{with_perf}
# perf
# make sure check-headers.sh is executable
chmod +x tools/perf/check-headers.sh
%{perf_make} DESTDIR=$RPM_BUILD_ROOT all
%endif

%if %{with_tools}
%ifarch %{cpupowerarchs}
# cpupower
# make sure version-gen.sh is executable.
chmod +x tools/power/cpupower/utils/version-gen.sh
%{make} %{?_smp_mflags} -C tools/power/cpupower CPUFREQ_BENCH=false
%ifarch x86_64
    pushd tools/power/cpupower/debug/x86_64
    %{make} %{?_smp_mflags} centrino-decode powernow-k8-decode
    popd
%endif
%ifarch x86_64
   pushd tools/power/x86/x86_energy_perf_policy/
   %{make}
   popd
   pushd tools/power/x86/turbostat
   %{make}
   popd
%endif #turbostat/x86_energy_perf_policy
%endif
pushd tools/thermal/tmon/
%{make}
popd
pushd tools/iio/
%{make}
popd
pushd tools/gpio/
%{make}
popd
%endif

%if %{with_bpftool}
pushd tools/bpf/bpftool
make
popd
%endif

# In the modsign case, we do 3 things.  1) We check the "flavour" and hard
# code the value in the following invocations.  This is somewhat sub-optimal
# but we're doing this inside of an RPM macro and it isn't as easy as it
# could be because of that.  2) We restore the .tmp_versions/ directory from
# the one we saved off in BuildKernel above.  This is to make sure we're
# signing the modules we actually built/installed in that flavour.  3) We
# grab the arch and invoke mod-sign.sh command to actually sign the modules.
#
# We have to do all of those things _after_ find-debuginfo runs, otherwise
# that will strip the signature off of the modules.
#
# Don't sign modules for the zfcpdump flavour as it is monolithic.

%define __modsign_install_post \
  if [ "%{signmodules}" -eq "1" ]; then \
    if [ "%{with_debug}" -ne "0" ]; then \
      %{modsign_cmd} certs/signing_key.pem.sign+debug certs/signing_key.x509.sign+debug $RPM_BUILD_ROOT/lib/modules/%{KVERREL}+debug/ \
    fi \
    if [ "%{with_up}" -ne "0" ]; then \
      %{modsign_cmd} certs/signing_key.pem.sign certs/signing_key.x509.sign $RPM_BUILD_ROOT/lib/modules/%{KVERREL}/ \
    fi \
  fi \
  if [ "%{zipmodules}" -eq "1" ]; then \
    find $RPM_BUILD_ROOT/lib/modules/ -type f -name '*.ko' | xargs xz; \
  fi \
%{nil}

###
### Special hacks for debuginfo subpackages.
###

# This macro is used by %%install, so we must redefine it before that.
%define debug_package %{nil}

%if %{with_debuginfo}

%ifnarch noarch
%global __debug_package 1
%files -f debugfiles.list debuginfo-common-%{_target_cpu}
%defattr(-,root,root)
%endif

%endif

#
# Disgusting hack alert! We need to ensure we sign modules *after* all
# invocations of strip occur, which is in __debug_install_post if
# find-debuginfo.sh runs, and __os_install_post if not.
#
%define __spec_install_post \
  %{?__debug_package:%{__debug_install_post}}\
  %{__arch_install_post}\
  %{__os_install_post}\
  %{__modsign_install_post}

###
### install
###

%install

cd linux-%{KVERREL}

# We have to do the headers install before the tools install because the
# kernel headers_install will remove any header files in /usr/include that
# it doesn't install itself.

%if %{with_headers}
# Install kernel headers
make ARCH=%{hdrarch} INSTALL_HDR_PATH=$RPM_BUILD_ROOT/usr headers_install

find $RPM_BUILD_ROOT/usr/include \
     \( -name .install -o -name .check -o \
        -name ..install.cmd -o -name ..check.cmd \) | xargs rm -f

%endif

%if %{with_cross_headers}
mkdir -p $RPM_BUILD_ROOT/usr/tmp-headers
make ARCH=%{hdrarch} INSTALL_HDR_PATH=$RPM_BUILD_ROOT/usr/tmp-headers headers_install_all

find $RPM_BUILD_ROOT/usr/tmp-headers/include \
     \( -name .install -o -name .check -o \
        -name ..install.cmd -o -name ..check.cmd \) | xargs rm -f

# Copy all the architectures we care about to their respective asm directories
for arch in arm64 powerpc s390 x86 ; do
mkdir -p $RPM_BUILD_ROOT/usr/${arch}-linux-gnu/include
mv $RPM_BUILD_ROOT/usr/tmp-headers/include/arch-${arch}/asm $RPM_BUILD_ROOT/usr/${arch}-linux-gnu/include/
cp -a $RPM_BUILD_ROOT/usr/tmp-headers/include/asm-generic $RPM_BUILD_ROOT/usr/${arch}-linux-gnu/include/.
done

# Remove the rest of the architectures
rm -rf $RPM_BUILD_ROOT/usr/tmp-headers/include/arch*
rm -rf $RPM_BUILD_ROOT/usr/tmp-headers/include/asm-*

# Copy the rest of the headers over
for arch in arm64 powerpc s390 x86 ; do
cp -a $RPM_BUILD_ROOT/usr/tmp-headers/include/* $RPM_BUILD_ROOT/usr/${arch}-linux-gnu/include/.
done

rm -rf $RPM_BUILD_ROOT/usr/tmp-headers
%endif

%if %{with_kernel_abi_whitelists}
# kabi directory
INSTALL_KABI_PATH=$RPM_BUILD_ROOT/lib/modules/
mkdir -p $INSTALL_KABI_PATH

# install kabi releases directories
tar xjvf %{SOURCE300} -C $INSTALL_KABI_PATH
%endif  # with_kernel_abi_whitelists

%if %{with_perf}
# perf tool binary and supporting scripts/binaries
%{perf_make} DESTDIR=$RPM_BUILD_ROOT lib=%{_lib} install-bin install-traceevent-plugins
# remove the 'trace' symlink.
rm -f %{buildroot}%{_bindir}/trace
# remove the perf-tips
rm -rf %{buildroot}%{_docdir}/perf-tip

# For both of the below, yes, this should be using a macro but right now
# it's hard coded and we don't actually want it anyway right now.
# Whoever wants examples can fix it up!

# remove examples
rm -rf %{buildroot}/usr/lib/examples/perf
# remove the stray header file that somehow got packaged in examples
rm -rf %{buildroot}/usr/lib/include/perf/bpf/bpf.h

# python-perf extension
%{perf_make} DESTDIR=$RPM_BUILD_ROOT install-python_ext

# perf man pages (note: implicit rpm magic compresses them later)
mkdir -p %{buildroot}/%{_mandir}/man1
%{perf_make} DESTDIR=$RPM_BUILD_ROOT install-man
%endif

%if %{with_tools}
%ifarch %{cpupowerarchs}
%{make} -C tools/power/cpupower DESTDIR=$RPM_BUILD_ROOT libdir=%{_libdir} mandir=%{_mandir} CPUFREQ_BENCH=false install
rm -f %{buildroot}%{_libdir}/*.{a,la}
%find_lang cpupower
mv cpupower.lang ../
%ifarch x86_64
    pushd tools/power/cpupower/debug/x86_64
    install -m755 centrino-decode %{buildroot}%{_bindir}/centrino-decode
    install -m755 powernow-k8-decode %{buildroot}%{_bindir}/powernow-k8-decode
    popd
%endif
chmod 0755 %{buildroot}%{_libdir}/libcpupower.so*
mkdir -p %{buildroot}%{_unitdir} %{buildroot}%{_sysconfdir}/sysconfig
install -m644 %{SOURCE2000} %{buildroot}%{_unitdir}/cpupower.service
install -m644 %{SOURCE2001} %{buildroot}%{_sysconfdir}/sysconfig/cpupower
%endif
%ifarch x86_64
   mkdir -p %{buildroot}%{_mandir}/man8
   pushd tools/power/x86/x86_energy_perf_policy
   make DESTDIR=%{buildroot} install
   popd
   pushd tools/power/x86/turbostat
   make DESTDIR=%{buildroot} install
   popd
%endif #turbostat/x86_energy_perf_policy
pushd tools/thermal/tmon
make INSTALL_ROOT=%{buildroot} install
popd
pushd tools/iio
make DESTDIR=%{buildroot} install
popd
pushd tools/gpio
make DESTDIR=%{buildroot} install
popd
pushd tools/kvm/kvm_stat
make INSTALL_ROOT=%{buildroot} install-tools
make INSTALL_ROOT=%{buildroot} install-man
popd
%endif

%if %{with_bpftool}
pushd tools/bpf/bpftool
make DESTDIR=$RPM_BUILD_ROOT prefix=%{_prefix} bash_compdir=%{_sysconfdir}/bash_completion.d/ mandir=%{_mandir} install doc-install
popd
%endif

# We have to do the headers checksum calculation after the tools install because
# these might end up installing their own set of headers on top of kernel's
%if %{with_headers}
# compute a content hash to export as Provides: kernel-headers-checksum
HEADERS_CHKSUM=$(export LC_ALL=C; find $RPM_BUILD_ROOT/usr/include -type f -name "*.h" \
			! -path $RPM_BUILD_ROOT/usr/include/linux/version.h | \
		 sort | xargs cat | sha1sum - | cut -f 1 -d ' ');
# export the checksum via usr/include/linux/version.h, so the dynamic
# find-provides can grab the hash to update it accordingly
echo "#define KERNEL_HEADERS_CHECKSUM \"$HEADERS_CHKSUM\"" >> $RPM_BUILD_ROOT/usr/include/linux/version.h
%endif

###
### clean
###

%clean
rm -rf $RPM_BUILD_ROOT

###
### scripts
###

%if %{with_tools}
%post -n kernel-tools-libs
/sbin/ldconfig

%postun -n kernel-tools-libs
/sbin/ldconfig
%endif

#
# This macro defines a %%post script for a kernel*-devel package.
#	%%kernel_devel_post [<subpackage>]
#
%define kernel_devel_post() \
%{expand:%%post %{?1:%{1}-}devel}\
if [ -f /etc/sysconfig/kernel ]\
then\
    . /etc/sysconfig/kernel || exit $?\
fi\
if [ "$HARDLINK" != "no" -a -x /usr/sbin/hardlink ]\
then\
    (cd /usr/src/kernels/%{KVERREL}%{?1:+%{1}} &&\
     /usr/bin/find . -type f | while read f; do\
       hardlink -c /usr/src/kernels/*%{?dist}.*/$f $f\
     done)\
fi\
%{nil}

#
# This macro defines a %%post script for a kernel*-modules-extra package.
# It also defines a %%postun script that does the same thing.
#	%%kernel_modules_extra_post [<subpackage>]
#
%define kernel_modules_extra_post() \
%{expand:%%post %{?1:%{1}-}modules-extra}\
/sbin/depmod -a %{KVERREL}%{?1:+%{1}}\
%{nil}\
%{expand:%%postun %{?1:%{1}-}modules-extra}\
/sbin/depmod -a %{KVERREL}%{?1:+%{1}}\
%{nil}

#
# This macro defines a %%post script for a kernel*-modules package.
# It also defines a %%postun script that does the same thing.
#	%%kernel_modules_post [<subpackage>]
#
%define kernel_modules_post() \
%{expand:%%post %{?1:%{1}-}modules}\
/sbin/depmod -a %{KVERREL}%{?1:+%{1}}\
%{nil}\
%{expand:%%postun %{?1:%{1}-}modules}\
/sbin/depmod -a %{KVERREL}%{?1:+%{1}}\
%{nil}

# This macro defines a %%posttrans script for a kernel package.
#	%%kernel_variant_posttrans [<subpackage>]
# More text can follow to go at the end of this variant's %%post.
#
%define kernel_variant_posttrans() \
%{expand:%%posttrans %{?1:%{1}-}core}\
if [ -x %{_sbindir}/weak-modules ]\
then\
    %{_sbindir}/weak-modules --add-kernel %{KVERREL}%{?1:+%{1}} || exit $?\
fi\
/bin/kernel-install add %{KVERREL}%{?1:+%{1}} /lib/modules/%{KVERREL}%{?1:+%{1}}/vmlinuz || exit $?\
%{nil}

#
# This macro defines a %%post script for a kernel package and its devel package.
#	%%kernel_variant_post [-v <subpackage>] [-r <replace>]
# More text can follow to go at the end of this variant's %%post.
#
%define kernel_variant_post(v:r:) \
%{expand:%%kernel_devel_post %{?-v*}}\
%{expand:%%kernel_modules_post %{?-v*}}\
%{expand:%%kernel_modules_extra_post %{?-v*}}\
%{expand:%%kernel_variant_posttrans %{?-v*}}\
%{expand:%%post %{?-v*:%{-v*}-}core}\
%{-r:\
if [ `uname -i` == "x86_64" -o `uname -i` == "i386" ] &&\
   [ -f /etc/sysconfig/kernel ]; then\
  /bin/sed -r -i -e 's/^DEFAULTKERNEL=%{-r*}$/DEFAULTKERNEL=kernel%{?-v:-%{-v*}}/' /etc/sysconfig/kernel || exit $?\
fi}\
%{nil}

#
# This macro defines a %%preun script for a kernel package.
#	%%kernel_variant_preun <subpackage>
#
%define kernel_variant_preun() \
%{expand:%%preun %{?1:%{1}-}core}\
/bin/kernel-install remove %{KVERREL}%{?1:+%{1}} /lib/modules/%{KVERREL}%{?1:+%{1}}/vmlinuz || exit $?\
if [ -x %{_sbindir}/weak-modules ]\
then\
    %{_sbindir}/weak-modules --remove-kernel %{KVERREL}%{?1:+%{1}} || exit $?\
fi\
%{nil}

%kernel_variant_preun
%kernel_variant_post -r kernel-smp

%kernel_variant_preun debug
%kernel_variant_post -v debug

%if %{with_zfcpdump}
%kernel_variant_preun zfcpdump
%kernel_variant_post -v zfcpdump
%endif

if [ -x /sbin/ldconfig ]
then
    /sbin/ldconfig -X || exit $?
fi

###
### file lists
###

%if %{with_headers}
%files headers
%defattr(-,root,root)
/usr/include/*
%endif

%if %{with_cross_headers}
%files cross-headers
%defattr(-,root,root)
/usr/*-linux-gnu/include/*
%endif

%if %{with_kernel_abi_whitelists}
%files -n kernel-abi-whitelists
%defattr(-,root,root,-)
/lib/modules/kabi-*
%endif

%if %{with_perf}
%files -n perf
%defattr(-,root,root)
%{_bindir}/perf
%dir %{_libdir}/traceevent/plugins
%{_libdir}/traceevent/plugins/*
%dir %{_libexecdir}/perf-core
%{_libexecdir}/perf-core/*
%{_datadir}/perf-core/*
%{_mandir}/man[1-8]/perf*
%{_sysconfdir}/bash_completion.d/perf
%doc linux-%{KVERREL}/tools/perf/Documentation/examples.txt

%files -n python3-perf
%defattr(-,root,root)
%{python3_sitearch}/*

%if %{with_debuginfo}
%files -f perf-debuginfo.list -n perf-debuginfo
%defattr(-,root,root)

%files -f python3-perf-debuginfo.list -n python3-perf-debuginfo
%defattr(-,root,root)
%endif
%endif # with_perf

%if %{with_tools}
%files -n kernel-tools -f cpupower.lang
%defattr(-,root,root)
%ifarch %{cpupowerarchs}
%{_bindir}/cpupower
%ifarch x86_64
%{_bindir}/centrino-decode
%{_bindir}/powernow-k8-decode
%endif
%{_unitdir}/cpupower.service
%{_mandir}/man[1-8]/cpupower*
%config(noreplace) %{_sysconfdir}/sysconfig/cpupower
%ifarch x86_64
%{_bindir}/x86_energy_perf_policy
%{_mandir}/man8/x86_energy_perf_policy*
%{_bindir}/turbostat
%{_mandir}/man8/turbostat*
%endif
%{_bindir}/tmon
%{_bindir}/iio_event_monitor
%{_bindir}/iio_generic_buffer
%{_bindir}/lsiio
%{_bindir}/lsgpio
%{_bindir}/gpio-hammer
%{_bindir}/gpio-event-mon
%{_mandir}/man1/kvm_stat*
%{_bindir}/kvm_stat
%endif

%if %{with_debuginfo}
%files -f kernel-tools-debuginfo.list -n kernel-tools-debuginfo
%defattr(-,root,root)
%endif

%ifarch %{cpupowerarchs}
%files -n kernel-tools-libs
%{_libdir}/libcpupower.so.0
%{_libdir}/libcpupower.so.0.0.1

%files -n kernel-tools-libs-devel
%{_libdir}/libcpupower.so
%{_includedir}/cpufreq.h
%endif
%endif # with_perf

%if %{with_bpftool}
%files -n bpftool
%{_sbindir}/bpftool
%{_sysconfdir}/bash_completion.d/bpftool
%{_mandir}/man8/bpftool-cgroup.8.gz
%{_mandir}/man8/bpftool-map.8.gz
%{_mandir}/man8/bpftool-prog.8.gz
%{_mandir}/man8/bpftool-perf.8.gz
%{_mandir}/man8/bpftool.8.gz
%endif

# empty meta-package
%ifnarch %nobuildarches noarch
%files
%defattr(-,root,root)
%endif

%if %{with_gcov}
%ifarch x86_64 s390x ppc64le aarch64
%files gcov
%defattr(-,root,root)
%{_builddir}
%endif
%endif

# This is %%{image_install_path} on an arch where that includes ELF files,
# or empty otherwise.
%define elf_image_install_path %{?kernel_image_elf:%{image_install_path}}

#
# This macro defines the %%files sections for a kernel package
# and its devel and debuginfo packages.
#	%%kernel_variant_files [-k vmlinux] <condition> <subpackage>
#
%define kernel_variant_files(k:) \
%if %{2}\
%{expand:%%files -f kernel-%{?3:%{3}-}core.list %{?3:%{3}-}core}\
%defattr(-,root,root)\
%{!?_licensedir:%global license %%doc}\
%license linux-%{KVERREL}/COPYING-%{version}\
/lib/modules/%{KVERREL}%{?3:+%{3}}/%{?-k:%{-k*}}%{!?-k:vmlinuz}\
%ghost /%{image_install_path}/%{?-k:%{-k*}}%{!?-k:vmlinuz}-%{KVERREL}%{?3:+%{3}}\
/lib/modules/%{KVERREL}%{?3:+%{3}}/.vmlinuz.hmac \
%ghost /%{image_install_path}/.vmlinuz-%{KVERREL}%{?3:+%{3}}.hmac \
%ifarch aarch64\
/lib/modules/%{KVERREL}%{?3:+%{3}}/dtb \
%ghost /%{image_install_path}/dtb-%{KVERREL}%{?3:+%{3}} \
%endif\
%attr(600,root,root) /lib/modules/%{KVERREL}%{?3:+%{3}}/System.map\
%ghost /boot/System.map-%{KVERREL}%{?3:+%{3}}\
/lib/modules/%{KVERREL}%{?3:+%{3}}/symvers.gz\
/lib/modules/%{KVERREL}%{?3:+%{3}}/config\
%ghost /boot/symvers-%{KVERREL}%{?3:+%{3}}.gz\
%ghost /boot/config-%{KVERREL}%{?3:+%{3}}\
%ghost /boot/initramfs-%{KVERREL}%{?3:+%{3}}.img\
%dir /lib/modules\
%dir /lib/modules/%{KVERREL}%{?3:+%{3}}\
%dir /lib/modules/%{KVERREL}%{?3:+%{3}}/kernel\
/lib/modules/%{KVERREL}%{?3:+%{3}}/build\
/lib/modules/%{KVERREL}%{?3:+%{3}}/source\
/lib/modules/%{KVERREL}%{?3:+%{3}}/updates\
/lib/modules/%{KVERREL}%{?3:+%{3}}/weak-updates\
/lib/modules/%{KVERREL}%{?3:+%{3}}/bls.conf\
%if %{1}\
/lib/modules/%{KVERREL}%{?3:+%{3}}/vdso\
/etc/ld.so.conf.d/kernel-%{KVERREL}%{?3:+%{3}}.conf\
%endif\
/lib/modules/%{KVERREL}%{?3:+%{3}}/modules.*\
%{expand:%%files -f kernel-%{?3:%{3}-}modules.list %{?3:%{3}-}modules}\
%defattr(-,root,root)\
%{expand:%%files %{?3:%{3}-}devel}\
%defattr(-,root,root)\
%defverify(not mtime)\
/usr/src/kernels/%{KVERREL}%{?3:+%{3}}\
%{expand:%%files %{?3:%{3}-}modules-extra}\
%defattr(-,root,root)\
/lib/modules/%{KVERREL}%{?3:+%{3}}/extra\
%if %{with_debuginfo}\
%ifnarch noarch\
%{expand:%%files -f debuginfo%{?3}.list %{?3:%{3}-}debuginfo}\
%defattr(-,root,root)\
%endif\
%endif\
%if %{?3:1} %{!?3:0}\
%{expand:%%files %{3}}\
%defattr(-,root,root)\
%endif\
%endif\
%{nil}

%kernel_variant_files  %{with_vdso_install} %{with_up}
%kernel_variant_files  %{with_vdso_install} %{with_debug} debug
%kernel_variant_files  %{with_vdso_install} %{with_zfcpdump} zfcpdump

# plz don't put in a version string unless you're going to tag
# and build.
#
#
%changelog
%%CHANGELOG%%
* Tue Oct 16 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-27.el8]
- [security] cap_inode_getsecurity: use d_find_any_alias() instead of d_find_alias() (Joe Lawrence) [1638647]
- [powerpc] powerpc/cacheinfo: Report the correct shared_cpu_map on big-cores (Steve Best) [1639265]
- [powerpc] powerpc: Use cpu_smallcore_sibling_mask at SMT level on bigcores (Steve Best) [1639265]
- [powerpc] powerpc: Detect the presence of big-cores via ibm, thread-groups (Steve Best) [1639265]
- [x86] mark amd rome as unsupported (David Arcari) [1638506]
- [netdrv] qed: Add support for virtual link (Chad Dupuis) [1638013]
- [netdrv] qede: Add driver support for 20G link speed (Chad Dupuis) [1638013]
- [netdrv] qed: Add driver support for 20G link speed (Chad Dupuis) [1638013]
- [netdrv] qed: Fix shmem structure inconsistency between driver and the mfw (Chad Dupuis) [1638013]
- [netdrv] qed: Add missing device config for RoCE EDPM in UFP mode (Chad Dupuis) [1638013]
- [netdrv] qed: Add a flag which indicates if offload TC is set (Chad Dupuis) [1638013]
- [netdrv] qed: Do not add VLAN 0 tag to untagged frames in multi-function mode (Chad Dupuis) [1638013]
- [netdrv] qed: Fix populating the invalid stag value in multi function mode (Chad Dupuis) [1638013]
- [tools] perf python: Fix pyrf_evlist__read_on_cpu() interface (Jiri Olsa) [1628229]
- [tools] perf mmap: Store real cpu number in 'struct perf_mmap' (Jiri Olsa) [1628229]

* Tue Oct 16 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-26.el8]
- [fs] gfs2: Fix iomap buffered write support for journaled files (2) (Andreas Grunbacher) [1637944]
- [xen] xen/manage: don't complain about an empty value in control/sysrq node (Vitaly Kuznetsov) [1623344]
- [drm] drm/amdgpu: Silence harmless WARN_ON() during MST disable (Lyude Paul) [1638137]
- [netdrv] net: macb: Fix regression breaking non-MDIO fixed-link PHYs (Petr Oros) [1638259]
- [netdrv] net: macb: do not disable MDIO bus at open/close time (Petr Oros) [1638259]
- [fs] proc: restrict kernel stack dumps to root (Waiman Long) [1638044]
- [base] firmware: Always initialize the fw_priv list object (Waiman Long) [1638044]
- [base] firmware: Fix security issue with request_firmware_into_buf() (Waiman Long) [1638044]
- [fs] sysfs: Do not return POSIX ACL xattrs via listxattr (Waiman Long) [1638044]
- [fs] vfs: don't evict uninitialized inode (Waiman Long) [1638044]
- [fs] new primitive: discard_new_inode() (Waiman Long) [1638044]
- [arm64] arm64: jump_label.h: use asm_volatile_goto macro instead of "asm goto" (Waiman Long) [1638044]
- [kernel] sched/topology: Set correct NUMA topology type (Waiman Long) [1638044]
- [kernel] bpf: 32-bit RSH verification must truncate input before the ALU op (Waiman Long) [1638044]
- [mm] mm: madvise(MADV_DODUMP): allow hugetlbfs pages (Waiman Long) [1638044]
- [x86] x86/pti: Fix section mismatch warning/error (Waiman Long) [1638044]
- [kernel] uaccess: Fix is_source param for check_copy_size() in copy_to_iter_mcsafe() (Waiman Long) [1638044]
- [x86] x86/mm: Expand static page table for fixmap space (Waiman Long) [1638044]
- [fs] fs/lock: skip lock owner pid translation in case we are in init_pid_ns (Waiman Long) [1638044]
- [x86] perf/x86/intel/lbr: Fix incomplete LBR call stack (Waiman Long) [1638044]
- [kernel] perf/hw_breakpoint: Split attribute parse and commit (Waiman Long) [1638044]
- [kernel] bitfield: fix *_encode_bits() (Waiman Long) [1638044]
- [kernel] posix-timers: Sanitize overrun handling (Waiman Long) [1638044]
- [kernel] posix-timers: Make forward callback return s64 (Waiman Long) [1638044]
- [kernel] alarmtimer: Prevent overflow for relative nanosleep (Waiman Long) [1638044]
- [x86] x86/entry/64: Add two more instruction suffixes (Waiman Long) [1638044]
- [powerpc] powerpc/kdump: Handle crashkernel memory reservation failure (Waiman Long) [1638044]
- [s390] s390/mm: correct allocate_pgste proc_handler callback (Waiman Long) [1638044]
- [x86] x86/numa_emulation: Fix emulated-to-physical node mapping (Waiman Long) [1638044]
- [x86] x86/paravirt: Fix some warning messages (Waiman Long) [1638044]
- [kernel] sched/fair: Fix vruntime_normalized() for remote non-migration wakeup (Waiman Long) [1638044]
- [kernel] bpf/verifier: disallow pointer subtraction (Waiman Long) [1638044]
- [mm] mm: shmem.c: Correctly annotate new inodes for lockdep (Waiman Long) [1638044]
- [kernel] sched/core: Use smp_mb() in wake_woken_function() (Waiman Long) [1638044]
- [kernel] bpf: fix rcu annotations in compute_effective_progs() (Waiman Long) [1638044]
- [x86] x86/mm/pti: Add an overflow check to pti_clone_pmds() (Waiman Long) [1638044]
- [x86] x86/pti: Check the return value of pti_user_pagetable_walk_pmd() (Waiman Long) [1638044]
- [x86] x86/pti: Check the return value of pti_user_pagetable_walk_p4d() (Waiman Long) [1638044]
- [powerpc] powerpc/pseries/mm: call H_BLOCK_REMOVE (Steve Best) [1637116]
- [powerpc] powerpc/pseries/mm: factorize PTE slot computation (Steve Best) [1637116]
- [powerpc] powerpc/pseries/mm: Introducing FW_FEATURE_BLOCK_REMOVE (Steve Best) [1637116]
- [watchdog] watchdog/hpwdt: Disable PreTimeout when Timeout is smaller (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Update Driver Documentation (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Update version number (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Module parameter alias (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Display module parameters (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Claim NMI from iLO (Joseph Szczypek) [1632945]
- [watchdog] watchdog: hpwdt: Initialize pretimeout from module parameter (Joseph Szczypek) [1632945]

* Sat Oct 13 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-25.el8]
- [mm] mm/sparse: delete old sparse_init and enable new one (Baoquan He) [1625105]
- [mm] mm/sparse: add new sparse_init_nid() and sparse_init() (Baoquan He) [1625105]
- [mm] mm/sparse: move buffer init/fini to the common place (Baoquan He) [1625105]
- [mm] mm/sparse: use the new sparse buffer functions in non-vmemmap (Baoquan He) [1625105]
- [mm] mm/sparse: abstract sparse buffer allocations (Baoquan He) [1625105]
- [mm] mm/sparse: optimize memmap allocation during sparse_init() (Baoquan He) [1625105]
- [mm] mm/sparse.c: add a new parameter 'data_unit_size' for alloc_usemap_and_memmap (Baoquan He) [1625105]
- [mm] mm/sparsemem.c: defer the ms->section_mem_map clearing (Baoquan He) [1625105]
- [mm] mm/sparse.c: add a static variable nr_present_sections (Baoquan He) [1625105]
- [mm] mm/sparse.c: make sparse_init_one_section void and remove check (Baoquan He) [1625105]
- [target] scsi: target: iscsi: cxgbit: fix csk leak (Arjun Vynipadath) [1628864]
- [target] scsi: target: iscsi: cxgbit: use pr_debug() instead of pr_info() (Arjun Vynipadath) [1628864]
- [infiniband] iw_cxgb4: only allow 1 flush on user qps (Arjun Vynipadath) [1628865]
- [infiniband] iw_cxgb4: pass window scale in flowc work request (Arjun Vynipadath) [1628865]
- [infiniband] iw_cxgb4: remove duplicate memcpy() in c4iw_create_listen() (Arjun Vynipadath) [1628865]
- [netdrv] mlxsw: spectrum_switchdev: Do not leak RIFs when removing bridge (Petr Oros) [1638268]
- [tty] tty: vt_ioctl: fix potential Spectre v1 (Prarit Bhargava) [1637123]
- [powerpc] powerpc/time: Add set_state_oneshot_stopped decrementer callback (Steve Best) [1638287]
- [powerpc] powerpc/time: Use clockevents_register_device(), fixing an issue with large decrementer (Steve Best) [1638287]
- [hwmon] hwmon: (nct6775) Fix potential Spectre v1 (Dean Nelson) [1637464]
- [vfio] vfio-pci: Disable binding to PFs with SR-IOV enabled (Alex Williamson) [1637871]
- [netdrv] net: hns3: fix page_offset overflow when CONFIG_ARM64_64K_PAGES (Petr Oros) [1638385]
- [netdrv] net: hns: fix skb->truesize underestimation (Petr Oros) [1638385]
- [netdrv] net: hns: fix length and page_offset overflow when CONFIG_ARM64_64K_PAGES (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix get_vector ops in hclgevf_main module (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix warning bug when doing lp selftest (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix for mac pause not disable in pfc mode (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix for mailbox message truncated problem (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix return value error in hns3_reset_notify_down_enet (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix for reset_level default assignment probelm (Petr Oros) [1638385]
- [netdrv] net: hns3: Reset net device with rtnl_lock (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix for phy link issue when using marvell phy driver (Petr Oros) [1638385]
- [netdrv] net: hns3: Fix for command format parsing error in hclge_is_all_function_id_zero (Petr Oros) [1638385]
- [net] xprtrdma: Fix disconnect regression (Don Dutile) [1635418]
- [infiniband] RDMA/uverbs: Fix validity check for modify QP (Don Dutile) [1635418]
- [infiniband] IB/srp: Avoid that sg_reset -d $srp_device triggers an infinite loop (Don Dutile) [1635418]
- [infiniband] ucma: fix a use-after-free in ucma_resolve_ip() (Don Dutile) [1635418]
- [infiniband] RDMA/uverbs: Atomically flush and mark closed the comp event queue (Don Dutile) [1635418]
- [infiniband] RDMA/mlx4: Ensure that maximal send/receive SGE less than supported by HW (Don Dutile) [1635418 1623100]
- [infiniband] RDMA/cma: Protect cma dev list with lock (Don Dutile) [1635418]
- [infiniband] IB/ipoib: Avoid a race condition between start_xmit and cm_rep_handler (Don Dutile) [1635418]
- [infiniband] RDMA/ucma: check fd type in ucma_migrate_id() (Don Dutile) [1635418]
- [infiniband] RDMA/rxe: Set wqe->status correctly if an unexpected response is received (Don Dutile) [1635418]
- [infiniband] IB/IPoIB: Set ah valid flag in multicast send flow (Don Dutile) [1635418]
- [infiniband] RDMA/core: Avoid holding lock while initializing fields on stack (Don Dutile) [1635418]
- [infiniband] IB/rxe: Drop QP0 silently (Don Dutile) [1635418]
- [infiniband] RDMA/umem: Don't hold mmap_sem for too long (Don Dutile) [1635418]
- [infiniband] IB/srpt: Fix srpt_cm_req_recv() error path (2/2) (Don Dutile) [1635418]
- [infiniband] IB/srpt: Fix srpt_cm_req_recv() error path (1/2) (Don Dutile) [1635418]
- [infiniband] RDMA: Fix storage of PortInfo CapabilityMask in the kernel (Don Dutile) [1635418]
- [infiniband] IB/core: type promotion bug in rdma_rw_init_one_mr() (Don Dutile) [1635418]
- [infiniband] RDMA/i40w: Hold read semaphore while looking after VMA (Don Dutile) [1635418]
- [infiniband] vmw_pvrdma: Release netdev when vmxnet3 module is removed (Don Dutile) [1635418]
- [infiniband] ib_srpt: Fix a use-after-free in __srpt_close_all_ch() (Don Dutile) [1635418]
- [infiniband] ib_srpt: Fix a use-after-free in srpt_close_ch() (Don Dutile) [1635418]
- [infiniband] IB/srpt: Support HCAs with more than two ports (Don Dutile) [1635418]
- [infiniband] IB/rxe: don't clear the tx queue on every transfer (Don Dutile) [1635418]
- [infiniband] IB/core: add max_send_sge and max_recv_sge attributes (Don Dutile) [1635418 1623100]
- [infiniband] IB/rxe: support for 802.1q VLAN on the listener (Don Dutile) [1635418]
- [netdrv] cxgb4: impose mandatory VLAN usage when non-zero TAG ID (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: when max_tx_rate is 0 disable tx rate limiting (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: do not return DUPLEX_UNKNOWN when link is down (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: expose stats fetched from firmware via debugfs (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: remove stats fetched from firmware (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: specify IQTYPE in fw_iq_cmd (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: Fix the condition to check if the card is T5 (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: Support ethtool private flags (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: Add support for FW_ETH_TX_PKT_VM_WR (Arjun Vynipadath) [1628863]
- [netdrv] cxgb4: Add flag tc_flower_initialized (Arjun Vynipadath) [1628863]
- [s390] s390/zcrypt: remove VLA usage from the AP bus (Philipp Rudo) [1637865]
- [s390] s390/ap_bus: replace PTR_RET with PTR_ERR_OR_ZERO (Philipp Rudo) [1637865]
- [s390] s390/crypto: fix gcc 8 stringop-truncation warning (Philipp Rudo) [1637865]
- [s390] s390/zcrypt: code beautify (Philipp Rudo) [1637865]
- [s390] s390/zcrypt: add copy_from_user length plausibility checks (Philipp Rudo) [1637865]
- [s390] s390/zcrypt: Show load of cards and queues in sysfs (Philipp Rudo) [1637865]
- [s390] s390/kvm: fix deadlock when killed by oom (Philipp Rudo) [1638264]
- [fs] xfs: fix data corruption w/ unaligned reflink ranges (Brian Foster) [1633476]
- [fs] xfs: fix data corruption w/ unaligned dedupe ranges (Brian Foster) [1633476]
- [fs] xfs: update ctime and remove suid before cloning files (Brian Foster) [1633476]
- [fs] xfs: zero posteof blocks when cloning above eof (Brian Foster) [1633476]
- [fs] xfs: refactor clonerange preparation into a separate helper (Brian Foster) [1633476]
- [netdrv] nfp: avoid buffer leak when FW communication fails (Petr Oros) [1638233]
- [netdrv] nfp: don't fail probe on pci_sriov_set_totalvfs() errors (Petr Oros) [1638233]
- [netdrv] nfp: wait for posted reconfigs when disabling the device (Petr Oros) [1638233]
- [netdrv] liquidio: fix hang when re-binding VF host drv after running DPDK VF driver (Petr Oros) [1638224]
- [netdrv] r8169: set RxConfig after tx/rx is enabled for RTL8169sb/8110sb devices (Petr Oros) [1638210]
- [netdrv] r8169: add support for NCube 8168 network card (Petr Oros) [1638210]
- [netdrv] r8169: don't use MSI-X on RTL8106e (Petr Oros) [1638210]
- [netdrv] r8169: don't use MSI-X on RTL8168g (Petr Oros) [1638210]
- [powerpc] KVM: PPC: Book3S HV: Fix guest r11 corruption with POWER9 TM workarounds (David Gibson) [1637766]
- [drm] drm/amdgpu: Suppress keypresses from ACPI_VIDEO events (Lyude Paul) [1631918]
- [infiniband] IB/hfi1: Remove race conditions in user_sdma send path (Alex Estrin) [1637068]
- [infiniband] IB/hfi1: Eliminate races in the SDMA send error path (Alex Estrin) [1637068]
- [infiniband] IB/hfi1: Fix destroy_qp hang after a link down (Alex Estrin) [1637068]
- [infiniband] IB/hfi1: Fix context recovery when PBC has an UnsupportedVL (Alex Estrin) [1637068]
- [infiniband] IB/hfi1: Invalid user input can result in crash (Alex Estrin) [1637068]
- [infiniband] IB/hfi1: Fix SL array bounds check (Alex Estrin) [1637068]
- [powerpc] powerpc/fadump: re-register firmware-assisted dump if already registered (Steve Best) [1637383]
- [powerpc] powerpc/fadump: cleanup crash memory ranges support (Steve Best) [1637383]
- [powerpc] powerpc/fadump: merge adjacent memory ranges to reduce PT_LOAD segements (Steve Best) [1637383]
- [powerpc] powerpc/fadump: handle crash memory ranges array index overflow (Steve Best) [1637383]
- [scsi] scsi: qedi: Initialize the stats mutex lock (Chad Dupuis) [1637245]
- [fs] gfs2: Fix iomap buffered write support for journaled files (Andreas Grunbacher) [1637944]
- [fs] gfs2: eliminate update_rgrp_lvb_unlinked (Andreas Grunbacher) [1637944]
- [fs] gfs2: Fix gfs2_testbit to use clone bitmaps (Andreas Grunbacher) [1637944]
- [fs] gfs2: Get rid of gfs2_ea_strlen (Andreas Grunbacher) [1637944]
- [fs] GFS2: rgrp free blocks used incorrectly (Andreas Grunbacher) [1637944]
- [fs] gfs2: remove redundant variable 'moved' (Andreas Grunbacher) [1637944]
- [fs] gfs2: use iomap_readpage for blocksize == PAGE_SIZE (Andreas Grunbacher) [1637944]
- [fs] gfs2: Use iomap for stuffed direct I/O reads (Andreas Grunbacher) [1637944]
- [fs] gfs2: fallocate_chunk: Always initialize struct iomap (Andreas Grunbacher) [1637944]
- [fs] gfs2: Remove gfs2_write_(begin,end) (Andreas Grunbacher) [1637944]
- [fs] gfs2: iomap direct I/O support (Andreas Grunbacher) [1637944]
- [fs] gfs2: gfs2_extent_length cleanup (Andreas Grunbacher) [1637944]
- [fs] gfs2: iomap buffered write support (Andreas Grunbacher) [1637944]
- [fs] gfs2: Further iomap cleanups (Andreas Grunbacher) [1637944]
- [fs] fs: gfs2: Adding new return type vm_fault_t (Andreas Grunbacher) [1637944]
- [fs] gfs2: using posix_acl_xattr_size instead of posix_acl_to_xattr (Andreas Grunbacher) [1637944]
- [fs] gfs2: Don't reject a supposedly full bitmap if we have blocks reserved (Andreas Grunbacher) [1637944]
- [fs] gfs2: Eliminate redundant ip->i_rgd (Andreas Grunbacher) [1637944]
- [fs] gfs2: Stop messing with ip->i_rgd in the rlist code (Andreas Grunbacher) [1637944]
- [fs] gfs2: call ktime_get_coarse_real_ts64() directly (Andreas Grunbacher) [1637944]
- [fs] gfs2: Minor clarification to __gfs2_punch_hole (Andreas Grunbacher) [1637944]
- [fs] gfs2: Don't withdraw under a spin lock (Andreas Grunbacher) [1637944]
- [fs] gfs2: eliminate rs_inum and reduce the size of gfs2 inodes (Andreas Grunbacher) [1637944]
- [drm] drm/nouveau/drm/nouveau: Grab runtime PM ref in nv50_mstc_detect() (Lyude Paul) [1628749]
- [drm] drm/nouveau/disp: fix DP disable race (Lyude Paul) [1628749]
- [drm] drm/nouveau/drm/nouveau: Don't forget to cancel hpd_work on suspend/unload (Lyude Paul) [1628749]
- [drm] drm/nouveau/drm/nouveau: Prevent handling ACPI HPD events too early (Lyude Paul) [1628749]
- [drm] drm/nouveau: Reset MST branching unit before enabling (Lyude Paul) [1628749]
- [drm] drm/nouveau: Only write DP_MSTM_CTRL when needed (Lyude Paul) [1628749]
- [drm] drm/nouveau: Remove useless poll_enable() call in drm_load() (Lyude Paul) [1628749]
- [drm] drm/nouveau: Remove useless poll_disable() call in switcheroo_set_state() (Lyude Paul) [1628749]
- [drm] drm/nouveau: Remove useless poll_enable() call in switcheroo_set_state() (Lyude Paul) [1628749]
- [drm] drm/nouveau: Fix deadlocks in nouveau_connector_detect() (Lyude Paul) [1628749]
- [drm] drm/nouveau/drm/nouveau: Use pm_runtime_get_noresume() in connector_detect() (Lyude Paul) [1628749]
- [drm] drm/nouveau/drm/nouveau: Fix deadlock with fb_helper with async RPM requests (Lyude Paul) [1628749]
- [drm] drm/nouveau: Remove duplicate poll_enable() in pmops_runtime_suspend() (Lyude Paul) [1628749]
- [drm] drm/nouveau/drm/nouveau: Fix bogus drm_kms_helper_poll_enable() placement (Lyude Paul) [1628749]
- [md] dm table: require that request-based DM be layered on blk-mq devices (Mike Snitzer) [1637682]
- [md] dm: rename DM_TYPE_MQ_REQUEST_BASED to DM_TYPE_REQUEST_BASED (Mike Snitzer) [1637682]
- [md] dm: remove legacy request-based IO path (Mike Snitzer) [1637682]
- [md] dm linear: fix linear_end_io conditional definition (Mike Snitzer) [1637682]
- [md] dm linear: eliminate linear_end_io call if CONFIG_DM_ZONED disabled (Mike Snitzer) [1637682]
- [md] dm: fix report zone remapping to account for partition offset (Mike Snitzer) [1637682]
- [md] dm cache: destroy migration_cache if cache target registration failed (Mike Snitzer) [1637682]
- [md] dm cache: fix resize crash if user doesn't reload cache table (Mike Snitzer) [1637682]
- [md] dm cache metadata: ignore hints array being too small during resize (Mike Snitzer) [1637682]
- [md] dm raid: remove bogus const from decipher_sync_action() return type (Mike Snitzer) [1637682]
- [md] dm mpath: fix attached_handler_name leak and dangling hw_handler_name pointer (Mike Snitzer) [1637682]
- [md] dm thin metadata: fix __udivdi3 undefined on 32-bit (Mike Snitzer) [1637682]
- [md] dm thin metadata: try to avoid ever aborting transactions (Mike Snitzer) [1637682]
- [md] dm raid: bump target version, update comments and documentation (Mike Snitzer) [1637682]
- [md] dm raid: fix RAID leg rebuild errors (Mike Snitzer) [1637682]
- [md] dm raid: fix rebuild of specific devices by updating superblock (Mike Snitzer) [1637682]
- [md] dm raid: fix stripe adding reshape deadlock (Mike Snitzer) [1637682]
- [md] dm raid: fix reshape race on small devices (Mike Snitzer) [1637682]
- [md] dm: disable CRYPTO_TFM_REQ_MAY_SLEEP to fix a GFP_KERNEL recursion deadlock (Mike Snitzer) [1637682]
- [md] dm verity: fix crash on bufio buffer that was allocated with vmalloc (Mike Snitzer) [1637682]
- [md] dm writecache: fix a crash due to reading past end of dirty_bitmap (Mike Snitzer) [1637682]
- [md] dm crypt: don't decrease device limits (Mike Snitzer) [1637682]
- [md] dm cache metadata: set dirty on all cache blocks after a crash (Mike Snitzer) [1637682]
- [md] dm snapshot: remove stale FIXME in snapshot_map() (Mike Snitzer) [1637682]
- [md] dm snapshot: improve performance by switching out_of_order_list to rbtree (Mike Snitzer) [1637682]
- [md] dm kcopyd: avoid softlockup in run_complete_job (Mike Snitzer) [1637682]
- [md] dm cache metadata: save in-core policy_hint_size to on-disk superblock (Mike Snitzer) [1637682]
- [md] dm thin: stop no_space_timeout worker when switching to write-mode (Mike Snitzer) [1637682]
- [md] dm kcopyd: return void from dm_kcopyd_copy() (Mike Snitzer) [1637682]
- [md] dm thin: include metadata_low_watermark threshold in pool status (Mike Snitzer) [1637682]
- [md] dm writecache: report start_sector in status line (Mike Snitzer) [1637682]
- [md] dm crypt: convert essiv from ahash to shash (Mike Snitzer) [1637682]
- [md] dm crypt: use wake_up_process() instead of a wait queue (Mike Snitzer) [1637682]
- [md] dm integrity: recalculate checksums on creation (Mike Snitzer) [1637682]
- [md] dm integrity: flush journal on suspend when using separate metadata device (Mike Snitzer) [1637682]
- [md] dm integrity: use version 2 for separate metadata (Mike Snitzer) [1637682]
- [md] dm integrity: allow separate metadata device (Mike Snitzer) [1637682]
- [md] dm integrity: add ic->start in get_data_sector() (Mike Snitzer) [1637682]
- [md] dm integrity: report provided data sectors in the status (Mike Snitzer) [1637682]
- [md] dm integrity: implement fair range locks (Mike Snitzer) [1637682]
- [md] dm integrity: decouple common code in dm_integrity_map_continue() (Mike Snitzer) [1637682]
- [md] dm integrity: change 'suspending' variable from bool to int (Mike Snitzer) [1637682]
- [md] dm delay: add flush as a third class of IO (Mike Snitzer) [1637682]
- [md] dm delay: refactor repetitive code (Mike Snitzer) [1637682]
- [md] dm cache: only allow a single io_mode cache feature to be requested (Mike Snitzer) [1637682]
- [md] dm thin: update stale "Status" Documentation (Mike Snitzer) [1637682]
- [pci] PCI: Reprogram bridge prefetch registers on resume (Myron Stowe) [1637155]
- [input] Input: xen-kbdfront - fix multi-touch XenStore node's locations (Benjamin Tissoires) [1637027]
- [input] Input: elantech - enable middle button of touchpad on ThinkPad P72 (Benjamin Tissoires) [1637027]
- [hid] HID: i2c-hid: Use devm to allocate i2c_hid struct (Benjamin Tissoires) [1637027]
- [hid] HID: input: fix leaking custom input node name (Benjamin Tissoires) [1637027]
- [hid] HID: core: fix grouping by application (Benjamin Tissoires) [1637027]
- [hid] HID: multitouch: fix Elan panels with 2 input modes declaration (Benjamin Tissoires) [1637027]
- [input] Input: do not use WARN() in input_alloc_absinfo() (Benjamin Tissoires) [1637027]
- [s390] s390: vfio-ap: setup APCB mask using KVM dedicated function (Cornelia Huck) [1508118]
- [s390] KVM: s390: Tracing APCB changes (Cornelia Huck) [1508118]
- [s390] KVM: s390: fix locking for crypto setting error path (Cornelia Huck) [1508118]
- [s390] s390: doc: detailed specifications for AP virtualization (Cornelia Huck) [1508118]
- [s390] KVM: s390: CPU model support for AP virtualization (Cornelia Huck) [1508118]
- [s390] KVM: s390: device attrs to enable/disable AP interpretation (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: allow guest FORMAT-0 CRYCB on host FORMAT-2 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: allow guest FORMAT-1 CRYCB on host FORMAT-2 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: allow guest FORMAT-0 CRYCB on host FORMAT-1 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: allow CRYCB FORMAT-0 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: allow CRYCB FORMAT-1 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: Allow CRYCB FORMAT-2 (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: Make use of CRYCB FORMAT2 clear (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: Do the CRYCB validation first (Cornelia Huck) [1508118]
- [s390] KVM: s390: Clear Crypto Control Block when using vSIE (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: implement VFIO_DEVICE_RESET ioctl (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: zeroize the AP queues (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: implement VFIO_DEVICE_GET_INFO ioctl (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: implement mediated device open callback (Cornelia Huck) [1508118]
- [s390] KVM: s390: interface to clear CRYCB masks (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: sysfs interface to view matrix mdev matrix (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: sysfs interfaces to configure control domains (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: sysfs interfaces to configure domains (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: sysfs interfaces to configure adapters (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: register matrix device with VFIO mdev framework (Cornelia Huck) [1508118]
- [s390] s390: vfio-ap: base implementation of VFIO AP device driver (Cornelia Huck) [1508118]
- [s390] KVM: s390: refactor crypto initialization (Cornelia Huck) [1508118]
- [s390] KVM: s390: introduce and use KVM_REQ_VSIE_RESTART (Cornelia Huck) [1508118]
- [s390] KVM: s390: vsie: simulate VCPU SIE entry/exit (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: hex string mask improvements for apmask and aqmask (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: AP bus support for alternate driver(s) (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: switch return type to bool for ap_instructions_available() (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: fix ap_instructions_available() returncodes (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: Integrate ap_asm.h into include/asm/ap.h (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: Review inline assembler constraints (Cornelia Huck) [1508118]
- [s390] s390/zcrypt: Add ZAPQ inline function (Cornelia Huck) [1508118]
- [net] ipv6: use rt6_info members when dst is set in rt6_fill_node (Xin Long) [1625864 1625803 1625117]

* Thu Oct 11 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-24.el8]
- [netdrv] amd-xgbe: use dma_mapping_error to check map errors (David Arcari) [1637666]
- [crypto] crypto: qat - Fix KASAN stack-out-of-bounds bug in adf_probe() (Waiman Long) [1629547]
- [powerpc] powerpc: fix csum_ipv6_magic() on little endian platforms (Diego Domingos) [1625579]
- [net] smc: generic netlink family should be __ro_after_init (Philipp Rudo) [1632435]
- [net] net/smc: fix sizeof to int comparison (Philipp Rudo) [1632435]
- [net] net/smc: no urgent data check for listen sockets (Philipp Rudo) [1632435]
- [net] net/smc: enable fallback for connection abort in state INIT (Philipp Rudo) [1632435]
- [net] net/smc: remove duplicate mutex_unlock (Philipp Rudo) [1632435]
- [net] net/smc: fix non-blocking connect problem (Philipp Rudo) [1632435]
- [net] net/smc: send response to test link signal (Philipp Rudo) [1632435]
- [net] net: simplify sock_poll_wait (Philipp Rudo) [1632435]
- [net] net/smc: Simplify ib_post_(send|recv|srq_recv)() calls (Philipp Rudo) [1632435]
- [net] net/smc: Remove a WARN_ON() statement (Philipp Rudo) [1632435]
- [powerpc] KVM: PPC: Book3S HV: Add NO_HASH flag to GET_SMMU_INFO ioctl result (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Add a VM capability to enable nested virtualization (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Add nested shadow page tables to debugfs (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Allow HV module to load without hypervisor mode (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Handle differing endianness for H_ENTER_NESTED (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Sanitise hv_regs on nested guest entry (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Add one-reg interface to virtual PTCR register (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Don't access HFSCR, LPIDR or LPCR when running nested (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Invalidate TLB when nested vcpu moves physical cpu (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Use hypercalls for TLB invalidation when nested (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Implement H_TLB_INVALIDATE hcall (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Introduce rmap to track nested guest mappings (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Handle page fault for a nested guest (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Handle hypercalls correctly when nested (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Use XICS hypercalls when running as a nested hypervisor (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Nested guest entry via hypercall (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Framework and hcall stubs for nested virtualization (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Use kvmppc_unmap_pte() in kvm_unmap_radix() (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Refactor radix page fault handler (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Make kvmppc_mmu_radix_xlate process/partition table agnostic (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Clear partition table entry on vm teardown (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Use ccr field in pt_regs struct embedded in vcpu struct (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Add a debugfs file to dump radix mappings (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Handle hypervisor instruction faults better (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Streamlined guest entry/exit path on P9 for radix guests (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Call kvmppc_handle_exit_hv() with vcore unlocked (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S: Rework TM save/restore code and make it C-callable (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Simplify real-mode interrupt handling (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Extract PMU save/restore operations as C-callable functions (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Move interrupt delivery on guest entry to C code (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S HV: Remove left-over code in XICS-on-XIVE emulation (Suraj Jitindar Singh) [1505999]
- [powerpc] KVM: PPC: Book3S: Simplify external interrupt handling (Suraj Jitindar Singh) [1505999]
- [powerpc] powerpc: Turn off CPU_FTR_P9_TM_HV_ASSIST in non-hypervisor mode (Suraj Jitindar Singh) [1505999]
- [powerpc] powerpc/64s: Remove POWER9 DD1 support (Suraj Jitindar Singh) [1505999]
- [netdrv] net/mlx5: Add Fast teardown support (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Set vlan masks for all offloaded TC rules (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: E-Switch, Fix out of bound access when setting vport rate (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Avoid unbounded peer devices when unpairing TC hairpin rules (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Cache the system image guid (Alaa Hleihel) [1636554]
- [netdrv] mlx5: remove ndo_poll_controller (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Check for SQ and not RQ state when modifying hairpin SQ (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix read from coherent memory (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: don't set CHECKSUM_COMPLETE on SCTP packets (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Set ECN for received packets using CQE indication (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix possible deadlock from lockdep when adding fte to fg (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Check for error in mlx5_attach_interface (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Consider PCI domain in search for next dev (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix not releasing read lock when adding flow rules (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: E-Switch, Fix memory leak when creating switchdev mode FDB tables (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Use u16 for Work Queue buffer strides offset (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Use u16 for Work Queue buffer fragment size (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix debugfs cleanup in the device init/remove flow (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix use-after-free in self-healing flow (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Make function mlx5i_grp_sw_update_stats() static (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: IPoIB, Use priv stats in completion rx flow (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: IPoIB, Add ndo stats support for IPoIB child devices (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: IPoIB, Add ndo stats support for IPoIB netdevices (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: IPoIB, Initialize max_opened_tc in mlx5i_init flow (Alaa Hleihel) [1636554]
- [netdrv] IB/mlx5: Fix leaking stack memory to userspace (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Reorganize the makefile (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: clock.c depends on CONFIG_PTP_1588_CLOCK (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: vxlan.c depends on CONFIG_VXLAN (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Move flow steering declarations into en/fs.h (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add CONFIG_MLX5_EN_ARFS for accelerated flow steering support (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add CONFIG_MLX5_EN_RXNFC for ethtool rx nfc (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Ethtool steering, move ethtool callbacks (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Reduce command polling interval (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Use max_num_eqs for calculation of required MSIX vectors (Alaa Hleihel) [1636554]
- [netdrv] RDMA/mlx5: Fix shift overflow in mlx5_ib_create_wq (Alaa Hleihel) [1636554]
- [netdrv] overflow.h: Add arithmetic shift helper (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Fix uninitialized variable (Alaa Hleihel) [1636554]
- [netdrv] RDMA: Fix return code check in rdma_set_cq_moderation (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, move vxlan logic to core driver (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, add sync lock for add/del vxlan port (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, return values for add/del port (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, rename from mlx5e to mlx5 (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, rename struct mlx5e_vxlan to mlx5_vxlan_port (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, move netdev only logic to en_main.c (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, add direct delete function (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, cleanup an unused member in vxlan work (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, replace ports radix-tree with hash table (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, check maximum number of UDP ports (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Vxlan, reflect 4789 UDP port default addition to software database (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Move XDP related code into new XDP files (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Restrict the combination of large MTU and XDP (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Gather all XDP pre-requisite checks in a single function (Alaa Hleihel) [1636554]
- [netdrv] IB/mlx5: avoid excessive warning msgs when creating VFs on 2nd port (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Use PARTIAL_GSO for UDP segmentation (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Remove redundant WARN when we cannot find neigh entry (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Fix tristate and description for MLX5 module (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Better return types for CQE API (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Use ERR_CAST() instead of coding it (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Add missing SET_DRIVER_VERSION command translation (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: fix uaccess beyond "count" in debugfs read/write handlers (Alaa Hleihel) [1636554]
- [netdrv] IB/mlx5: Honor cnt_set_id_valid flag instead of set_id (Alaa Hleihel) [1636554]
- [infiniband] IB/mlx5: fix uaccess beyond "count" in debugfs read/write handlers (Alaa Hleihel) [1636554]
- [infiniband] IB/mlx5: Fix GRE flow specification (Alaa Hleihel) [1636554]
- [infiniband] IB/mlx5: Remove set-but-not-used variables (Alaa Hleihel) [1636554]
- [infiniband] RDMA/mlx5: Don't leak UARs in case of free fails (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Update NIC HW stats on demand only (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add counter for total num of NOP operations (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add counter for MPWQE filler strides (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add channel events counter (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add a counter for congested UMRs (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add NAPI statistics (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add XDP_TX completions statistics (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add TX completions statistics (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: RX, Use existing WQ local variable (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Convert large order kzalloc allocations to kvzalloc (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add UDP GSO remaining counter (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5e: Add UDP GSO support (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Rate limit errors in command interface (Alaa Hleihel) [1636554]
- [netdrv] net/mlx5: Prevent warns in dmesg upon firmware commands (Alaa Hleihel) [1636554]
- [netdrv] mlx4: remove ndo_poll_controller (Alaa Hleihel) [1636553]
- [netdrv] net/mlx4: Use cpumask_available for eq->affinity_mask (Alaa Hleihel) [1636553]
- [netdrv] net/mlx4/en_rx: Mark expected switch fall-throughs (Alaa Hleihel) [1636553]
- [netdrv] net/mlx4/mcg: Mark expected switch fall-throughs (Alaa Hleihel) [1636553]
- [infiniband] IB/mlx4: Use 4K pages for kernel QP's WQE buffer (Alaa Hleihel) [1636553]
- [netdrv] net/mlx4_core: Allow MTTs starting at any index (Alaa Hleihel) [1636553]
- [infiniband] IB/mlx4: Test port number before querying type (Alaa Hleihel) [1636553]
- [powerpc] powerpc/numa: Skip onlining a offline node in kdump path (Steve Best) [1637118]
- [netdrv] net: aquantia: Make function aq_fw1x_set_power() static (David Arcari) [1636533]
- [netdrv] net: aquantia: memory corruption on jumbo frames (David Arcari) [1636533 1630377]
- [netdrv] net: aquantia: bump driver version (David Arcari) [1636533]
- [netdrv] net: aquantia: renaming for better visibility (David Arcari) [1636533]
- [netdrv] net: aquantia: whitespace changes (David Arcari) [1636533]
- [netdrv] net: aquantia: implement EEE support (David Arcari) [1636533]
- [netdrv] net: aquantia: implement WOL support (David Arcari) [1636533]
- [netdrv] net: aquantia: definitions for WOL (David Arcari) [1636533]
- [netdrv] net: aquantia: fix hw_atl_utils_fw_upload_dwords (David Arcari) [1636533]
- [netdrv] net: aquantia: Make some functions static (David Arcari) [1636533]
- [netdrv] net: aquantia: bump driver version (David Arcari) [1636533]
- [netdrv] net: aquantia: Add renegotiate ethtool operation support (David Arcari) [1636533]
- [netdrv] net: aquantia: Implement rx/tx flow control ethtools callback (David Arcari) [1636533]
- [netdrv] net: aquantia: Improve adapter init/deinit logic (David Arcari) [1636533]
- [netdrv] net: aquantia: Ethtool based ring size configuration (David Arcari) [1636533]
- [wireless] ath10k: fix memory leak of tpc_stats (Petr Oros) [1637528]
- [wireless] ath10k: snoc: use correct bus-specific pointer in RX retry (Petr Oros) [1637528]
- [wireless] ath10k: fix incorrect size of dma_free_coherent in ath10k_ce_alloc_src_ring_64 (Petr Oros) [1637528]
- [wireless] brcmsmac: fix wrap around in conversion from constant to s16 (Petr Oros) [1637528]
- [wireless] mt76x2: fix mrr idx/count estimation in mt76x2_mac_fill_tx_status() (Petr Oros) [1637528]
- [wireless] ath10k: transmit queued frames after processing rx packets (Petr Oros) [1637528]
- [wireless] ath10k: protect ath10k_htt_rx_ring_free with rx_ring.lock (Petr Oros) [1637528]
- [wireless] ath10k: use locked skb_dequeue for rx completions (Petr Oros) [1637528]
- [wireless] ath10k: sdio: set skb len for all rx packets (Petr Oros) [1637528]
- [wireless] ath10k: sdio: use same endpoint id for all packets in a bundle (Petr Oros) [1637528]
- [wireless] iwlwifi: cancel the injective function between hw pointers to tfd entry index (Petr Oros) [1637528]
- [wireless] ath10k: disable bundle mgmt tx completion event support (Petr Oros) [1637528]
- [wireless] ath10k: prevent active scans on potential unusable channels (Petr Oros) [1637528]
- [wireless] ath9k_hw: fix channel maximum power level test (Petr Oros) [1637528]
- [wireless] ath9k: report tx status on EOSP (Petr Oros) [1637528]
- [wireless] iwlwifi: pcie: don't access periphery registers when not available (Petr Oros) [1637528]
- [wireless] brcmfmac: fix brcmf_wiphy_wowl_params() NULL pointer dereference (Petr Oros) [1637528]
- [netdrv] be2net: don't flip hw_features when VXLANs are added/deleted (Petr Oros) [1637133]
- [netdrv] be2net: Fix memory leak in be_cmd_get_profile_config() (Petr Oros) [1637133]
- [netdrv] be2net: Mark expected switch fall-through (Petr Oros) [1637133]
- [netdrv] be2net: fix spelling mistake "seqence" -> "sequence" (Petr Oros) [1637133]
- [netdrv] be2net: Update the driver version to 12.0.0.0 (Petr Oros) [1637133]
- [netdrv] be2net: gather debug info and reset adapter (only for Lancer) on a tx-timeout (Petr Oros) [1637133]
- [netdrv] be2net: move rss_flags field in rss_info to ensure proper alignment (Petr Oros) [1637133]
- [netdrv] be2net: re-order fields in be_error_recovert to avoid hole (Petr Oros) [1637133]
- [netdrv] be2net: remove unused tx_jiffies field from be_tx_stats (Petr Oros) [1637133]
- [netdrv] be2net: move txcp field in be_tx_obj to eliminate holes in the struct (Petr Oros) [1637133]
- [netdrv] be2net: reorder fields in be_eq_obj structure (Petr Oros) [1637133]
- [netdrv] be2net: remove desc field from be_eq_obj (Petr Oros) [1637133]
- [netdrv] be2net: remove unused old custom busy-poll fields (Petr Oros) [1637133]
- [netdrv] be2net: remove unused old AIC info (Petr Oros) [1637133]
- [x86] x86/spec_ctrl/compat: Call IBRS_ENTRY only after valid kernel stack (Waiman Long) [1636843]
- [acpi] ACPI/PPTT: Handle architecturally unknown cache types (Jeremy Linton) [1636567]
- [base] drivers: base: cacheinfo: Do not populate sysfs for unknown cache types (Jeremy Linton) [1636567]
- [fs] getxattr: use correct xattr length (Lukas Czerner) [1637049]
- [x86] Mark Intel Cascade Lake supported (Steve Best) [1636651]
- [x86] x86/boot: Fix kexec booting failure in the SEV bit detection code (Kairui Song) [1632514]
- [scsi] scsi: megaraid_sas: driver version upgrade (Tomas Henzl) [1635565]
- [scsi] scsi: megaraid_sas: Support FW provided TM timeout values (Tomas Henzl) [1635565]
- [scsi] scsi: megaraid_sas: Return immediately from wait_for_adapter_operational after kill adapter (Tomas Henzl) [1635565]
- [scsi] scsi: megaraid_sas: Update controller info during resume (Tomas Henzl) [1635565]
- [scsi] scsi: megaraid_sas: Do not do Kill adapter if GET_CTRL_INFO times out (Tomas Henzl) [1635565]
- [scsi] qla2xxx: Update driver version to 10.00.00.07.08.0-k (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Check for Register disconnect (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix driver hang when FC-NVMe LUNs are configured (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix re-using LoopID when handle is in use (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix duplicate switch database entries (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix NVMe session hang on unload (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix iIDMA error (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix stalled relogin (Himanshu Madhani) [1633373]
- [scsi] scsi: qla2xxx: Fix unintended Logout (Himanshu Madhani) [1633373]
- [powerpc] powerpc/pseries: Disable CPU hotplug across migrations (Steve Best) [1633587]
- [block] blk-mq: I/O and timer unplugs are inverted in blktrace (Ming Lei) [1634330]
- [block] block: fix deadline elevator drain for zoned block devices (Ming Lei) [1634333]
- [block] blk-mq: Allow blocking queue tag iter callbacks (Ming Lei) [1634328]
- [block] block: use nanosecond resolution for iostat (Ming Lei) [1634329]
- [block] null_blk: fix zoned support for non-rq based operation (Ming Lei) [1634324]
- [block] blk-cgroup: increase number of supported policies (Ming Lei) [1634335]
- [block] block: bfq: swap puts in bfqg_and_blkg_put (Ming Lei) [1634334]
- [block] block: don't warn when doing fsync on read-only devices (Ming Lei) [1634331]
- [block] blkcg: use tryget logic when associating a blkg with a bio (Ming Lei) [1634332]
- [block] blkcg: delay blkg destruction until after writeback has (Ming Lei) [1634332]
- [block] Revert "blk-throttle: fix race between (Ming Lei) [1634332]
- [block] blk-wbt: remove dead code (Ming Lei) [1634326]
- [block] blk-wbt: improve waking of tasks (Ming Lei) [1634326]
- [block] blk-wbt: abstract out end IO completion handler (Ming Lei) [1634326]

* Tue Oct 09 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-23.el8]
- [dma] driver/dma/ioat: Call del_timer_sync() without holding prep_lock (Waiman Long) [1607654]
- [netdrv] bnxt_en: Fix VF mac address regression (Jonathan Toppins) [1635846]
- [netdrv] bnxt_en: Do not adjust max_cp_rings by the ones used by RDMA (Jonathan Toppins) [1635846]
- [netdrv] bnxt_en: Clean up unused functions (Jonathan Toppins) [1635846]
- [fs] fsnotify: fix ignore mask logic in fsnotify() (Lukas Czerner) [1635537]
- [net] net/af_iucv: locate IUCV header via skb_network_header() (Philipp Rudo) [1635332]
- [net] net/af_iucv: drop inbound packets with invalid flags (Philipp Rudo) [1635332]
- [net] net/af_iucv: fix skb handling on HiperTransport xmit error (Philipp Rudo) [1635332]
- [hid] HID: i2c-hid: Fix flooded incomplete report after S3 on Rayd touchscreen (David Arcari) [1635746]
- [i2c] i2c: core: ACPI: Make acpi_gsb_i2c_read_bytes() check i2c_transfer return value (David Arcari) [1635746]
- [i2c] i2c: designware: Re-init controllers with pm_disabled set on resume (David Arcari) [1635746]
- [i2c] i2c: core: ACPI: Properly set status byte to 0 for multi-byte writes (David Arcari) [1635746]
- [fs] fs/quota: Fix spectre gadget in do_quotactl (Lukas Czerner) [1635521]
- [fs] xfs: fix error handling in xfs_bmap_extents_to_btree (Brian Foster) [1633171]
- [fs] xfs: remove invalid log recovery first/last cycle check (Brian Foster) [1633171]
- [fs] xfs: validate inode di_forkoff (Brian Foster) [1633171]
- [fs] xfs: skip delalloc COW blocks in xfs_reflink_end_cow (Brian Foster) [1633171]
- [fs] xfs: don't treat unknown di_flags2 as corruption in scrub (Brian Foster) [1633171]
- [fs] xfs: remove duplicated include from alloc.c (Brian Foster) [1633171]
- [fs] xfs: don't bring in extents in xfs_bmap_punch_delalloc_range (Brian Foster) [1633171]
- [fs] xfs: fix transaction leak in xfs_reflink_allocate_cow() (Brian Foster) [1633171]
- [fs] xfs: avoid lockdep false positives in xfs_trans_alloc (Brian Foster) [1633171]
- [fs] xfs: refactor xfs_buf_log_item reference count handling (Brian Foster) [1633171]
- [fs] xfs: clean up xfs_trans_brelse() (Brian Foster) [1633171]
- [fs] xfs: don't unlock invalidated buf on aborted tx commit (Brian Foster) [1633171]
- [fs] xfs: remove last of unnecessary xfs_defer_cancel() callers (Brian Foster) [1633171]
- [fs] xfs: don't crash the vfs on a garbage inline symlink (Brian Foster) [1633171]
- [fs] iomap: set page dirty after partial delalloc on mkwrite (Brian Foster) [1633171]
- [fs] xfs: sanity check ag header values in xrep_calc_ag_resblks (Brian Foster) [1633171]
- [fs] xfs: recalculate summary counters at mount time if icount is bad (Brian Foster) [1633171]
- [fs] xfs: fix a null pointer dereference in xfs_bmap_extents_to_btree (Brian Foster) [1633171]
- [fs] xfs: remove b_last_holder & associated macros (Brian Foster) [1633171]
- [fs] xfs: repair the AGI (Brian Foster) [1633171]
- [fs] xfs: repair the AGFL (Brian Foster) [1633171]
- [fs] xfs: repair the AGF (Brian Foster) [1633171]
- [fs] xfs: remove dead error handling code in xfs_dquot_disk_alloc() (Brian Foster) [1633171]
- [fs] xfs: use WRITE_ONCE to update if_seq (Brian Foster) [1633171]
- [fs] xfs: fix a comment in xfs_log_reserve (Brian Foster) [1633171]
- [fs] xfs: only validate summary counts on primary superblock (Brian Foster) [1633171]
- [fs] xfs: substitute spaces with tabs (Brian Foster) [1633171]
- [fs] xfs: fold dfops into the transaction (Brian Foster) [1633171]
- [fs] xfs: always defer agfl block frees (Brian Foster) [1633171]
- [fs] xfs: pass transaction to xfs_defer_add() (Brian Foster) [1633171]
- [fs] xfs: replace xfs_defer_ops ->dop_pending with on-stack list (Brian Foster) [1633171]
- [fs] xfs: cancel dfops on xfs_defer_finish() error (Brian Foster) [1633171]
- [fs] xfs: clean out superfluous dfops dop params/vars (Brian Foster) [1633171]
- [fs] xfs: drop dop param from xfs_defer_op_type ->finish_item() callback (Brian Foster) [1633171]
- [fs] xfs: automatic dfops inode relogging (Brian Foster) [1633171]
- [fs] xfs: automatic dfops buffer relogging (Brian Foster) [1633171]
- [fs] xfs: add missing defer ijoins for held inodes (Brian Foster) [1633171]
- [fs] xfs: replace dop_low with transaction flag (Brian Foster) [1633171]
- [fs] xfs: pass transaction to dfops reset/move helpers (Brian Foster) [1633171]
- [fs] xfs: remove unused __xfs_defer_cancel() internal helper (Brian Foster) [1633171]
- [fs] xfs: use transaction for intent recovery instead of raw dfops (Brian Foster) [1633171]
- [fs] xfs: refactor internal dfops initialization (Brian Foster) [1633171]
- [fs] xfs: check da node magic in _node_lookup_int (Brian Foster) [1633171]
- [fs] xfs: use a local variable for magic number in xfs_da3_node_lookup_int (Brian Foster) [1633171]
- [fs] xfs: refactor log recovery check (Brian Foster) [1633171]
- [fs] xfs: move extent busy tree initialization to xfs_initialize_perag (Brian Foster) [1633171]
- [fs] xfs: avoid COW fork extent lookups in writeback if the fork didn't change (Brian Foster) [1633171]
- [fs] xfs: maintain a sequence count for inode fork manipulations (Brian Foster) [1633171]
- [fs] xfs: check for unknown v5 feature bits in superblock write verifier (Brian Foster) [1633171]
- [fs] xfs: verify icount in superblock write (Brian Foster) [1633171]
- [fs] libxfs: add more bounds checking to sb sanity checks (Brian Foster) [1633171]
- [fs] xfs: refactor superblock verifiers (Brian Foster) [1633171]
- [fs] xfs: refactor the xrep_extent_list into xfs_bitmap (Brian Foster) [1633171]
- [fs] xfs: introduce a new xfs_inode_has_cow_data helper (Brian Foster) [1633171]
- [fs] xfs: remove the xfs_ifork_t typedef (Brian Foster) [1633171]
- [fs] xfs: simplify xfs_idata_realloc (Brian Foster) [1633171]
- [fs] xfs: remove if_real_bytes (Brian Foster) [1633171]
- [fs] xfs: move the repair extent list into its own file (Brian Foster) [1633171]
- [fs] xfs: pass transaction lock while setting up agresv on cyclic metadata (Brian Foster) [1633171]
- [fs] xfs: remove deprecated barrier/nobarrier mount (Brian Foster) [1633171]
- [fs] xfs: clean up IRELE/iput callsites (Brian Foster) [1633171]
- [fs] xfs: kill IHOLD (Brian Foster) [1633171]
- [fs] xfs: bypass final dfops roll in trans commit path (Brian Foster) [1633171]
- [fs] xfs: drop unnecessary xfs_defer_finish() dfops parameter (Brian Foster) [1633171]
- [fs] xfs: remove unnecessary dfops init calls in xattr code (Brian Foster) [1633171]
- [fs] xfs: remove all boilerplate defer init/finish code (Brian Foster) [1633171]
- [fs] xfs: use internal dfops during (b|c)ui recovery (Brian Foster) [1633171]
- [fs] xfs: use internal dfops in attr code (Brian Foster) [1633171]
- [fs] xfs: use internal dfops in cow blocks cancel (Brian Foster) [1633171]
- [fs] xfs: support embedded dfops in transaction (Brian Foster) [1633171]
- [fs] xfs: pack holes in xfs_defer_ops and xfs_trans (Brian Foster) [1633171]
- [fs] xfs: reset dfops to initial state after finish (Brian Foster) [1633171]
- [fs] xfs: remove unused deferred ops committed field (Brian Foster) [1633171]
- [fs] xfs: make deferred processing safe for embedded dfops (Brian Foster) [1633171]
- [fs] xfs: fix transaction leak on remote attr set/remove failure (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops in log recovery intent processing (Brian Foster) [1633171]
- [fs] xfs: pull up dfops from xfs_itruncate_extents() (Brian Foster) [1633171]
- [fs] xfs: force summary counter recalc at next mount (Brian Foster) [1633171]
- [fs] xfs: refactor unmount record write (Brian Foster) [1633171]
- [fs] xfs: detect and fix bad summary counts at mount (Brian Foster) [1633171]
- [fs] xfs: fix indentation and other whitespace problems in scrub/repair (Brian Foster) [1633171]
- [fs] xfs: shorten struct xfs_scrub_context to struct xfs_scrub (Brian Foster) [1633171]
- [fs] xfs: shorten xfs_repair_ prefix to xrep_ (Brian Foster) [1633171]
- [fs] xfs: shorten xfs_scrub_ prefix (Brian Foster) [1633171]
- [fs] xfs: clean up xfs_btree_del_cursor callers (Brian Foster) [1633171]
- [fs] xfs: trivial xfs_btree_del_cursor cleanups (Brian Foster) [1633171]
- [fs] xfs: return from _defer_finish with a clean transaction (Brian Foster) [1633171]
- [fs] xfs: check leaf attribute block freemap in verifier (Brian Foster) [1633171]
- [fs] libxfs: Fix a couple of sparse complaintis (Brian Foster) [1633171]
- [fs] xfs: use swap macro in xfs_dir2_leafn_rebalance (Brian Foster) [1633171]
- [fs] xfs_bmap_util: use swap macro (Brian Foster) [1633171]
- [fs] xfs_attr_leaf: use swap macro in xfs_attr3_leaf_rebalance (Brian Foster) [1633171]
- [fs] xfs: don't assume a left rmap when allocating a new rmap (Brian Foster) [1633171]
- [fs] xfs: kill __xfs_buf_submit_common() (Brian Foster) [1633171]
- [fs] xfs: combine (a)sync buffer submission apis (Brian Foster) [1633171]
- [fs] xfs: use sync buffer I/O for sync delwri queue submission (Brian Foster) [1633171]
- [fs] xfs: refactor buffer submission into a common helper (Brian Foster) [1633171]
- [fs] xfs: remove xfs_defer_init() firstblock param (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in inode inactivate (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in extent swap (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in reflink cow block cancel (Brian Foster) [1633171]
- [fs] xfs: replace no-op firstblock init with ->t_firstblock (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in dq alloc (Brian Foster) [1633171]
- [fs] xfs: remove xfs_alloc_arg firstblock field (Brian Foster) [1633171]
- [fs] xfs: remove xfs_btree_cur private firstblock field (Brian Foster) [1633171]
- [fs] xfs: remove bmap format helpers firstblock params (Brian Foster) [1633171]
- [fs] xfs: remove bmap extent add helper firstblock params (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bmalloca firstblock field (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in bmap extent split (Brian Foster) [1633171]
- [fs] xfs: remove bmap insert/collapse firstblock param (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bunmapi() firstblock param (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bmapi_write() firstblock param (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in insert/collapse range (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in xfs_bmapi_remap() (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock for all xfs_bunmapi() callers (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock for all xfs_bmapi_write() callers (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in xattr ops (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in attrfork add (Brian Foster) [1633171]
- [fs] xfs: remove firstblock param from xfs dir ops (Brian Foster) [1633171]
- [fs] xfs: use ->t_firstblock in dir ops (Brian Foster) [1633171]
- [fs] xfs: add firstblock field to xfs_trans (Brian Foster) [1633171]
- [fs] xfs: allow null firstblock in xfs_bmapi_write() when tp is null (Brian Foster) [1633171]
- [fs] xfs: refactor dfops init to attach to transaction (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops in reflink cow recover path (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops in cancel cow blocks operation (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for rmap extent swap operations (Brian Foster) [1633171]
- [fs] xfs: remove unused btree cursor bc_private.a.dfops field (Brian Foster) [1633171]
- [fs] xfs: remove xfs_btree_cur bmbt dfops field (Brian Foster) [1633171]
- [fs] xfs: remove dfops param from internal bmap extent helpers (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for collapse/insert range operations (Brian Foster) [1633171]
- [fs] xfs: remove struct xfs_bmalloca dfops field (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bmapi_remap() dfops param (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bunmapi() dfops param (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for all xfs_bunmapi() callers (Brian Foster) [1633171]
- [fs] xfs: remove xfs_bmapi_write() dfops param (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for all xfs_bmapi_write() callers (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops in dqalloc transaction (Brian Foster) [1633171]
- [fs] xfs: replace xfs_da_args->dfops accesses with ->t_dfops and remove (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops in extent split tx and remove param (Brian Foster) [1633171]
- [fs] xfs: remove dfops param in attr fork add path (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for attr set/remove operations (Brian Foster) [1633171]
- [fs] xfs: use ->t_dfops for recovery of (b|c)ui log items (Brian Foster) [1633171]
- [fs] xfs: remove dfops param from high level dirname calls (Brian Foster) [1633171]
- [fs] xfs: remove dfops parameter from ifree call stack (Brian Foster) [1633171]
- [fs] xfs: rename xfs_trans ->t_agfl_dfops to ->t_dfops (Brian Foster) [1633171]
- [fs] xfs: cow unwritten conversion uses uninitialized dfops (Brian Foster) [1633171]
- [fs] xfs: update my copyrights for the writeback and iomap code (Brian Foster) [1633171]
- [fs] xfs: add support for sub-pagesize writeback without buffer_heads (Brian Foster) [1633171]
- [fs] xfs: allow writeback on pages without buffer heads (Brian Foster) [1633171]
- [fs] xfs: refactor the tail of xfs_writepage_map (Brian Foster) [1633171]
- [fs] xfs: remove xfs_start_page_writeback (Brian Foster) [1633171]
- [fs] xfs: move all writeback buffer_head manipulation into xfs_map_at_offset (Brian Foster) [1633171]
- [fs] xfs: don't look at buffer heads in xfs_add_to_ioend (Brian Foster) [1633171]
- [fs] xfs: remove the imap_valid flag (Brian Foster) [1633171]
- [fs] xfs: simplify xfs_map_blocks by using xfs_iext_lookup_extent directly (Brian Foster) [1633171]
- [fs] xfs: remove xfs_reflink_find_cow_mapping (Brian Foster) [1633171]
- [fs] xfs: remove the now unused XFS_BMAPI_IGSTATE flag (Brian Foster) [1633171]
- [fs] xfs: make xfs_writepage_map extent map centric (Brian Foster) [1633171]
- [fs] xfs: rename the offset variable in xfs_writepage_map (Brian Foster) [1633171]
- [fs] xfs: remove xfs_map_cow (Brian Foster) [1633171]
- [fs] xfs: remove xfs_reflink_trim_irec_to_next_cow (Brian Foster) [1633171]
- [fs] xfs: don't use XFS_BMAPI_IGSTATE in xfs_map_blocks (Brian Foster) [1633171]
- [fs] xfs: don't clear imap_valid for a non-uptodate buffers (Brian Foster) [1633171]
- [fs] xfs: do not set the page uptodate in xfs_writepage_map (Brian Foster) [1633171]
- [fs] xfs: move locking into xfs_bmap_punch_delalloc_range (Brian Foster) [1633171]
- [fs] xfs: simplify xfs_aops_discard_page (Brian Foster) [1633171]
- [fs] xfs: use iomap for blocksize == PAGE_SIZE readpage and readpages (Brian Foster) [1633171]
- [fs] iomap: fix WARN_ON_ONCE on uninitialized variable (Brian Foster) [1633171]
- [fs] iomap: Switch to offset_in_page for clarity (Brian Foster) [1633171]
- [fs] iomap: add support for sub-pagesize buffered I/O without buffer heads (Brian Foster) [1633171]
- [fs] iomap: add inline data support to iomap_readpage_actor (Brian Foster) [1633171]
- [fs] iomap: support direct I/O to inline data (Brian Foster) [1633171]
- [fs] iomap: refactor iomap_dio_actor (Brian Foster) [1633171]
- [fs] iomap: add initial support for writes without buffer heads (Brian Foster) [1633171]
- [fs] iomap: add an iomap-based readpage and readpages implementation (Brian Foster) [1633171]
- [fs] iomap: add private pointer to struct iomap (Brian Foster) [1633171]
- [fs] iomap: add a page_done callback (Brian Foster) [1633171]
- [fs] iomap: generic inline data handling (Brian Foster) [1633171]
- [fs] iomap: complete partial direct I/O writes synchronously (Brian Foster) [1633171]
- [fs] iomap: mark newly allocated buffer heads as new (Brian Foster) [1633171]
- [fs] fs: factor out a __generic_write_end helper (Brian Foster) [1633171]
- [netdrv] amd-xgbe: mark driver as tech preview (David Arcari) [1633209]
- [fs] ext4, dax: set ext4_dax_aops for dax files (Lukas Czerner) [1633239]
- [fs] ext4, dax: add ext4_bmap to ext4_dax_aops (Lukas Czerner) [1633239]
- [fs] ext4: don't mark mmp buffer head dirty (Lukas Czerner) [1633239]
- [fs] ext4: show test_dummy_encryption mount option in /proc/mounts (Lukas Czerner) [1633239]
- [fs] ext4: fix online resizing for bigalloc file systems with a 1k block size (Lukas Czerner) [1633239]
- [fs] ext4: fix online resize's handling of a too-small final block group (Lukas Czerner) [1633239]
- [fs] ext4: recalucate superblock checksum after updating free blocks/inodes (Lukas Czerner) [1633239]
- [fs] ext4: avoid arithemetic overflow that can trigger a BUG (Lukas Czerner) [1633239]
- [fs] ext4: avoid divide by zero fault when deleting corrupted inline directories (Lukas Czerner) [1633239]
- [fs] ext4: check to make sure the rename(2)'s destination is not freed (Lukas Czerner) [1633239]
- [fs] ext4: remove unneeded variable "err" in ext4_mb_release_inode_pa() (Lukas Czerner) [1633239]
- [fs] ext4: fix spectre gadget in ext4_mb_regular_allocator() (Lukas Czerner) [1633239]
- [fs] ext4: check for NUL characters in extended attribute's name (Lukas Czerner) [1633239]
- [fs] ext4: use ext4_warning() for sb_getblk failure (Lukas Czerner) [1633239]
- [fs] ext4: fix race when setting the bitmap corrupted flag (Lukas Czerner) [1633239]
- [fs] ext4: reset error code in ext4_find_entry in fallback (Lukas Czerner) [1633239]
- [fs] ext4: check allocation failure when duplicating "data" in ext4_remount() (Lukas Czerner) [1633239]
- [fs] ext4: sysfs: print ext4_super_block fields as little-endian (Lukas Czerner) [1633239]
- [firmware] efi/x86: Handle page faults occurring while running EFI runtime services (Bhupesh Sharma) [1627557]
- [firmware] efi: Make efi_rts_work accessible to efi page fault handler (Bhupesh Sharma) [1627557]
- [firmware] efi: Remove the declaration of efi_late_init() as the function is unused (Bhupesh Sharma) [1627557]
- [firmware] efi: Use a work queue to invoke EFI Runtime Services (Bhupesh Sharma) [1627557]
- [firmware] efi/x86: Use non-blocking SetVariable() for efi_delete_dummy_variable() (Bhupesh Sharma) [1627557]
- [fs] gfs2: Special-case rindex for gfs2_grow (Robert S Peterson) [1628360]
- [fs] GFS2: Fix recovery issues for spectators (Robert S Peterson) [1628298]

* Fri Oct 05 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-22.el8]
- [powerpc] powerpc/pkeys: Fix reading of ibm, processor-storage-keys property (Steve Best) [1633551]
- [powerpc] powerpc/pseries: Remove unneeded uses of dlpar work queue (Steve Best) [1633544]
- [powerpc] powerpc/pseries: Remove prrn_work workqueue (Steve Best) [1633544]
- [pci] ACPI / hotplug / PCI: Don't scan for non-hotplug bridges if slot is not bridge (Myron Stowe) [1634816]
- [pci] PCI: Fix enabling of PASID on RC integrated endpoints (Myron Stowe) [1634816]
- [pci] IB/hfi1,PCI: Allow bus reset while probing (Myron Stowe) [1634816]
- [pci] PCI: Fix faulty logic in pci_reset_bus() (Myron Stowe) [1634816]
- [pci] PCI: pciehp: Fix hot-add vs powerfault detection order (Myron Stowe) [1634816]
- [pci] Revert "PCI: Add ACS quirk for Intel 300 series" (Myron Stowe) [1634816]
- [powerpc] powerpc/numa: Use associativity if VPHN hcall is successful (Steve Best) [1633569]
- [pci] PCI: vmd: White list for fast interrupt handlers (Myron Stowe) [1632816]
- [pci] PCI: Add function 1 DMA alias quirk for Marvell 88SS9183 (Myron Stowe) [1632816]
- [pci] PCI: Rename pci_try_reset_bus() to pci_reset_bus() (Myron Stowe) [1632816]
- [pci] PCI: Deprecate pci_reset_bus() and pci_reset_slot() functions (Myron Stowe) [1632816]
- [pci] PCI: Unify try slot and bus reset API (Myron Stowe) [1632816]
- [pci] PCI: Hide pci_reset_bridge_secondary_bus() from drivers (Myron Stowe) [1632816]
- [pci] IB/hfi1: Use pci_try_reset_bus() for initiating PCI Secondary Bus Reset (Myron Stowe) [1632816]
- [pci] PCI: Handle error return from pci_reset_bridge_secondary_bus() (Myron Stowe) [1632816]
- [pci] PCI/IOV: Tidy pci_sriov_set_totalvfs() (Myron Stowe) [1632816]
- [pci] PCI: Enable PASID only if entire path supports End-End TLP prefixes (Myron Stowe) [1632816]
- [pci] PCI: Expand documentation for pci_add_dma_alias() (Myron Stowe) [1632816]
- [pci] PCI: Add DMA alias quirk for Microsemi Switchtec NTB (Myron Stowe) [1632816]
- [pci] switchtec: Use generic PCI Vendor ID and Class Code (Myron Stowe) [1632816]
- [pci] PCI: Make pci_get_rom_size() static (Myron Stowe) [1632816]
- [pci] PCI: Add check code for last image indicator not set (Myron Stowe) [1632816]
- [pci] PCI: Avoid accessing memory outside the ROM BAR (Myron Stowe) [1632816]
- [pci] PCI: Make early dump functionality generic (Myron Stowe) [1632816]
- [pci] PCI: Cleanup PCI_REBAR_CTRL_BAR_SHIFT handling (Myron Stowe) [1632816]
- [pci] PCI: Restore resized BAR state on resume (Myron Stowe) [1632816]
- [pci] PCI: Clean up resource allocation in devm_of_pci_get_host_bridge_resources() (Myron Stowe) [1632816]
- [pci] PCI: Add ACS Redirect disable quirk for Intel Sunrise Point (Myron Stowe) [1632816]
- [pci] PCI: Add device-specific ACS Redirect disable infrastructure (Myron Stowe) [1632816]
- [pci] PCI: Convert device-specific ACS quirks from NULL termination to ARRAY_SIZE (Myron Stowe) [1632816]
- [pci] PCI: Add "pci=disable_acs_redir=" parameter for peer-to-peer support (Myron Stowe) [1632816]
- [pci] PCI: Allow specifying devices using a base bus and path of devfns (Myron Stowe) [1632816]
- [pci] PCI: Make specifying PCI devices in kernel parameters reusable (Myron Stowe) [1632816]
- [pci] PCI: Hide ACS quirk declarations inside PCI core (Myron Stowe) [1632816]
- [pci] PCI: Document ACPI description of PCI host bridges (Myron Stowe) [1632816]
- [pci] PCI/MSI: Set IRQCHIP_ONESHOT_SAFE for PCI-MSI irqchips (Myron Stowe) [1632816]
- [pci] PCI: Limit config space size for Netronome NFP5000 (Myron Stowe) [1632816]
- [pci] PCI: Add PCI_DEVICE_DATA() macro to fully describe device ID entry (Myron Stowe) [1632816]
- [pci] PCI: Unify PCI and normal DMA direction definitions (Myron Stowe) [1632816]
- [pci] PCI: Use IRQF_ONESHOT if pci_request_irq() called with no handler (Myron Stowe) [1632816]
- [pci] PCI: Call dma_debug_add_bus() for pci_bus_type from PCI core (Myron Stowe) [1632816]
- [pci] PCI: Mark fall-through switch cases before enabling -Wimplicit-fallthrough (Myron Stowe) [1632816]

* Thu Oct 04 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-21.el8]
- [s390] s390/sclp: Allow to request adapter reset (Philipp Rudo) [1635273]
- [char] ipmi: Fix NULL pointer dereference in ssif_probe (Tony Camuso) [1635366]
- [char] ipmi: Fix I2C client removal in the SSIF driver (Tony Camuso) [1635366]
- [char] ipmi: kcs_bmc: don't change device name (Tony Camuso) [1635366]
- [kernel] timers: Clear timer_base::must_forward_clk with timer_base::lock held (Waiman Long) [1632820]
- [pci] switchtec: Fix Spectre v1 vulnerability (Waiman Long) [1632820]
- [kernel] cpu/hotplug: Prevent state corruption on error rollback (Waiman Long) [1632820]
- [kernel] cpu/hotplug: Adjust misplaced smb() in cpuhp_thread_fun() (Waiman Long) [1632820]
- [base] memory_hotplug: fix kernel_panic on offline page processing (Waiman Long) [1632820]
- [mm] mm/hugetlb: filter out hugetlb pages if HUGEPAGE migration is not supported (Waiman Long) [1632820]
- [lib] debugobjects: Make stack check warning more informative (Waiman Long) [1632820]
- [fs] fs/dcache.c: fix kmemcheck splat at take_dentry_name_snapshot() (Waiman Long) [1632820]
- [x86] x86/process: Don't mix user/kernel regs in 64bit __show_regs() (Waiman Long) [1632820]
- [x86] x86/dumpstack: Don't dump kernel memory based on usermode RIP (Waiman Long) [1632820]
- [x86] x86: Avoid pr_cont() in show_opcodes() (Waiman Long) [1632820]
- [x86] x86/entry/64: Wipe KASAN stack shadow before rewind_stack_do_exit() (Waiman Long) [1632820]
- [x86] x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+ (Waiman Long) [1632820]
- [x86] x86/spectre: Add missing family 6 check to microcode check (Waiman Long) [1632820]
- [x86] x86/nmi: Fix NMI uaccess race against CR3 switching (Waiman Long) [1632820]
- [x86] x86/vdso: Fix lsl operand order (Waiman Long) [1632820]
- [x86] x86/vdso: Fix vDSO build if a retpoline is emitted (Waiman Long) [1632820]
- [x86] x86/speculation/l1tf: Suggest what to do on systems with too much RAM (Waiman Long) [1632820]
- [x86] x86/speculation/l1tf: Fix off-by-one error when warning that system has too much RAM (Waiman Long) [1632820]
- [x86] x86/speculation/l1tf: Fix overflow in l1tf_pfn_limit() on 32bit (Waiman Long) [1632820]
- [x86] x86/speculation/l1tf: Exempt zeroed PTEs from inversion (Waiman Long) [1632820]
- [x86] x86/mm/pti: Clear Global bit more aggressively (Waiman Long) [1632820]
- [x86] x86/paravirt: Fix spectre-v2 mitigations for paravirt guests (Waiman Long) [1632820]
- [target] scsi: target: iscsi: Use bin2hex instead of a re-implementation (Maurizio Lombardi) [1632184] {CVE-2018-14633}
- [target] scsi: target: iscsi: Use hex2bin instead of a re-implementation (Maurizio Lombardi) [1632184] {CVE-2018-14633}

* Wed Oct 03 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-20.el8]
- [netdrv] ibmvnic: Include missing return code checks in reset function (Steve Best) [1633553]
- [netdrv] ibmvnic: Update firmware error reporting with cause string (Steve Best) [1633553]
- [netdrv] ibmvnic: Remove code to request error information (Steve Best) [1633553]
- [s390] s390/qeth: remove duplicated carrier state tracking (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: clean up drop conditions for received cmds (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: re-indent qeth_check_ipa_data() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: consume local address events (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove various redundant code (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove CARD_FROM_CDEV helper (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: pass card pointer in iob callback (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: re-use qeth_notify_skbs() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove additional skb refcount (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: replace open-coded skb_queue_walk() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: on gdev release, reset drvdata (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fix discipline unload after setup error (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: use DEFINE_MUTEX for qeth_mod_mutex (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: convert layer attribute to enum (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: reduce 0-initializing when building IPA cmds (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fine-tune spinlocks (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fix typo in return value (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: invoke softirqs after napi_schedule() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: uninstall IRQ handler on device removal (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove qeth_hdr_chk_and_bounce() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: speed up TSO transmission (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: prepare for copy-free TSO transmission (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: check size of required HW header cache object (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fix up protocol headers early (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: limit csum offload erratum to L3 devices (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove qeth_get_elements_no() (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove unused L3 xmit code (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: run non-offload L3 traffic over common xmit path (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: move L2 xmit code to core module (Hendrik Brueckner) [1633841]
- [s390] s390/qdio: reset old sbal_state flags (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: don't dump past end of unknown HW header (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: use vzalloc for QUERY OAT buffer (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: switch on SG by default for IQD devices (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: indicate error when netdev allocation fails (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: use true and false for boolean values (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: don't restrict qeth_card to DMA memory (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: clean up card initialization (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: do basic setup for data channel (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: use qeth_setup_ccw() to set up all CCWs (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: reduce hard-coded access to ccw channels (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: extract helper for MPC protocol type (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: speed up L2 IQD xmit (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: add support for constrained HW headers (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: merge linearize-check into HW header construction (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: add statistics for consumed buffer elements (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: use core MTU range checking (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: simplify max MTU handling (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: don't cache HW port number (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: allocate netdevice early (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove redundant netif_carrier_ok() checks (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: reset layer2 attribute on layer switch (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fix race in used-buffer accounting (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: speed-up IPv4 OSA xmit (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: speed-up L3 IQD xmit (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: add a L3 xmit wrapper (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: increase GSO max size for eligible L3 devices (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: clean up exported symbols (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: consolidate ccwgroup driver definition (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: clean up Output Queue selection (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: fine-tune RX modesetting (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: remove unused buffer->aob pointer (Hendrik Brueckner) [1633841]
- [s390] s390/qeth: various buffer management cleanups (Hendrik Brueckner) [1633841]
- [powerpc] powerpc: Avoid code patching freed init sections (Steve Best) [1633545]
- [powerpc] powerpc/tm: Fix userspace r13 corruption (Steve Best) [1633543]
- [powerpc] powerpc/tm: Avoid possible userspace r1 corruption on reclaim (Steve Best) [1633543]
- [drm] drm/i915/cfl: Add a new CFL PCI ID (Rob Clark) [1626883]
- [drm] drm/i915/aml: Introducing Amber Lake platform (Rob Clark) [1626883]
- [drm] drm/i915/whl: Introducing Whiskey Lake platform (Rob Clark) [1626883]
- [char] ipmi: Move BT capabilities detection to the detect call (Frank Ramsay) [1618774]
- [char] ipmi: Rework SMI registration failure (Frank Ramsay) [1618774]

* Tue Oct 02 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-19.el8]
- [s390] s390: detect etoken facility (Thomas Huth) [1634069]
- [s390] s390/lib: use expoline for all bcr instructions (Thomas Huth) [1634069]
- [documentation] vm.txt: Adding 'nr_hugepages_mempolicy' parameter description (Prashant Dhamdhere) [1626547]

* Mon Oct 01 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-18.el8]
- [scsi] scsi: ipr: System hung while dlpar adding primary ipr adapter back (Steve Best) [1633217]
- [target] scsi: iscsi: target: Don't use stack buffer for scatterlist (Maurizio Lombardi) [1631342]
- [rpmspec] Forward port weak-modules support from RHEL 7 to RHEL 8 ("Herton R. Krzesinski") [1596884]
- [fs] xfs: Close race between direct IO and xfs_break_layouts() (Eric Sandeen) [1622191]
- [fs] xfs: remove unused iolock arg from xfs_break_dax_layouts (Eric Sandeen) [1622191]
- [fs] ext4: Close race between direct IO and ext4_break_layouts() (Eric Sandeen) [1616303]
- [fs] ext4: handle layout changes to pinned DAX mappings (Eric Sandeen) [1614154]
- [fs] dax: dax_layout_busy_page() warn on !exceptional (Eric Sandeen) [1614154]
- [fs] dax: mark tech preview (Eric Sandeen) [1627455]
- [mm] usercopy: Allow boot cmdline disabling of hardening (Christoph von Recklinghausen) [1589928]

* Thu Sep 27 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-17.el8]
- [s390] s390/crypto: Fix return code checking in cbc_paes_crypt() (Philipp Rudo) [1633266]
- [drm] amd/display/dc/basics/logger.c: fix build error with CONFIG_FORTIFY_SOURCE=y ("Herton R. Krzesinski") [1548068]
- [acpi] ACPICA: AML Parser: skip opcodes that open a scope upon parse failure (Jeremy Linton) [1609885]
- [acpi] ACPICA: ACPICA: add status check for acpi_hw_read before assigning return value (Jeremy Linton) [1609885]
- [acpi] ACPICA: AML Parser: ignore all exceptions resulting from incorrect AML during table load (Jeremy Linton) [1609885]
- [rpmspec] spec: Add missing BuildRequires for bpftool (Jiri Olsa) [1632756]
- [powerpc] KVM: PPC: Avoid marking DMA-mapped pages dirty in real mode (David Gibson) [1628412]
- [powerpc] powerpc/powernv/ioda: Allocate indirect TCE levels on demand (David Gibson) [1628412]
- [powerpc] powerpc/powernv: Rework TCE level allocation (David Gibson) [1628412]
- [powerpc] powerpc/powernv: Add indirect levels to it_userspace (David Gibson) [1628412]
- [powerpc] KVM: PPC: Make iommu_table::it_userspace big endian (David Gibson) [1628412]
- [powerpc] powerpc/powernv: Move TCE manupulation code to its own file (David Gibson) [1628412]
- [net] net_sched: fix NULL pointer dereference when delete tcindex filter (Andrea Claudi) [1627648]
- [net] net_sched: Fix missing res info when create new tc_index filter (Andrea Claudi) [1627648]
- [samples] samples/bpf: xdpsock: order memory on AArch64 (Jesper Brouer) [1615959]
- [samples] samples/bpf: xdp_redirect_cpu load balance like Suricata (Jesper Brouer) [1615959]
- [samples] samples/bpf: add Paul Hsieh's (LGPL 2.1) hash function SuperFastHash (Jesper Brouer) [1615959]
- [samples] samples/bpf: xdp_redirect_cpu handle parsing of double VLAN tagged packets (Jesper Brouer) [1615959]
- [samples] samples/bpf: all XDP samples should unload xdp/bpf prog on SIGTERM (Jesper Brouer) [1615959]
- [samples] samples/bpf: xdp_rxq_info action XDP_TX must adjust MAC-addrs (Jesper Brouer) [1615959]
- [samples] samples/bpf: extend xdp_rxq_info to read packet payload (Jesper Brouer) [1615959]
- [powerpc] KVM: PPC: Book3S HV: Use correct pagesize in kvm_unmap_radix() (David Gibson) [1625498]
- [net] igmp: fix incorrect unsolicit report count after link down and up (Hangbin Liu) [1625538]
- [net] igmp: fix incorrect unsolicit report count when join group (Hangbin Liu) [1625538]
- [netdrv] cxgb4: update 1.20.8.0 as the latest firmware supported (Arjun Vynipadath) [1622555]
- [virt] svm: nested virt support off by default (Bandan Das) [1571993]

* Wed Sep 26 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-16.el8]
- [powerpc] KVM: PPC: Book3S HV: Don't use compound_order to determine host mapping size (David Gibson) [1625860]
- [virt] arm64: KVM: Remove pgd_lock (Wei Huang) [1627474]
- [virt] KVM: Remove obsolete kvm_unmap_hva notifier backend (Wei Huang) [1627474]
- [virt] arm64: KVM: Only force FPEXC32_EL2.EN if trapping FPSIMD (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Clean dcache to PoC when changing PTE due to CoW (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Skip updating PTE entry if no change (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Skip updating PMD entry if no change (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Move DEBUG_SPINLOCK_BUG_ON to vgic.h (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Do not use spin_lock_irqsave/restore with irq disabled (Wei Huang) [1627474]
- [virt] KVM: arm: vgic-v3: Add support for ICC_SGI0R and ICC_ASGI1R accesses (Wei Huang) [1627474]
- [virt] KVM: arm64: vgic-v3: Add support for ICC_SGI0R_EL1 and ICC_ASGI1R_EL1 accesses (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic-v3: Add core support for Group0 SGIs (Wei Huang) [1627474]
- [virt] KVM: arm64: Remove non-existent AArch32 ICC_SGI1R encoding (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Fix lost IRQs from emulated physcial timer when blocked (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Fix potential loss of ptimer interrupts (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Fix possible spectre-v1 write in vgic_mmio_write_apr() (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Update documentation of the GIC devices wrt IIDR (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Let userspace opt-in to writable v2 IGROUPR (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Allow configuration of interrupt groups (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Return error on incompatible uaccess GICD_IIDR writes (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Permit uaccess writes to return errors (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Signal IRQs using their configured group (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Add group field to struct irq (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: GICv2 IGROUPR should read as zero (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Keep track of implementation revision (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic: Define GICD_IIDR fields for GICv2 and GIv3 (Wei Huang) [1627474]
- [virt] arm64: KVM: Cleanup tpidr_el2 init on non-VHE (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: vgic-debug: Show LPI status (Wei Huang) [1627474]
- [virt] KVM: arm64: vgic-its: Remove VLA usage (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Fix vgic init race (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Enable adaptative WFE trapping (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Remove unnecessary CMOs when creating HYP page tables (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Stop using the kernel's (pmd, pud, pgd)_populate helpers (Wei Huang) [1627474]
- [virt] KVM: arm/arm64: Consolidate page-table accessors (Wei Huang) [1627474]
- [virt] arm64: KVM: Avoid marking pages as XN in Stage-2 if CTR_EL0.DIC is set (Wei Huang) [1627474]
- [tools] radix tree test suite: Enable ubsan (Waiman Long) [1630244]
- [tools] radix tree test suite: Fix compilation (Waiman Long) [1630244]
- [block] blk-wbt: don't maintain inflight counts if disabled (Ming Lei) [1622790]
- [block] blk-wbt: fix has-sleeper queueing check (Ming Lei) [1622790]
- [block] blk-wbt: use wq_has_sleeper() for wq active check (Ming Lei) [1622790]
- [block] blk-wbt: move disable check into get_limit() (Ming Lei) [1622790]
- [block] block/DAC960.c: make some arrays static const, shrinks object (Ming Lei) [1622790]
- [block] blk-mq: sync the update nr_hw_queues with (Ming Lei) [1617959]
- [block] blk-mq: init hctx sched after update ctx and hctx mapping (Ming Lei) [1617959]
- [block] block: remove duplicate initialization (Ming Lei) [1622790]
- [block] tracing/blktrace: Fix to allow setting same value (Ming Lei) [1622790]
- [block] pktcdvd: fix setting of 'ret' error return for a few cases (Ming Lei) [1622790]
- [block] block: change return type to bool (Ming Lei) [1622790]
- [block] block, bfq: return nbytes and not zero from struct cftype (Ming Lei) [1622790]
- [block] block, bfq: improve code of bfq_bfqq_charge_time (Ming Lei) [1622790]
- [block] block, bfq: reduce write overcharge (Ming Lei) [1622790]
- [block] block, bfq: always update the budget of an entity when needed (Ming Lei) [1622790]
- [block] block, bfq: readd missing reset of parent-entity service (Ming Lei) [1622790]
- [block] block: don't warn for flush on read-only device (Ming Lei) [1622809]

* Tue Sep 25 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-15.el8]
- [kernel] locking/rwsem: Make owner store task pointer of last owning reader (Waiman Long) [1631842]
- [kernel] locking/rwsem: Exit read lock slowpath if queue empty & no writer (Waiman Long) [1631842]
- [x86] x86/microcode: Update the new microcode revision unconditionally (Prarit Bhargava) [1630931]
- [x86] x86/microcode: Make sure boot_cpu_data.microcode is up-to-date (Prarit Bhargava) [1630931]
- [arm64] arm64: tlb: Provide forward declaration of tlb_flush() before including tlb.h (Waiman Long) [1630521]
- [x86] x86/mm: Only use tlb_remove_table() for paravirt (Waiman Long) [1630521]
- [mm] mm: mmu_notifier fix for tlb_end_vma (Waiman Long) [1630521]
- [mm] mm/tlb, x86/mm: Support invalidating TLB caches for RCU_TABLE_FREE (Waiman Long) [1630521]
- [mm] mm/tlb: Remove tlb_remove_table() non-concurrent condition (Waiman Long) [1630521]
- [mm] mm: move tlb_table_flush to tlb_flush_mmu_free (Waiman Long) [1630521]
- [kernel] clocksource: Revert Remove kthread (Waiman Long) [1628402]
- [cpuidle] cpuidle: menu: Retain tick when shallow state is selected (Waiman Long) [1628402]
- [cpufreq] cpufreq: governor: Avoid accessing invalid governor_data (Waiman Long) [1628402]
- [cpuidle] cpuidle: menu: Handle stopped tick more aggressively (Waiman Long) [1628402]
- [kernel] sched: idle: Avoid retaining the tick when it has been stopped (Waiman Long) [1628402]
- [net] netfilter: xt_hashlimit: do not crash when reading proc file (Florian Westphal) [1630131]
- [x86] x86/boot/KASLR: Skip specified number of 1GB huge pages when doing physical randomization (KASLR) (Baoquan He) [1564824]
- [x86] x86/boot/KASLR: Add two new functions for 1GB huge pages handling (Baoquan He) [1564824]
- [mfd] mfd: intel-lpss: Add Ice Lake PCI IDs (Gopal Tiwari) [1483477]
- [mmc] mmc: sdhci-pci: Add support for Intel ICP (Gopal Tiwari) [1483496]

* Mon Sep 24 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-14.el8]
- [mm] mm: get rid of vmacache_flush_all() entirely (Waiman Long) [1631297] {CVE-2018-17182}
- [mm] mm, vmacache: hash addresses based on pmd (Waiman Long) [1631297] {CVE-2018-17182}
- [mm] mm: Allocate the mm_cpumask (mm->cpu_bitmap) dynamically based on nr_cpu_ids (Waiman Long) [1631297] {CVE-2018-17182}
- [infiniband] IB/hfi1: Invalid NUMA node information can cause a divide by zero (Alex Estrin) [1622222]
- [nvdimm] libnvdimm: Export max available extent (Jeff Moyer) [1627874]
- [nvdimm] libnvdimm: Use max contiguous area for namespace size (Jeff Moyer) [1627874]
- [netdrv] ice: Fix and update driver version string (Jonathan Toppins) [1611786]
- [netdrv] ice: Introduce SERVICE_DIS flag and service routine functions (Jonathan Toppins) [1611786]
- [netdrv] ice: Enable VSI Rx/Tx pruning only when VLAN 0 is active (Jonathan Toppins) [1611786]
- [netdrv] ice: Enable firmware logging during device initialization (Jonathan Toppins) [1611786]
- [netdrv] ice: Implement ice_bridge_getlink and ice_bridge_setlink (Jonathan Toppins) [1611786]
- [netdrv] ice: Add support for Tx hang, Tx timeout and malicious driver detection (Jonathan Toppins) [1611786]
- [netdrv] ice: Clean up register file (Jonathan Toppins) [1611786]
- [netdrv] ice: Implement handlers for ethtool PHY/link operations (Jonathan Toppins) [1611786]
- [netdrv] ice: Refactor VSI allocation, deletion and rebuild flow (Jonathan Toppins) [1611786]
- [netdrv] ice: Refactor switch rule management structures and functions (Jonathan Toppins) [1611786]
- [netdrv] ice: Code optimization for ice_fill_sw_rule() (Jonathan Toppins) [1611786]
- [netdrv] ice: Prevent control queue operations during reset (Jonathan Toppins) [1611786]
- [netdrv] ice: Update request resource command to latest specification (Jonathan Toppins) [1611786]
- [netdrv] ice: Updates to Tx scheduler code (Jonathan Toppins) [1611786]
- [netdrv] ice: Rework flex descriptor programming (Jonathan Toppins) [1611786]
- [netdrv] net/mlx5: Fix SQ offset in QPs with small RQ (Alaa Hleihel) [1623367]
- [x86] x86/spec_ctrl: Make IBRS code work with SSBD mitigation (Waiman Long) [1565180]
- [x86] x86/spec_ctrl: Auto-enable IBRS on Skylake (Waiman Long) [1565180]
- [x86] x86/spec_ctrl: Extend spectre_v2 boot option to support IBRS (Waiman Long) [1565180]
- [x86] x86/spec_ctrl: Boot time IBRS initialization (Waiman Long) [1565180]
- [x86] x86/spec_ctrl: Add IBRS code to the 64-bit assembly entry code (Waiman Long) [1565180]
- [x86] x86/cpufeatures: Increase NCAPINTS for future extension (Waiman Long) [1565180]
- [netdrv] ice: Trivial formatting fixes (Jonathan Toppins) [1611783]
- [netdrv] ice: Change struct members from bool to u8 (Jonathan Toppins) [1611783]
- [netdrv] ice: Fix potential return of uninitialized value (Jonathan Toppins) [1611783]
- [netdrv] ice: Fix a few null pointer dereference issues (Jonathan Toppins) [1611783]
- [netdrv] ice: Update to interrupts enabled in OICR (Jonathan Toppins) [1611783]
- [netdrv] ice: Set VLAN flags correctly (Jonathan Toppins) [1611783]
- [netdrv] ice: Use order_base_2 to calculate higher power of 2 (Jonathan Toppins) [1611783]
- [netdrv] ice: Fix bugs in control queue processing (Jonathan Toppins) [1611783]
- [netdrv] ice: Clean control queues only when they are initialized (Jonathan Toppins) [1611783]
- [netdrv] ice: Report stats for allocated queues via ethtool stats (Jonathan Toppins) [1611783]
- [netdrv] ice: Cleanup magic number (Jonathan Toppins) [1611783]
- [netdrv] ice: Remove unnecessary node owner check (Jonathan Toppins) [1611783]
- [netdrv] ice: Fix multiple static analyser warnings (Jonathan Toppins) [1611783]
- [virt] KVM: VMX: fixes for vmentry_l1d_flush module parameter (Waiman Long) [1616248] {CVE-2018-15572}
- [virt] KVM: x86: SVM: Call x86_spec_ctrl_set_guest/host() with interrupts disabled (Waiman Long) [1616248] {CVE-2018-15572}
- [virt] x86/kvm/vmx: Fix coding style in vmx_setup_l1d_flush() (Waiman Long) [1616248] {CVE-2018-15572}
- [x86] x86/speculation: Support Enhanced IBRS on future CPUs (Waiman Long) [1614144]
- [x86] x86/speculation: Protect against userspace-userspace spectreRSB (Waiman Long) [1616248] {CVE-2018-15572}
- [x86] x86/speculation: Remove SPECTRE_V2_IBRS in enum spectre_v2_mitigation (Waiman Long) [1616248] {CVE-2018-15572}
- [cpufreq] cpufreq: Fix a circular lock dependency problem (Waiman Long) [1599154]
- [kernel] cpu/hotplug: Add a cpus_read_trylock() function (Waiman Long) [1599154]
- [virt] xen/spinlock: Don't use pvqspinlock if only 1 vCPU (Waiman Long) [1618486]

* Thu Sep 20 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-13.el8]
- [mailbox] mailbox: PCC: handle parse error (David Arcari) [1630382]
- [hv] vmbus: don't return values for uninitalized channels (Vitaly Kuznetsov) [1617954]
- [mm] kernel/memremap, kasan: make ZONE_DEVICE with work with KASAN (Bill O'Donnell) [1629578]
- [mm] mm: fix BUG_ON() in vmf_insert_pfn_pud() from VM_MIXEDMAP removal (Jeff Moyer) [1622171]
- [mm] dax: remove VM_MIXEDMAP for fsdax and device dax (Jeff Moyer) [1622171]

* Wed Sep 19 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-12.el8]
- [i2c] i2c: i801: fix DNV's SMBCTRL register offset (David Arcari) [1628861]
- [fs] ceph: avoid a use-after-free in ceph_destroy_options() (Ilya Dryomov) [1629884]
- [fs] ceph: fix incorrect use of strncpy (Ilya Dryomov) [1629884]
- [block] rbd: support cloning across namespaces (Ilya Dryomov) [1629884]
- [block] rbd: factor out get_parent_info() (Ilya Dryomov) [1629884]
- [block] rbd: support for images within namespaces (Ilya Dryomov) [1629884]
- [block] rbd: pass rbd_spec into parse_rbd_opts_token() (Ilya Dryomov) [1629884]
- [net] libceph: weaken sizeof check in ceph_x_verify_authorizer_reply() (Ilya Dryomov) [1629884]
- [net] libceph: check authorizer reply/challenge length before reading (Ilya Dryomov) [1629884]
- [net] libceph: implement CEPHX_V2 calculation mode (Ilya Dryomov) [1629884]
- [net] libceph: add authorizer challenge (Ilya Dryomov) [1629884]
- [net] libceph: factor out encrypt_authorizer() (Ilya Dryomov) [1629884]
- [net] libceph: factor out __ceph_x_decrypt() (Ilya Dryomov) [1629884]
- [net] libceph: factor out __prepare_write_connect() (Ilya Dryomov) [1629884]
- [net] libceph: store ceph_auth_handshake pointer in ceph_connection (Ilya Dryomov) [1629884]
- [pci] PCI: pciehp: Deduplicate presence check on probe & resume (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Avoid implicit fallthroughs in switch statements (Myron Stowe) [1583983]
- [pci] PCI: Whitelist Thunderbolt ports for runtime D3 (Myron Stowe) [1583983]
- [pci] PCI: Whitelist native hotplug ports for runtime D3 (Myron Stowe) [1583983]
- [pci] PCI: sysfs: Resume to D0 on function reset (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Resume parent to D0 on config space access (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Resume to D0 on enable/disable (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Support interrupts sent from D3hot (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Obey compulsory command delay after resume (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Clear spurious events earlier on resume (Myron Stowe) [1583983]
- [pci] PCI: portdrv: Deduplicate PM callback iterator (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Avoid slot access during reset (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Always enable occupied slot on probe (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Become resilient to missed events (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Tolerate initially unstable link (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Declare pciehp_enable/disable_slot() static (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Drop enable/disable lock (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Enable/disable exclusively from IRQ thread (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Track enable/disable status (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Publish to user space last on probe (Myron Stowe) [1583983]
- [pci] PCI: hotplug: Demidlayer registration with the core (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Drop slot workqueue (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Handle events synchronously (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Stop blinking on slot enable failure (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Convert to threaded polling (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Convert to threaded IRQ (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Document struct slot and struct controller (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Declare pciehp_unconfigure_device() void (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Drop unnecessary NULL pointer check (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Fix unprotected list iteration in IRQ handler (Myron Stowe) [1583983]
- [pci] PCI: pciehp: Fix use-after-free on unplug (Myron Stowe) [1583983]
- [pci] PCI: hotplug: Don't leak pci_slot on registration failure (Myron Stowe) [1583983]
- [pci] PCI: hotplug: Delete skeleton driver (Myron Stowe) [1583983]
- [netdrv] be2net: Use Kconfig flag to support for enabling/disabling adapters (Petr Oros) [1611768]
- [acpi] ACPICA: Reference Counts: increase max to 0x4000 for large servers (Frank Ramsay) [1618760]

* Tue Sep 18 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-11.el8]
- [net] udp6: add missing checks on edumux packet processing (Paolo Abeni) [1625954]
- [net] udp4: fix IP_CMSG_CHECKSUM for connected sockets (Paolo Abeni) [1625954]
- [s390] s390/pci: fix out of bounds access during irq setup (Hendrik Brueckner) [1627462]
- [nvdimm] libnvdimm: fix ars_status output length calculation (Jeff Moyer) [1616307]

* Mon Sep 17 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-10.el8]
- [scsi] scsi: lpfc: Correct MDS diag and nvmet configuration (Dick Kennedy) [1628323]
- [iommu] iommu/arm-smmu: workaround DMA mode issues (Mark Salter) [1624077]
- [x86] x86/microcode: Allow late microcode loading with SMT disabled (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] tools headers: Synchronise x86 cpufeatures.h for L1TF additions (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/mm/kmmio: Make the tracer robust against L1TF (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/mm/pat: Make set_memory_np() L1TF safe (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Make pmd/pud_mknotpresent() invert (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Invert all not present mappings (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Fix SMT supported evaluation (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] KVM: VMX: Tell the nested hypervisor to skip L1D flush on vmentry (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation: Simplify sysfs report of VMX L1TF vulnerability (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] Documentation/l1tf: Remove Yonah processors from not vulnerable list (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Don't set l1tf_flush_l1d from vmx_handle_external_intr() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/irq: Let interrupt handlers set kvm_cpu_l1tf_flush_l1d (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86: Don't include linux/irq.h from asm/hardirq.h (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Introduce per-host-cpu analogue of l1tf_flush_l1d (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/irq: Demote irq_cpustat_t::__softirq_pending to u16 (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Move the l1tf_flush_l1d test to vmx_l1d_flush() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Replace 'vmx_l1d_flush_always' with 'vmx_l1d_flush_cond' (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Don't set l1tf_flush_l1d to true from vmx_l1d_flush() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: detect SMT disabled by BIOS (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] Documentation/l1tf: Fix typos (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Initialize the vmx_l1d_flush_pages' content (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Unbreak !__HAVE_ARCH_PFN_MODIFY_ALLOWED architectures (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] Documentation: Add section about CPU vulnerabilities (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/bugs, kvm: Introduce boot-time control of L1TF mitigations (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Set CPU_SMT_NOT_SUPPORTED early (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Expose SMT control init function (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/kvm: Allow runtime control of L1D flush (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/kvm: Serialize L1D flush parameter setter (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/kvm: Add static key for flush always (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/kvm: Move l1tf setup function (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/l1tf: Handle EPT disabled state proper (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/kvm: Drop L1TF MSR list approach (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/litf: Introduce vmx status variable (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Online siblings when SMT control is turned on (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Use MSR save list for IA32_FLUSH_CMD if required (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Extend add_atomic_switch_msr() to allow VMENTER only MSRs (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Separate the VMX AUTOLOAD guest/host number accounting (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Add find_msr() helper function (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Split the VMX MSR LOAD structures to have an host/guest numbers (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Add L1D flush logic (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Add L1D MSR based flush (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Add L1D flush algorithm (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM/VMX: Add module argument for L1TF mitigation (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/KVM: Warn user if KVM is loaded SMT and L1TF CPU bug being present (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Boot HT siblings at least once (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] Revert "x86/apic: Ignore secondary threads if nosmt=force" (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Fix up pte->pfn conversion for PAE (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Protect PAE swap entries against L1TF (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/CPU/AMD: Move TOPOEXT reenablement before reading smp_num_siblings (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpufeatures: Add detection of L1D cache flush support (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Extend 64bit swap file size limit (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/apic: Ignore secondary threads if nosmt=force (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu/AMD: Evaluate smp_num_siblings early (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/CPU/AMD: Do not check CPUID max ext level before parsing SMP info (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu/intel: Evaluate smp_num_siblings early (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu/topology: Provide detect_extended_topology_early() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu/common: Provide detect_ht_early() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu/AMD: Remove the pointless detect_ht() call (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/cpu: Remove the pointless CPU printout (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Provide knobs to control SMT (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Split do_cpu_down() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] cpu/hotplug: Make bringup/teardown of smp threads symmetric (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/topology: Provide topology_smt_supported() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/smp: Provide topology_is_primary_thread() (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] sched/smt: Update sched_smt_present at runtime (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/bugs: Move the l1tf function and define pr_fmt properly (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Limit swap file size to MAX_PA/2 (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Disallow non privileged high MMIO PROT_NONE mappings (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Add sysfs reporting for l1tf (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Make sure the first page is always reserved (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Protect PROT_NONE PTEs against speculation (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Protect swap entries against L1TF (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Change order of offset/type in swap entry (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}
- [x86] x86/speculation/l1tf: Increase 32bit PAE __PHYSICAL_PAGE_SHIFT (Waiman Long) [1616046] {CVE-2018-3620 CVE-2018-3646}

* Thu Sep 13 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-9.el8]
- [pci] PCI/DPC: Remove indirection waiting for inactive link (Myron Stowe) [1485556]
- [pci] PCI/DPC: Use threaded IRQ for bottom half handling (Myron Stowe) [1485556]
- [pci] PCI/DPC: Print AER status in DPC event handling (Myron Stowe) [1485556]
- [pci] PCI/DPC: Remove rp_pio_status from dpc struct (Myron Stowe) [1485556]
- [pci] PCI/DPC: Defer event handling to work queue (Myron Stowe) [1485556]
- [pci] PCI/DPC: Leave interrupts enabled while handling event (Myron Stowe) [1485556]
- [net] net/mlx5e: Offload TC matching on tos/ttl for ip tunnels (Erez Alfasi) [1615121]
- [net] net/mlx5e: Support setup of tos and ttl for tunnel key TC action offload (Erez Alfasi) [1615121]
- [net] net/mlx5e: Use ttl from route lookup on tc encap offload only if needed (Erez Alfasi) [1615121]
- [net] net/sched: cls_flower: Support matching on ip tos and ttl for tunnels (Erez Alfasi) [1615121]
- [net] flow_dissector: Dissect tos and ttl from the tunnel info (Erez Alfasi) [1615121]
- [net] net/sched: tunnel_key: Allow to set tos and ttl for tc based ip tunnels (Erez Alfasi) [1615121]
- [net] net/sched: act_tunnel_key: disambiguate metadata dst error cases (Erez Alfasi) [1615121]
- [net] net/sched: add tunnel option support to act_tunnel_key (Erez Alfasi) [1615121]
- [iommu] iommu/amd: Add support for IOMMU XT mode (Suravee Suthikulpanit) [1504485]
- [iommu] iommu/amd: Add support for higher 64-bit IOMMU Control Register (Suravee Suthikulpanit) [1504485]
- [x86] x86: irq_remapping: Move irq remapping mode enum (Suravee Suthikulpanit) [1504485]
- [firmware] dcdbas: Add support for WSMT ACPI table (Charles Rose) [1502286]

* Wed Sep 12 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-8.el8]
- [documentation] scsi: documentation: add scsi_mod.use_blk_mq to scsi-parameters (Ewan Milne) [1600014]
- [scsi] scsi: core: Update SCSI_MQ_DEFAULT help text to match default (Ewan Milne) [1600014]
- [scsi] scsi: core: switch to scsi-mq by default (Ewan Milne) [1600014]
- [pci] PCI: Match Root Port's MPS to endpoint's MPSS as necessary (Myron Stowe) [1502324]
- [pci] PCI: Skip MPS logic for Virtual Functions (VFs) (Myron Stowe) [1502324]
- [pci] PCI: Check for PCIe Link downtraining (Myron Stowe) [1502324]
- [pci] PCI: Workaround IDT switch ACS Source Validation erratum (Myron Stowe) [1502324]
- [of] OF: Don't set default coherent DMA mask (Mark Salter) [1581822]
- [acpi] ACPI/IORT: Don't set default coherent DMA mask (Mark Salter) [1581822]
- [iommu] iommu/dma: Respect bus DMA limit for IOVAs (Mark Salter) [1581822]
- [of] of/device: Set bus DMA mask as appropriate (Mark Salter) [1581822]
- [acpi] ACPI/IORT: Set bus DMA mask as appropriate (Mark Salter) [1581822]
- [kernel] dma-mapping: Generalise dma_32bit_limit flag (Mark Salter) [1581822]
- [acpi] ACPI/IORT: Support address size limit for root complexes (Mark Salter) [1581822]
- [of] of/platform: Initialise default DMA masks (Mark Salter) [1581822]
- [net] Bluetooth: hidp: buffer overflow in hidp_process_report (Gopal Tiwari) [1623073] {CVE-2018-9363}
- [irqchip] irqchip/gic-v3-its: Reduce minimum LPI allocation to 1 for PCI devices (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3-its: Honor hypervisor enforced LPI range (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3: Expose GICD_TYPER in the rdist structure (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3-its: Drop chunk allocation compatibility (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3-its: Move minimum LPI requirements to individual busses (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3-its: Use full range of LPIs (Mark Salter) [1550500]
- [irqchip] irqchip/gic-v3-its: Refactor LPI allocator (Mark Salter) [1550500]

* Tue Sep 11 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-7.el8]
- [netdrv] hv_netvsc: Fix a deadlock by getting rtnl lock earlier in netvsc_probe() (Vitaly Kuznetsov) [1625609]
- [netdrv] hv_netvsc: ignore devices that are not PCI (Vitaly Kuznetsov) [1625609]
- [netdrv] hv/netvsc: Fix NULL dereference at single queue mode fallback (Vitaly Kuznetsov) [1625609]
- [netdrv] hv_netvsc: Add per-cpu ethtool stats for netvsc (Vitaly Kuznetsov) [1625609]
- [pci] PCI: shpchp: Separate existence of SHPC and permission to use it (Steve Best) [1622953]
- [powerpc] KVM: PPC: Book3S HV: Don't truncate HPTE index in xlate function (David Gibson) [1625513]
- [kernel] rh_kabi: Add macros to size and extend structs (Prarit Bhargava) [1564570]
- [pci] PCI: Remove unnecessary include of <linux/pci-aspm.h> (Myron Stowe) [1622672]
- [wireless] iwlwifi: Remove unnecessary include of <linux/pci-aspm.h> (Myron Stowe) [1622672]
- [wireless] ath9k: Remove unnecessary include of <linux/pci-aspm.h> (Myron Stowe) [1622672]
- [netdrv] igb: Remove unnecessary include of <linux/pci-aspm.h> (Myron Stowe) [1622672]
- [pci] PCI/ASPM: Convert to use sysfs_match_string() helper (Myron Stowe) [1622672]
- [virt] KVM: s390: Properly lock mm context allow_gmap_hpage_1m setting (Thomas Huth) [1623513]
- [virt] KVM: s390: vsie: copy wrapping keys to right place (Thomas Huth) [1623513]
- [virt] KVM: s390: Fix pfmf and conditional skey emulation (Thomas Huth) [1623513]
- [virt] KVM: s390: Fix storage attributes migration with memory slots (Thomas Huth) [1623513]
- [virt] KVM: s390: a utility function for migration (Thomas Huth) [1623513]

* Mon Sep 10 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-6.el8]
- [lib] vsprintf: Add command line option debug_boot_weak_hash (Prarit Bhargava) [1625687]
- [netdrv] i40e: Fix for Tx timeouts when interface is brought up if DCB is enabled (Stefan Assmann) [1616147]
- [misc] ocxl: Fix page fault handler in case of fault on dying process (Steve Best) [1624644]
- [edac] EDAC, sb_edac: Add support for systems with segmented PCI buses (Aristeu Rozanski) [1621849]
- [netdrv] xen-netfront: fix warn message as irq device name has '/' (Vitaly Kuznetsov) [1576160]
- [arm64] arm64, kaslr: export offset in VMCOREINFO ELF notes (Bhupesh Sharma) [1624246]
- [rpmspec] redhat: Move gfs2 and dlm out of kernel-modules-extra (Andrew Price) [1623511]
- [powerpc] powerpc/topology: Get topology for shared processors at boot (Steve Best) [1620039]
- [fs] gfs2: Don't set GFS2_RDF_UPTODATE when the lvb is updated (Robert S Peterson) [1622057]
- [fs] gfs2: improve debug information when lvb mismatches are found (Robert S Peterson) [1622057]
- [fs] gfs2: cleanup: call gfs2_rgrp_ondisk2lvb from gfs2_rgrp_out (Robert S Peterson) [1622057]
- [x86] Fix x86 32-bit invalid cpu boot failure message (Prarit Bhargava) [1571456]
- [net] net/ipv6: init ip6 anycast rt->dst.input as ip6_input (Hangbin Liu) [1615671]
- [pci] PCI/AER: Don't clear AER bits if error handling is Firmware-First (Myron Stowe) [1621933]
- [pci] PCI/AER: Remove duplicate PCI_EXP_AER_FLAGS definition (Myron Stowe) [1621933]
- [pci] PCI/portdrv: Remove pcie_portdrv_err_handler.slot_reset (Myron Stowe) [1621933]
- [pci] PCI/AER: Clear device status bits during ERR_COR handling (Myron Stowe) [1621933]
- [pci] PCI/AER: Clear device status bits during ERR_FATAL and ERR_NONFATAL (Myron Stowe) [1621933]
- [pci] PCI/AER: Remove ERR_FATAL code from ERR_NONFATAL path (Myron Stowe) [1621933]
- [pci] PCI/AER: Factor out ERR_NONFATAL status bit clearing (Myron Stowe) [1621933]
- [pci] PCI/AER: Clear only ERR_NONFATAL bits during non-fatal recovery (Myron Stowe) [1621933]
- [pci] PCI/AER: Clear only ERR_FATAL status bits during fatal recovery (Myron Stowe) [1621933]
- [pci] PCI/AER: Honor "pcie_ports=native" even if HEST sets FIRMWARE_FIRST (Myron Stowe) [1621933]
- [pci] PCI/AER: Add sysfs attributes for rootport cumulative stats (Myron Stowe) [1621933]
- [pci] PCI/AER: Add sysfs attributes to provide AER stats and breakdown (Myron Stowe) [1621933]
- [pci] PCI/AER: Define aer_stats structure for AER capable devices (Myron Stowe) [1621933]
- [pci] PCI/AER: Move internal declarations to drivers/pci/pci.h (Myron Stowe) [1621933]
- [pci] PCI/AER: Adopt lspci names for AER error decoding (Myron Stowe) [1621933]
- [pci] PCI/AER: Expose internal API for obtaining AER information (Myron Stowe) [1621933]
- [kernel] rcu: Make expedited GPs handle CPU 0 being offline (Gustavo Duarte) [1610262]
- [rpmspec] Generate BootLoaderSpec config fragments ("Herton R. Krzesinski") [1619766]

* Wed Aug 29 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-5.el8]
- [net] erspan: set erspan_ver to 1 by default when adding an erspan dev (Xin Long) [1619118]
- [hv] x86/hyper-v: Fix wrong merge conflict resolution (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Check for VP_INVAL in hyperv_flush_tlb_others() (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Check cpumask_to_vpset() return value in hyperv_flush_tlb_others_ex() (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Trace PV IPI send (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Use cheaper HVCALL_SEND_IPI hypercall when possible (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Use 'fast' hypercall for HVCALL_SEND_IPI (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Implement hv_do_fast_hypercall16 (Vitaly Kuznetsov) [1597652]
- [hv] x86/hyper-v: Use cheaper HVCALL_FLUSH_VIRTUAL_ADDRESS_(LIST, SPACE) hypercalls when possible (Vitaly Kuznetsov) [1597652]
- [netdrv] xen-netfront: fix queue name setting (Vitaly Kuznetsov) [1576160]
- [scsi] lfpc: add Lancer FCoE to the removed devices (Tomas Henzl) [1602033]
- [scsi] megaraid_sas: add removed id table (Tomas Henzl) [1602033]
- [scsi] aacraid: add removed id table (Tomas Henzl) [1602033]
- [scsi] qla4xxx: add removed id table (Tomas Henzl) [1602033]
- [scsi] lpfc: add removed id table (Tomas Henzl) [1602033]
- [scsi] qla2xxx: add removed id table (Tomas Henzl) [1602033]
- [scsi] mpt3sas: add removed id table (Tomas Henzl) [1602033]
- [scsi] be2iscsi: add removed id table (Tomas Henzl) [1602033]
- [scsi] rh_taint, pci : add information about removed hardware (Tomas Henzl) [1602033]
- [kernel] kernel: add SUPPORT_REMOVED kernel taint (Tomas Henzl) [1602033]
- [net] sunrpc: Change rpc_print_iostats to rpc_clnt_show_stats and handle rpc_clnt clones (Dave Wysochanski) [1610373]
- [net] sunrpc: Add _add_rpc_iostats() to add rpc_iostats metrics (Dave Wysochanski) [1610373]
- [net] sunrpc: add _print_rpc_iostats() to output metrics for one RPC op (Dave Wysochanski) [1610373]

* Mon Aug 27 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-4.el8]
- [net] xdp: exclude XDP from kABI guarantee (Jiri Benc) [1568551]
- [kernel] rh_kabi: introduce RH_KABI_EXCLUDE (Jiri Benc) [1568551]
- [powerpc] powerpc/powernv/pci: Work around races in PCI bridge enabling (Steve Best) [1620035]
- [block] blk-wbt: fix IO hang in wbt_wait() (Ming Lei) [1614198]
- [block] blkcg: Make blkg_root_lookup() work for queues in bypass mode (Ming Lei) [1614198]
- [block] null_blk: add lock drop/acquire annotation (Ming Lei) [1614198]
- [block] Blk-throttle: reduce tail io latency when iops limit is (Ming Lei) [1614198]
- [block] block: paride: pd: mark expected switch fall-throughs (Ming Lei) [1614198]
- [block] block: Ensure that a request queue is dissociated from the (Ming Lei) [1614198]
- [block] block: Introduce blk_exit_queue() (Ming Lei) [1614198]
- [block] blkcg: Introduce blkg_root_lookup() (Ming Lei) [1614198]
- [block] block: Remove two superfluous #include directives (Ming Lei) [1614198]
- [block] blk-mq: count the hctx as active before allocating tag (Ming Lei) [1614198]
- [block] block: bvec_nr_vecs() returns value for wrong slab (Ming Lei) [1614198]
- [block] drivers/block/drbd: remove the null check for (Ming Lei) [1614198]
- [block] drivers/block/aoe/aoedev: NULL check is not needed for (Ming Lei) [1614198]
- [block] drivers/block/mtip32xx: remove the null check for (Ming Lei) [1614198]
- [block] cfq: Suppress compiler warnings about comparisons (Ming Lei) [1614198]
- [block] cfq: Annotate fall-through in a switch statement (Ming Lei) [1614198]
- [block] blk-wbt: Avoid lock contention and thundering herd issue in (Ming Lei) [1590363]
- [block] target/loop: depend on SCSI (Ming Lei) [1614198]
- [block] xen-blkfront: use true and false for boolean values (Ming Lei) [1614198]
- [block] lightnvm: remove minor version check for 2.0 (Ming Lei) [1614198]
- [block] scsi: Check sense buffer size at build time (Ming Lei) [1614198]
- [block] libata-scsi: Move sense buffers onto stack (Ming Lei) [1614198]
- [block] cdrom: Use struct scsi_sense_hdr internally (Ming Lei) [1614198]
- [block] ide-cd: Remove redundant sense buffer (Ming Lei) [1614198]
- [block] block: Switch struct packet_command to use struct (Ming Lei) [1614198]
- [block] target: don't depend on SCSI (Ming Lei) [1614198]
- [block] scsi: build scsi_common.o for all scsi passthrough request (Ming Lei) [1614198]
- [block] scsi: cxlflash: Drop unused sense buffers (Ming Lei) [1614198]
- [block] ide-cd: Drop unused sense buffers (Ming Lei) [1614198]
- [block] blk-mq: fix updating tags depth (Ming Lei) [1611900]
- [block] block: really disable runtime-pm for blk-mq (Ming Lei) [1611902]
- [block] aoe: mark expected switch fall-through (Ming Lei) [1614198]
- [block] block: make iolatency avg_lat exponentially decay (Ming Lei) [1614198]
- [block] blk-cgroup: clear the throttle queue on fork (Ming Lei) [1614198]
- [block] blk-cgroup: hold the queue ref during throttling (Ming Lei) [1614198]
- [block] blk-iolatency: fix blkg leak in timer_fn (Ming Lei) [1614198]
- [block] block/bsg-lib: use PTR_ERR_OR_ZERO to simplify the flow path (Ming Lei) [1614198]
- [block] t10-pi: provide empty t10_pi_complete() for (Ming Lei) [1614198]
- [block] block: blk_init_allocated_queue() set q->fq as NULL in the (Ming Lei) [1614198]
- [block] nvme: use blk API to remap ref tags for IOs with metadata (Ming Lei) [1614198]
- [block] block: move dif_prepare/dif_complete functions to block layer (Ming Lei) [1614198]
- [block] block: move ref_tag calculation func to the block layer (Ming Lei) [1614198]
- [block] block: don't account for split bio's size in cgroup stats (Ming Lei) [1614198]
- [block] pktcdvd: Fix possible Spectre-v1 for pkt_devs (Ming Lei) [1614198]
- [block] partitions/aix: append null character to print data from disk (Ming Lei) [1614198]
- [block] partitions/aix: fix usage of uninitialized lv_info and lvname (Ming Lei) [1614198]
- [block] readahead: stricter check for bdi io_pages (Ming Lei) [1614198]
- [block] scsi: virtio_scsi: fix pi_bytes(out, in) on 4 KiB block size (Ming Lei) [1614198]
- [block] block: move bio_integrity_(intervals, bytes) into blkdev.h (Ming Lei) [1614198]
- [block] xen/blkfront: remove unused macros (Ming Lei) [1614198]
- [block] block: allow max_discard_segments to be stacked (Ming Lei) [1614198]
- [block] block: unexport bio_clone_bioset (Ming Lei) [1614198]
- [block] md: remove a bogus comment (Ming Lei) [1614198]
- [block] block: remove bio_clone_kmalloc (Ming Lei) [1614198]
- [block] exofs: use bio_clone_fast in _write_mirror (Ming Lei) [1614198]
- [block] bcache: don't clone bio in bch_data_verify (Ming Lei) [1614198]
- [block] block: bio_set_pages_dirty can't see NULL bv_page in a valid (Ming Lei) [1614198]
- [block] block: simplify bio_check_pages_dirty (Ming Lei) [1614198]
- [block] block: Rename the null_blk_mod kernel module back into (Ming Lei) [1614198]
- [block] blk-mq: fail the request in case issue failure (Ming Lei) [1614305]
- [block] blk-rq-qos: make depth comparisons unsigned (Ming Lei) [1614198]
- [block] blkcg: Track DISCARD statistics and output them in cgroup (Ming Lei) [1614198]
- [block] block: Track DISCARD statistics and output them in stat and (Ming Lei) [1614198]
- [block] block: Add and use op_stat_group() for indexing disk_stat (Ming Lei) [1614198]
- [block] block: Define and use STAT_READ and STAT_WRITE (Ming Lei) [1614198]
- [block] block: Add part_stat_read_accum to read across field entries (Ming Lei) [1614198]
- [block] block: make bdev_ops->rw_page() take a REQ_OP instead of bool (Ming Lei) [1614198]
- [block] pktcdvd: remove assignment in if condition (Ming Lei) [1614198]
- [block] blk-mq: issue directly if hw queue isn't busy in case of (Ming Lei) [1614305]
- [block] blk-iolatency: truncate our current time (Ming Lei) [1614198]
- [block] blk-iolatency: don't change the latency window (Ming Lei) [1614198]
- [block] block: remove blkdev_entry_to_request() macro (Ming Lei) [1614198]
- [block] block: skd: Use pad printk format for dma_addr_t values (Ming Lei) [1614198]
- [block] bsg: remove read/write support (Ming Lei) [1614198]
- [block] blk-iolatency: fix max_depth comparisons (Ming Lei) [1614198]
- [block] block: iolatency: avoid 64-bit division (Ming Lei) [1614198]
- [block] block/DAC960.c: fix defined but not used build warnings (Ming Lei) [1614198]
- [block] null_blk: add zone support (Ming Lei) [1614198]
- [block] null_blk: move shared definitions to header file (Ming Lei) [1614198]
- [block] block: Add default switch case to blk_pm_allow_request() to (Ming Lei) [1614198]
- [block] block: fix infinite loop if the device loses discard (Ming Lei) [1614198]
- [block] block, mm: remove unnecessary __GFP_HIGH flag (Ming Lei) [1614198]
- [block] null_blk: remove NULLB_DEV_FL_CONFIGURED on turning off nullb (Ming Lei) [1614198]
- [block] mm: skip readahead if the cgroup is congested (Ming Lei) [1614198]
- [block] Documentation: add a doc for blk-iolatency (Ming Lei) [1614198]
- [block] block: introduce blk-iolatency io controller (Ming Lei) [1614198]
- [block] rq-qos: introduce dio_bio callback (Ming Lei) [1614198]
- [block] block: remove external dependency on wbt_flags (Ming Lei) [1614198]
- [block] blk-rq-qos: refactor out common elements of blk-wbt (Ming Lei) [1614198]
- [block] blk-stat: export helpers for modifying blk_rq_stat (Ming Lei) [1614198]
- [block] memcontrol: schedule throttling if we are congested (Ming Lei) [1614198]
- [block] blkcg: add generic throttling mechanism (Ming Lei) [1614198]
- [block] swap, blkcg: issue swap io with the appropriate context (Ming Lei) [1614198]
- [block] blk: introduce REQ_SWAP (Ming Lei) [1614198]
- [block] blk-cgroup: allow controllers to output their own stats (Ming Lei) [1614198]
- [block] block: introduce bio_issue_as_root_blkg (Ming Lei) [1614198]
- [block] block: add bi_blkg to the bio for cgroups (Ming Lei) [1614198]
- [block] blk-mq: dequeue request one by one from sw queue if hctx is (Ming Lei) [1614305]
- [block] block/loop: mark expected switch fall-through (Ming Lei) [1614198]
- [block] drbd: mark expected switch fall-throughs (Ming Lei) [1614198]
- [block] blk-mq: only attempt to merge bio if there is rq in sw queue (Ming Lei) [1614305]
- [block] blk-mq: use list_splice_tail_init() to insert requests (Ming Lei) [1614305]
- [block] blk-mq: fix typo in a function comment (Ming Lei) [1614198]
- [block] blk-mq: code clean-up by adding an API to clear set->mq_map (Ming Lei) [1614198]
- [block] paride: remove redundant variable n (Ming Lei) [1614198]
- [block] partitions/ldm: remove redundant pointer dgrp (Ming Lei) [1614198]
- [block] loop: remove redundant pointer inode (Ming Lei) [1614198]
- [block] block/floppy: remove redundant variable dflags (Ming Lei) [1614198]
- [block] Block: blk-throttle: set low_valid immediately once one (Ming Lei) [1614198]
- [block] Blktrace: bail out early if block debugfs is not configured (Ming Lei) [1614198]
- [block] block: Document how blk_update_request() handles (Ming Lei) [1614198]
- [block] drbd: Do not redefine __must_hold() (Ming Lei) [1614198]
- [block] blk-mq: avoid to synchronize rcu inside blk_cleanup_queue() (Ming Lei) [1597067]
- [block] blk-mq: remove synchronize_rcu() from (Ming Lei) [1597067]
- [block] blk-mq: introduce new lock for protecting hctx->dispatch_wait (Ming Lei) [1597067]
- [block] blk-mq: don't pass **hctx to blk_mq_mark_tag_wait() (Ming Lei) [1597067]
- [block] blk-mq: cleanup blk_mq_get_driver_tag() (Ming Lei) [1597067]
- [block] block, bfq: give a better name to bfq_bfqq_may_idle (Ming Lei) [1614198]
- [block] block, bfq: fix service being wrongly set to zero in case of (Ming Lei) [1614198]
- [block] block, bfq: do not expire a queue that will deserve dispatch (Ming Lei) [1614198]
- [block] block, bfq: add/remove entity weights correctly (Ming Lei) [1614198]
- [block] block: Make struct request_queue smaller for (Ming Lei) [1614198]
- [block] block: Inline blk_queue_nr_zones() (Ming Lei) [1614198]
- [block] block: Remove bdev_nr_zones() (Ming Lei) [1614198]
- [block] include/uapi/linux/blkzoned.h: Remove a superfluous __packed (Ming Lei) [1614198]
- [block] block: Remove a superfluous cast from blkdev_report_zones() (Ming Lei) [1614198]

* Fri Aug 24 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-3.el8]
- [net] tls: mark as Tech Preview (Sabrina Dubroca) [1570255]
- [pci] PCI/VPD: Check for VPD access completion before checking for timeout (Myron Stowe) [1618820]
- [rpmspec] redhat: remove bootwrapper subpackage (Gustavo Duarte) [1578399]
- [virt] kvm: x86: Set highest physical address bits in non-present/reserved SPTEs (Paolo Bonzini) [1614808]
- [virt] KVM/x86: Use CC_SET()/CC_OUT in arch/x86/kvm/vmx.c (Paolo Bonzini) [1614808]
- [virt] KVM: X86: Implement PV IPIs in linux guest (Paolo Bonzini) [1614808]
- [virt] KVM: X86: Add kvm hypervisor init time platform setup callback (Paolo Bonzini) [1614808]
- [virt] KVM: X86: Implement "send IPI" hypercall (Paolo Bonzini) [1614808]
- [virt] KVM/x86: Move X86_CR4_OSXSAVE check into kvm_valid_sregs() (Paolo Bonzini) [1614808]
- [virt] KVM: x86: Skip pae_root shadow allocation if tdp enabled (Paolo Bonzini) [1614808]
- [virt] KVM/MMU: Combine flushing remote tlb in mmu_set_spte() (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: skip VMWRITE of HOST_(FS, GS)_BASE when possible (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: skip VMWRITE of HOST_(FS, GS)_SEL when possible (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: always initialize HOST_(FS, GS)_BASE to zero during setup (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: move struct host_state usage to struct loaded_vmcs (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: compute need to reload FS/GS/LDT on demand (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: remove a misleading comment regarding vmcs02 fields (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: rename __vmx_load_host_state() and vmx_save_host_state() (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: add dedicated utility to access guest's kernel_gs_base (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: track host_state.loaded using a loaded_vmcs pointer (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: refactor segmentation code in vmx_save_host_state() (Paolo Bonzini) [1614808]
- [virt] kvm: nVMX: Fix fault priority for VMX operations (Paolo Bonzini) [1614808]
- [virt] kvm: nVMX: Fix fault vector for VMX operation at CPL > 0 (Paolo Bonzini) [1614808]
- [virt] KVM: try __get_user_pages_fast even if not in atomic context (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: Add tlb_remote_flush callback support (Paolo Bonzini) [1614808]
- [virt] KVM: x86: Add tlb remote flush callback in kvm_x86_ops (Paolo Bonzini) [1614808]
- [virt] X86/Hyper-V: Add hyperv_nested_flush_guest_mapping ftrace support (Paolo Bonzini) [1614808]
- [virt] X86/Hyper-V: Add flush HvFlushGuestPhysicalAddressSpace hypercall support (Paolo Bonzini) [1614808]
- [virt] x86/kvm: Don't use pvqspinlock code if only 1 vCPU (Paolo Bonzini) [1614808]
- [virt] KVM/MMU: Simplify __kvm_sync_page() function (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Remove CR3_PCID_INVD flag (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Add multi-entry LRU cache for previous CR3s (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Flush only affected TLB entries in kvm_mmu_invlpg* (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Skip shadow page resync on CR3 switch when indicated by guest (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Support selectively freeing either current or previous MMU root (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Add a root_hpa parameter to kvm_mmu->invlpg() (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Skip TLB flush on fast CR3 switch when indicated by guest (Paolo Bonzini) [1614808]
- [virt] kvm: vmx: Support INVPCID in shadow paging mode (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Propagate guest PCIDs to host PCIDs (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Add ability to skip TLB flush when switching CR3 (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Use fast CR3 switch for nested VMX (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Support resetting the MMU context without resetting roots (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Add support for fast CR3 switch across different MMU modes (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Introduce KVM_REQ_LOAD_CR3 (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Introduce kvm_mmu_calc_root_page_role() (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Add fast CR3 switch code path (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Avoid taking MMU lock in kvm_mmu_sync_roots if no sync is needed (Paolo Bonzini) [1614808]
- [virt] kvm: x86: Make sync_page() flush remote TLBs once only (Paolo Bonzini) [1614808]
- [virt] KVM: MMU: drop vcpu param in gpte_access (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Separate logic allocating shadow vmcs to a function (Paolo Bonzini) [1614808]
- [virt] KVM: VMX: Mark vmcs header as shadow in case alloc_vmcs_cpu() allocate shadow vmcs (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Expose VMCS shadowing to L1 guest (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Do not forward VMREAD/VMWRITE VMExits to L1 if required so by vmcs12 vmread/vmwrite bitmaps (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: vmread/vmwrite: Use shadow vmcs12 if running L2 (Paolo Bonzini) [1614808]
- [virt] KVM: selftests: add tests for shadow VMCS save/restore (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: include shadow vmcs12 in nested state (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Cache shadow vmcs12 on VMEntry and flush to memory on VMExit (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Verify VMCS shadowing VMCS link pointer (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Verify VMCS shadowing controls (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Introduce nested_cpu_has_shadow_vmcs() (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Fail VMLAUNCH and VMRESUME on shadow VMCS (Paolo Bonzini) [1614808]
- [virt] KVM: nVMX: Allow VMPTRLD for shadow VMCS if vCPU supports VMCS shadowing (Paolo Bonzini) [1614808]
- [virt] KVM: VMX: Change vmcs12(read, write)_any() to receive vmcs12 as parameter (Paolo Bonzini) [1614808]
- [virt] KVM: VMX: Create struct for VMCS header (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: add test for nested state save/restore (Paolo Bonzini) [1614808]
- [virt] kvm: nVMX: Introduce KVM_CAP_NESTED_STATE (Paolo Bonzini) [1614808]
- [virt] KVM: x86: do not load vmcs12 pages while still in SMM (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: add basic test for state save and restore (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: ensure vcpu file is released (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: actually use all of lib/vmx.c (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: create a GDT and TSS (Paolo Bonzini) [1614808]
- [virt] KVM: x86: ensure all MSRs can always be KVM_GET/SET_MSR'd (Paolo Bonzini) [1614808]
- [virt] KVM: vmx: remove save/restore of host BNDCGFS MSR (Paolo Bonzini) [1614808]
- [virt] KVM: Switch 'requests' to be 64-bit (explicitly) (Paolo Bonzini) [1614808]
- [virt] kvm: selftests: add cr4_cpuid_sync_test (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S HV: Read kvm->arch.emul_smt_mode under kvm->lock (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S HV: Allow creating max number of VCPUs on POWER9 (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S HV: Pack VCORE IDs to access full VCPU ID space (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S HV: Fix constant size warning (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S HV: Add of_node_put() in success path (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Book3S: Fix matching of hardware and emulated TCE tables (Paolo Bonzini) [1614808]
- [virt] KVM: PPC: Remove mmio_vsx_tx_sx_enabled in KVM MMIO emulation (Paolo Bonzini) [1614808]

* Fri Aug 17 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-2.el8]
- [net] tcp: Add tcp_clamp_rto_to_user_timeout() helper to improve accuracy (Michael Cambria) [1605024]
- [net] tcp: Add tcp_retransmit_stamp() helper routine (Michael Cambria) [1605024]
- [net] tcp: convert icsk_user_timeout from jiffies to msecs (Michael Cambria) [1605024]
- [kernel] Revert sched/fair: Consider SD_NUMA when selecting the most idle group to schedule on (Lauro Ramos Venancio) [1585746]
- [kernel] redhat: makefile: adjust KBUILD_CFLAGS to reflect kernel.spec for powerpc builds (Gustavo Duarte) [1582568]
- [rpmspec] redhat: spec: build ppc64le kernel with -O3 (Gustavo Duarte) [1582568]
- [scsi] scsi: csiostor: update csio_get_flash_params() (Arjun Vynipadath) [1503574]
- [scsi] csiostor: Add a soft dep on cxgb4 driver (Arjun Vynipadath) [1503574]
- [firmware] dell_rbu: make firmware payload memory uncachable (Charles Rose) [1584401]

* Mon Aug 13 2018 Herton R. Krzesinski <herton@redhat.com> [4.18.0-1.el8]
- [scsi] scsi: lpfc: update driver version to 12.0.0.6 (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Remove lpfc_enable_pbde as module parameter (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Correct LCB ACCept payload (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Limit tracking of tgt queue depth in fast path (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Fix driver crash when re-registering NVME rports (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Fix list corruption on the completion queue (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Fix sysfs Speed value on CNA ports (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: Fix ELS abort on SLI-3 adapters (Dick Kennedy) [1613913]
- [scsi] scsi: lpfc: remove null check on nvmebuf (Dick Kennedy) [1613913]
- [arm64] arm64: fix ACPI dependencies (Bhupesh Sharma) [1556832]
- [arm64] arm64: acpi: fix alignment fault in accessing ACPI (Bhupesh Sharma) [1556832]
- [firmware] efi/arm: map UEFI memory map even w/o runtime services enabled (Bhupesh Sharma) [1556832]
- [firmware] efi/arm: preserve early mapping of UEFI memory map longer for BGRT (Bhupesh Sharma) [1556832]
- [acpi] drivers: acpi: add dependency of EFI for arm64 (Bhupesh Sharma) [1556832]
- [arm64] arm64: export memblock_reserve()d regions via /proc/iomem (Bhupesh Sharma) [1556832]
- [arm64] arm64: kconfig: Ensure spinlock fastpaths are inlined if !PREEMPT (Waiman Long) [1607924]
- [arm64] arm64: locking: Replace ticket lock implementation with qspinlock (Waiman Long) [1607924]
- [arm64] arm64: barrier: Implement smp_cond_load_relaxed (Waiman Long) [1607924]
- [scsi] scsi: lpfc: Revise copyright for new company language (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: update driver version to 12.0.0.5 (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: devloss timeout race condition caused null pointer reference (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Fix NVME Target crash in defer rcv logic (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Support duration field in Link Cable Beacon V1 command (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Make PBDE optimizations configurable (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Fix abort error path for NVMET (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Fix panic if driver unloaded when port is offline (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Fix driver not setting dpp bits correctly in doorbell word (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: Add Buffer overflow check, when nvme_info larger than PAGE_SIZE (Dick Kennedy) [1600946]
- [scsi] scsi: lpfc: use monotonic timestamps for statistics (Dick Kennedy) [1600946]
- [x86] mark intel knights landing and knights mill unsupported (David Arcari) [1610493]
- [netdrv] igb: Remove superfluous reset to PHY and page 0 selection (Corinna Vinschen) [1612824]
- [tools] selftests/powerpc: Fix ptrace-pkey for default execute permission change (Steve Best) [1498799]
- [tools] selftests/powerpc: Fix core-pkey for default execute permission change (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: make protection key 0 less special (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: Preallocate execute-only key (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: Fix calculation of total pkeys (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: Save the pkey registers before fork (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: key allocation/deallocation must not change pkey registers (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: Deny read/write/execute by default (Steve Best) [1498799]
- [powerpc] powerpc/pkeys: Give all threads control of their key permissions (Steve Best) [1498799]
- [s390] KVM: s390: Add huge page enablement control (David Hildenbrand) [1508102]
- [s390] s390/mm: Add huge page gmap linking support (David Hildenbrand) [1508102]
- [s390] s390/mm: hugetlb pages within a gmap can not be freed (David Hildenbrand) [1508102]
- [s390] KVM: s390: Beautify skey enable check (David Hildenbrand) [1508102]
- [s390] KVM: s390: Add skey emulation fault handling (David Hildenbrand) [1508102]
- [s390] s390/mm: Add huge pmd storage key handling (David Hildenbrand) [1508102]
- [s390] s390/mm: Clear skeys for newly mapped huge guest pmds (David Hildenbrand) [1508102]
- [s390] s390/mm: Clear huge page storage keys on enable_skey (David Hildenbrand) [1508102]
- [s390] s390/mm: Add huge page dirty sync support (David Hildenbrand) [1508102]
- [s390] s390/mm: Add gmap pmd invalidation and clearing (David Hildenbrand) [1508102]
- [s390] s390/mm: Add gmap pmd notification bit setting (David Hildenbrand) [1508102]
- [s390] s390/mm: Add gmap pmd linking (David Hildenbrand) [1508102]
- [s390] s390/mm: Abstract gmap notify bit setting (David Hildenbrand) [1508102]
- [s390] s390/mm: Make gmap_protect_range more modular (David Hildenbrand) [1508102]
- [s390] KVM: s390: Replace clear_user with kvm_clear_guest (David Hildenbrand) [1508102]
- [hwmon] hwmon: (ibmpowernv) Add attributes to enable/disable sensor groups (Steve Best) [1524684]
- [powerpc] powerpc/powernv: Add support to enable sensor groups (Steve Best) [1524684]
- [net] net/smc: improve delete link processing (Hendrik Brueckner) [1548452]
- [net] net/smc: provide fallback reason code (Hendrik Brueckner) [1548452]
- [net] net/smc: use correct vlan gid of RoCE device (Hendrik Brueckner) [1548452]
- [net] net/smc: fewer parameters for smc_llc_send_confirm_link() (Hendrik Brueckner) [1548452]
- [net] net/smc: remove local variable page in smc_rx_splice() (Hendrik Brueckner) [1548452]
- [net] net/smc: use DECLARE_BITMAP for rtokens_used_mask (Hendrik Brueckner) [1548452]
- [net] net/smc: add function to get link group from link (Hendrik Brueckner) [1548452]
- [net] net/smc: eliminate cursor read and write calls (Hendrik Brueckner) [1548452]
- [net] net/smc: provide smc mode in smc_diag.c (Hendrik Brueckner) [1548452]
- [s390] s390/ism: add device driver for internal shared memory (Hendrik Brueckner) [1548452]
- [net] net/smc: add SMC-D diag support (Hendrik Brueckner) [1548452]
- [net] net/smc: add SMC-D support in af_smc (Hendrik Brueckner) [1548452]
- [net] net/smc: add SMC-D support in data transfer (Hendrik Brueckner) [1548452]
- [net] net/smc: add SMC-D support in CLC messages (Hendrik Brueckner) [1548452]
- [net] net/smc: add pnetid support for SMC-D and ISM (Hendrik Brueckner) [1548452]
- [net] net/smc: add base infrastructure for SMC-D and ISM (Hendrik Brueckner) [1548452]
- [net] net/smc: add pnetid support (Hendrik Brueckner) [1548452]
- [net] net/smc: determine port attributes independent from pnet table (Hendrik Brueckner) [1548452]
- [x86] mark whiskey-lake processor supported (David Arcari) [1609604]
- [s390] KVM: s390: add etoken support for guests (Thomas Huth) [1612110]
- [char] ipmi: do not configure ipmi for HPE m400 (Tony Camuso) [1583537]
- [scsi] scsi: ipr: Format HCAM overlay ID 0x41 (Steve Best) [1498222]
- [x86] x86/stacktrace: Enable HAVE_RELIABLE_STACKTRACE for the ORC unwinder (Joe Lawrence) [1587952]
- [x86] x86/unwind/orc: Detect the end of the stack (Joe Lawrence) [1587952]
- [x86] x86/stacktrace: Do not fail for ORC with regs on stack (Joe Lawrence) [1587952]
- [x86] x86/stacktrace: Clarify the reliable success paths (Joe Lawrence) [1587952]
- [x86] x86/stacktrace: Remove STACKTRACE_DUMP_ONCE (Joe Lawrence) [1587952]
- [x86] x86/stacktrace: Do not unwind after user regs (Joe Lawrence) [1587952]
- [infiniband] IB/rxe: Mark Soft-RoCE Transport driver as tech-preview (Don Dutile) [1605216]
- [scsi] scsi: smartpqi: bump driver version to 1.1.4-130 (Don Brace) [1503736]
- [scsi] scsi: smartpqi: fix critical ARM issue reading PQI index registers (Don Brace) [1503736]
- [scsi] scsi: smartpqi: add inspur advantech ids (Don Brace) [1503736]
- [scsi] scsi: smartpqi: improve error checking for sync requests (Don Brace) [1503736]
- [scsi] scsi: smartpqi: improve handling for sync requests (Don Brace) [1503736]
- [netdrv] ice: mark driver as tech-preview (Jonathan Toppins) [1495347]
- [init] init/Kconfig: remove EXPERT from CHECKPOINT_RESTORE (Adrian Reber) [1568995 1557617 1525389]
- [scsi] be2iscsi: remove BE3 family support (Maurizio Lombardi) [1598366]
- [x86] update rh_check_supported processor list (David Arcari) [1595918]
- [kernel] kABI: Add generic kABI macros to use for kABI workarounds (Myron Stowe) [1546831]
- [pci] add pci_hw_vendor_status() (Maurizio Lombardi) [1590829]
- [ata] ahci: thunderx2: Fix for errata that affects stop engine (Robert Richter) [1563590]
- [pci] Vulcan: AHCI PCI bar fix for Broadcom Vulcan early silicon (Robert Richter) [1563590]
- [kernel] bpf: set default values for bpf_jit_harden and bpf_jit_kallsyms (Eugene Syromiatnikov) [1569061]
- [kernel] bpf: Add tech preview taint for syscall (Eugene Syromiatnikov) [1559877]
- [kernel] bpf: set unprivileged_bpf_disabled to 1 by default, add a boot parameter (Eugene Syromiatnikov) [1561171]
- [kernel] add Red Hat-specific taint flags (Eugene Syromiatnikov) [1559877]
- [tools] perf tests: Add Python 3 support to attr.py ("Herton R. Krzesinski") [1561505]
- [tools] perf scripts python: Add Python 3 support to stat-cpi.py ("Herton R. Krzesinski") [1561505]
- [kernel] kdump: fix a grammar issue in a kernel message (Dave Young) [1507353]
- [scripts] tags.sh: Ignore redhat/rpm (Prarit Bhargava) [1582586]
- [kernel] put RHEL info into generated headers (Prarit Bhargava) [1544999]
- [kernel] kdump: add support for crashkernel=auto (Dave Young) [1507353]
- [kernel] kdump: round up the total memory size to 128M for crashkernel reservation (Dave Young) [1507353]
- [arm64] acpi: prefer booting with ACPI over DTS (Mark Salter) [1576869]
- [acpi] aarch64: acpi scan: Fix regression related to X-Gene UARTs (Mark Salter) [1519554]
- [acpi] ACPI / irq: Workaround firmware issue on X-Gene based m400 (Mark Salter) [1519554]
- [x86] add rh_check_supported (David Arcari) [1565717]
- [scsi] qla2xxx: Remove PCI IDs of deprecated adapter (Himanshu Madhani) [1572233]
- [scsi] be2iscsi: remove unsupported device IDs (Chris Leech) [1574502]
- [scsi] Removing Obsolete hba pci-ids from rhel8 (Dick Kennedy) [1572321]
- [scsi] hpsa: modify hpsa driver version (Joseph Szczypek) [1471185]
- [scsi] hpsa: remove old cciss-based smartarray pci ids (Joseph Szczypek) [1471185]
- [kernel] rh_taint: add support for marking driver as unsupported (Jonathan Toppins) [1565704]
- [kernel] rh_taint: add support (David Arcari) [1565704]
- [scsi] qla4xxx: Remove deprecated PCI IDs from RHEL 8 (Chad Dupuis) [1518874]
- [scsi] aacraid: Remove depreciated device and vendor PCI id's (Raghava Aditya Renukunta) [1495307]
- [scsi] megaraid_sas: remove deprecated pci-ids (Tomas Henzl) [1509329]
- [scsi] mpt*: remove certain deprecated pci-ids (Tomas Henzl) [1511953]
- [kernel] modules: add rhelversion MODULE_INFO tag (Prarit Bhargava) [1544999]
- [acpi] ACPI: APEI: arm64: Ignore broken HPE moonshot APEI support (Al Stone) [1518076]
- [rpmspec] compute content hash for kernel-headers (Rafael Aquini) [1613003]
- [rpmspec] compress modules on all architectures ("Herton R. Krzesinski") [1614556]
- [rpmspec] add gcov rpm packaging support (Jan Stancek) [1601733]
- [rpmspec] don't ship spdxcheck.py (Jakub Racek)
- [rpmspec] clean stray bpf files (Jakub Racek) [1593309]
- [rpmspec] Copy symvers.gz to /lib/modules (Eugene Syromiatnikov) [1609695]
- [rpmspec] Add kabi-dup related code into specfile (Petr Oros) [1585672]
- [rpmspec] kernel spec: Add and enable kabi check (Petr Oros) [1585672]
- [rpmspec] Enable warning checks for configs in rpm build (Prarit Bhargava) [1589858]
- [rpmspec] remove workaround for rst2man-3 from python3-docutils ("Herton R. Krzesinski") [1602148]
- [rpmspec] fix dist tag used for hardlink in kernel-devel post ("Herton R. Krzesinski") [1596397]
- [scripts] get_maintainer.pl: Add optional .get_maintainer.MAINTAINERS override (Prarit Bhargava) [1595727]
- [rpmspec] drop kernel package dependency on python2 ("Herton R. Krzesinski") [1561505]
- [kernel] Makefile: Move RHEL definitions down (Jakub Racek) [1576568]
- [rpmspec] eBPF: Add bpftool package to spec file (Jerome Marchand) [1559607]
- [rpmspec] fix conflicts with COPYING file while installing newer 4.17 kernel ("Herton R. Krzesinski") [1579563]
- [rpmspec] do not build kernel meta-package on noarch ("Herton R. Krzesinski") [1579512]
- [rpmspec] kernel spec: remove copy of arch/x86/purgatory/sha256.* ("Herton R. Krzesinski")
- [rpmspec] spec: Add new arch/powerpc/kernel/module.lds file to kernel-devel rpm (Steve Best) [1572553]
- [rpmspec] kernel spec: fix recent build errors from brp-mangle-shebangs ("Herton R. Krzesinski") [1575966]
- [rpmspec] Add i386 to ExclusiveArch to fix noarch package build ("Herton R. Krzesinski") [1575152]
- [rpmspec] Build kernel-abi-whitelists package (Petr Oros) [1571189]
- [rpmspec] kernel spec: build bzImage for s390 (Hendrik Brueckner) [1570041]
- [rpmspec] kernel spec: arm64: package module.lds in kernel-devel (Mark Salter) [1569014]
- [rpmspec] Re-enable debuginfo packages and fix build with current dist tag ("Herton R. Krzesinski") [1568901]
- [rpmspec] kernel spec: build kernel-debug on all architectures ("Herton R. Krzesinski") [1567367]
- [rpmspec] don't build kernel meta-package if we are only building kernel headers ("Herton R. Krzesinski")
- [rpmspec] remove use_vdso macro ("Herton R. Krzesinski")
- [rpmspec] build perf and tools man pages instead of relying on a separate tarball ("Herton R. Krzesinski")
- [rpmspec] disable debug build if arch is in nobuildarches list ("Herton R. Krzesinski")
- [rpmspec] remove fedora changelog from spec file ("Herton R. Krzesinski")
- [rpmspec] only support ppc64le builds ("Herton R. Krzesinski")
- [rpmspec] remove x86 32-bit package support ("Herton R. Krzesinski")
- [rpmspec] remove arm 32-bit package support ("Herton R. Krzesinski")
- [rpmspec] remove configuration generation support from kernel spec file ("Herton R. Krzesinski")
- [rpmspec] remove broken out patches from kernel spec file ("Herton R. Krzesinski")
- [rpmspec] import kernel spec from rhel8 bootstrap dist-git ("Herton R. Krzesinski")


###
# The following Emacs magic makes C-c C-e use UTC dates.
# Local Variables:
# rpm-change-log-uses-utc: t
# End:
###
