BASE_RPMFLAGS = $(RPMBUILD) --define "_sourcedir $(SOURCES)" --define "_builddir $(RPM)/BUILD" --define "_srcrpmdir $(RPM)/SRPMS" --define "_rpmdir $(RPM)/RPMS" --define "_specdir $(RPM)/SPECS" --define "dist $(DIST)"
# We really don't want tools/perf/bpftool disabled here, this is just temporary so the targets
# at least behave, until we can sort out how to get those working too
CROSS_RPMFLAGS = $(BASE_RPMFLAGS) --with cross --without tools --without perf --without bpftool --without doc --without selftests

CROSS_PACKAGE_LIST = \
   cross-binutils-common cross-gcc-common diffstat \
   glibc-static ncurses-devel numactl-devel rng-tools

ifeq ($(ARCH),arm64)
CROSS_PACKAGE_LIST += binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu
else ifeq ($(ARCH),powerpc)
CROSS_PACKAGE_LIST += binutils-ppc64le-linux-gnu gcc-ppc64le-linux-gnu
else ifeq ($(ARCH),s390)
CROSS_PACKAGE_LIST += binutils-s390x-linux-gnu gcc-s390x-linux-gnu
else
CROSS_PACKAGE_LIST += binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu
CROSS_PACKAGE_LIST += binutils-ppc64le-linux-gnu gcc-ppc64le-linux-gnu
CROSS_PACKAGE_LIST += binutils-s390x-linux-gnu gcc-s390x-linux-gnu
endif

rh-cross-download:
	@if [ "$(ARCHCONFIG)" != "X86_64" ]; then \
		echo "$(ARCHCONFIG) ERROR: cross compile only enabled for x86_64"; \
		exit 1; \
	fi;
	@ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) \
		$(REDHAT)/scripts/download_cross.sh $(CROSS_PACKAGE_LIST)

rh-cross-aarch64-rpms: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target aarch64 -ba $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "aarch64"

rh-cross-ppc64le-rpms: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target ppc64le -ba $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "ppc64le"

rh-cross-s390x-rpms: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target s390x -ba $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "s390x"

rh-cross-all-rpms: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target aarch64 -bb $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(CROSS_RPMFLAGS) --target ppc64le -bb $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(CROSS_RPMFLAGS) --target s390x -bb $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(BASE_RPMFLAGS) -ba $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "aarch64 ppc64le s390x x86_64"

rh-cross-aarch64-build: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target aarch64 --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "aarch64"

rh-cross-ppc64le-build: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target ppc64le --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "ppc64le"

rh-cross-s390x-build: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target s390x --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "s390x"

rh-cross-all-builds: rh-cross-download rh-sources
	$(REDHAT)/scripts/x86_rngd.sh
	$(CROSS_RPMFLAGS) --target aarch64 --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(CROSS_RPMFLAGS) --target ppc64le --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(CROSS_RPMFLAGS) --target s390x --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(BASE_RPMFLAGS) --without debuginfo -bc $(RPM)/SOURCES/$(PACKAGE_NAME).spec
	$(REDHAT)/scripts/generate-cross-report.sh "aarch64 ppc64le s390x x86_64"
